it will kill you.
This is possibly the best class I've taken at Harvard. It's basically "Everything You Ever Wanted to Know about Computers but Were Too Afraid to Ask". I honestly think it should be a required course for all CS concentrators.
It's like CS61, but actually manageable.  Challenging but rewarding.  Practical, and a really great intro into the parts of the abstraction hierarchy below C.
Know your C, and know it well. Come prepared to work, and don't expect to get a lot of help along the way.
Matt Welsh is an awesome lecturer, and any issues with the class were shadowed by the quality of the teaching and the material.
The material is both interesting and necessary to a more complete understanding of computer systems and programming.
This course delivers practical knowledge fundamental to an understanding of operating systems, and delivers it in an engaging, effective way. If you're at all considering a concentration in CS, you should take this course.
I'd tell future students that the course is very demanding, but with sufficient preparation and enough work during the course, doable and worthwhile.
I feel like the course was falsely advertised.  If you take both 51 and 61 concurrently, be ready for a large workload.  The course may have been "not intended to be extremely difficult", but, in reality, this semester was rough.The subject material is fantastic, but once you find out you're getting a mildly re-hashed version of the same class as at Carnegie Mellon (from the verbatim labs to the lecture slides), the magic fades and you end up feeling a bit dejected about the class.I wish I would have taken this class next semester when its many kinks (hopefully) get ironed out and we CS50 students don't get curved against all of the more advanced CS students who wanted to take an easy class.
If you are a CS major, you MUST know this stuff, and taking CS61 to learn it is a better choice than having your boss teach you this.
this is an excellent and fun class, much much better than cs51, and more useful than cs51 as well.
Don't be fooled by how easy it is in the beginning
Be prepared to work hard, and if you don't have at least a little passion for the material you will be miserable.
The professor is great!
The material is interesting and useful, and the kinks should be ironed out next semester. Just don't take it if you don't feel confident writing C code.
A class that teaches you lots of interesting things.
Take it at the University of Phoenix Online, for christ's sake.  Same thing.
That this course gets much harder right after add/drop, that the course staff seem to not know how to run a large course, that some of them seemed unable to fathom that people from humanities concentrations might take the class because they were interested. On the other hand, the material is very interesting, the lectures are good, and most of the labs are actually enjoyable.
It's really easy in the beginning, and then it's murder after the add/drop deadline.
It's a great way to learn about what's actually going on behind the scenes.
The workload can be wildly unbalanced, but it is manageable.  Professor Welsh is energetic, clever, and overall an excellent lecturer.  The course topics run the gamut of computer hardware and programming and if you are even vaguely interested in the topic will keep you interested throughout the semester.
I would tell them that the lectures are great, and the problem sets are fun, but expect ballooning time commitments and terrible sections.
If you're at all interested in computer science, no matter which branch, the material covered in CS61 is essential.
If you take this class, be prepared to spend a lot of time and effort, but it's worth it, because you'll learn a lot of really awesome (hackerish) skills.
Professor Welsh is an awesome teacher and lecturer, and if CS interests you, this class is extremely interesting.
One of the most interesting CS classes at Harvard.
This is a great course for anyone who wants to be a well-rounded programmer or computer scientist.  I would also highly recommend this course to students pursuing a secondary field in CS - if you take CS50, CS51, CS61, and CS121, you'll have a great background in CS.
Very enjoyable, great lectures, really interesting psets... one of the best courses i've taken here.
The professor is amazing, the material is extremely useful and interesting, and the course is not too difficult.
Fun and challenging with great problem sets.
If you like theory, this isn't the class for you. But if you want to learn a lot about how computers actually work, I would absolutely recommend this class.
Be prepared to learn a lot quickly, work really hard, and really enjoy yourself.
This is a fun but difficult class; there's a lot of material to comprehend, and you need a strong handle on it to do well on the midterms and final.
Don't miss lecture.
This is a really good course. You learn a lot about some really important things in computer science. A lot of things that were previously pretty mysterious to me became very clear, which is a really good feeling to have.
Take it if it is a requirement, not as an elective if you are not a CS major. It is not as intro level as it claims to be.
This course is a roller coaster ride into the bowels of computers. You will learn about what goes on in the background every time you program, and it truly is an eyeopening experience. I absolutely loved this course.
Take this only if interested in how a computer works under the hood.
I would recommend this course to someone who is willing to be responsible and has a considerable programming background.  Otherwise I would say to enter at your peril.
Very good, make sure you have a clear idea of how much time the assignments will take up front.
Great lectures and very interesting material but challenging and the problem sets can be very frustrating at times.
Follow the textbook.
the class follows a mountain pattern. the first two labs are easy and fun, and you will feel very accomplished when you finish them. do not be complacent - the first midterm and third lab ramp the difficulty up substantially. the last two labs decrease in their level of challenge, and the second midterm and take-home final are fair.
It takes some work, but it's an engaging course and I learned a lot.
This class was difficult but ultimately rewarding. I learned so much; Eddie is a great lecturer and managed to pack a lot of content into each hour and a half. The problem sets were difficult, and some were quite time-intensive, but I truly feel like I became a much better programmer because of this course. That said, I wasn't particularly interested in the content going in and figured it would grow on me. I think my lack of genuine interest made me a little more reluctant to devote as much time to the class as it undoubtedly deserved.
I didn't know C at all upon entering this class, and I have gotten by so far. The first 3 psets are ok, but the next 3 are rough. Midterm average was around a 70.
This is a very difficult class. But you will learn a lot. It is very worthwhile, and at the end of the day, you will be a much better programmer.
Don't take this as a senior; take it earlier in your career. Simply because you might feel frustrated taking a large, intro course your senior fall.
Easily the best class I've taken at harvard so far. Eddie makes this class fun but tough. He listens to the students to make sure if it is getting too ridiculous, to give you a few hints to help you along your way. I looked forward to every single lecture and assignment. This class is not easy, but totally worth it.
This is an incredible course!  Prof. Kohler is a great, engaging professor and you'll leave the course with a really solid footing in systems programming.  The material is also essential for any one who wants to code seriously, even those who are only interested in higher-level stuff.
IT'S REALLY HARD.
Kohler is a great lecturer, the material he teaches is really interesting, and every problem set presents a new and interesting range of problems in a fun way.
Definitely take this class! Eddie is the best professor I've had so far at Harvard - his lectures are really interesting and applicable, and he's just a hilarious and great guy in general. It definitely takes a lot of work but you learn a lot doing them, and get to see the way a bunch of systems that we take for granted actually work. It's a great way to see if you like backend/systems type work, and even if you end up not liking that type of CS, it's super relevant information.
This is a butt-kicking course. The systems knowledge covered is absolutely fundamental to any computer scientist, and you'll learn how seemingly small changes to your code can make it much more efficient. But the process in getting there is also butt-kicking, and there's a lot more struggling involved than one might originally anticipate. Overall, you'll work a lot to learn a lot.
Eddie is one of the best teachers I've had at Harvard. His lectures are relevant and engaging, and he puts a huge amount of personal energy into helping students. Not all professors are as engaged with the students and material of a class as he is. He really cares, and as a result even when the material was difficult I never really felt overwhelmed. The problem sets are also really well structured.
If you want to dive in to the nitty grity of a computer, I would totally take this course! However, if you are looking at Computer Science from a higher perspective, I'm not sure if this is the most useful thing to take. Make sure that you recognize the importance of a good partner early on. Think about who you would want to partner with on the first pset and reach out to them early.
Well worth the struggle to understand how your computer works on a deeper level.
Thank you, Eddie, for restoring my faith in CS. So glad I took this courseyou learn super cool material that feels very much applicable to the "real world" situations, and being taught by the amazingly hilarious, engaging, and devoted professor like Eddie certainly didn't hurt.
This class is a good follow-up to CS50. It's harder, but not unreasonable. A good partner is very helpful for the assignments. Exams are difficult, but then the staff hands out partial credit like it's candy.
Make sure you don't fall behind on the material! Ask questions until you fully understand everything. If you don't, the exams will be the death of you in this course, since they have an ability to weed out those details in the course material that you thought were irrelevant in the larger scope of things. It is possible to complete the psets understanding the function of and general ideas of some concepts without fully understanding the mechanisms that make them work, which again, will be tested in the exams.
This is a great class, and it really goes in depth about CS at the low-level. Eddie's such an amazing lecturer, and the psets are hard but worth it! Take the class!!!
Make sure you have lots of free time to put in working on the psets.
CS61 feels like the first real computer science class I've taken at Harvard. It's a lot of work, and the exams are brutal, but I'm a far, far better programmer than I was when the class began. You'll learn things about computers that you've always taken for granted, which is an awesome feeling. Take it and enjoy it; Eddie is a fantastic professor and you'll be in good company with him.
It's challenging, but very rewarding and good to experience Eddie!
Worth it
Eddie is the best lecturer I've had so far at Harvard. This class is a lot of work, but it's really rewarding. Make sure you find a partner early on (when you're allowed to have partners on the psets), and make sure you have enough time in your schedule to really invest in this class. It's so worthwhile but only if you put in the (extensive) time and effort needed to do well in this class, something I learned too late in the semester.
If Eddie is teaching it, definitely taking it. Otherwise it depends on whether or not you liked the low-level part of cs50
Amazing class. You'd be a fool to concentrate in CS and not take it -- challenging in all the right ways, Kohler's the man. Teaching staff is phenomenal.
Eddie Kohler is a fantastic professor. He brings so much energy and enthusiasm to the classroom and the subject matter, it's infectious. The problem sets for this class are great (but of course quite time-consuming). Just be aware that the exams are notoriously difficult and even with a lot of preparation can be pretty rough. Still, I absolutely loved this class. It will make you a better programmer, and you'll really learn C.
TAKE IT!! If I end up working in some sort of programming job, it will be because I took this class.
This class is AMAZING!!! It will take over your life in every way and you will become a slave to it. . .  but you will fall in love with CS and it is completely worth it. Eddie Kohler is an INCREDIBLE teacher -- get to know him if you take this course. He is absolutely hilarious and wonderful and truly a genius. Also, choose a pset partner who you want to become best friends with -- you will be spending a huge amount of time with them and will probably want to kill them otherwise. But seriously, this class is the best thing to happen to CS at Harvard TAKE IT TAKE IT TAKE IT.
This class is both very useful and very painful. In retrospect glad I took it, and I'm excited about the concepts we learned. I do feel like it's not really my "thing," and it might not be yours, either. The course is well-organized and Eddie Kohler is fantastic, but it's still very possible to get absolutely lost.
Actually a fascinating topic. The psets are challenging but extremely rewarding, and it's a great warmup if you plan to eventually take 161. Lecture is good but only helpful if you already have a basic understanding of the material. Otherwise Eddie's examples may go over your head. Go to section, and the section notes and examples are really helpful for getting the major concepts. Overall, highly recommended!
CS61 was really hard. The psets were difficult and the midterm/final were possibly some of the hardest exams I've taken at Harvard. You definitely learn a lot though!

Looking back, I shouldn't have taken the class (did not have enough interest in the material), but I know a lot of other people who loved the class!
While at times the material was not what I can see myself digging even further into of my own interest, the course is so well taught under Professor Kohler that it is very much worth it.
Fantastic class. Professor is super energetic and helpful. Psets are fun and you'll learn a ton. This course taught me so much about the low level aspects of computers.
Take it if Eddie is teaching it! He's A++. He's hilarious (check out his Twitter) and genuinely cares about the topic/making sure students know the material. It's slightly intimidating talking to him, but after your conversation with him, I guarantee you will understand the material much better. This is a class where the professor cares that you're learning the material and not memorizing it.
CS61 teaches you what really goes on in your computer, and covers a lot of ground -- OS, shell, networks/concurrency, bitwise ops, assembly, etc. It's hard, but definitely doable and the psets are a lot of fun!  Exams are ridiculously hard, but even if you fail them, you come out of this class having learned a ton, which was one of the greatest feelings ever.
This was an excellent course in every way. I learned a lot, I became both more skilled with systems and learned about how to code well. The course staff was excellent, and Eddie is an awesome professor. He shows awesome enthusiasm, and this class revived my faith in live-coding during lectures.
This class is a great intro to learning how a computer actually works! You learn to appreciate how fascinating and complex the machine you're staring at right now actually is.
It's the best class I've taken so far at Harvard! Eddie is an amazing teacher, and the coursework is super interesting.
This is a rather challenging but very rewarding course. You will see everything under the hood of the magic box. The reasons for apparently strange things like pointers and the sizes of integers will be made clear to you. And then you will be introduced to newer and stranger concepts that will significantly increase your appreciation of the work that has gone into making the modern computing environment, as well as understanding a bit more about what can go wrong~ (1337 h4xx0r5!)
This is the best class you will ever take at Harvard. If you are serious about computer science, you have to take this class. Learning systems programming will make you a better computer scientist in every way--no matter your specialty. If you aren't a computer scientist, you should still take this class because it teaches you a way of thinking that is useful for every field. Kohler is a fantastic professor as well!
This is a great introduction to systems programming. Professor Kohler is hilarious, and I definitely feel that I know a lot more about C and how computers actually work than I did before. Being able to even think about the systems level was very useful for interviews that I was doing this fall.

It's a fairly different perspective on programming in terms of how to manage resources and get code to run faster and how the computer actually interprets what you're telling it to do  -- I highly recommend it for anyone who's interested in working in CS long term.
A hard but essential class.  Eddie is the best!
The class becomes much easier if you do it with a partner, though you may not learn as much.
To put things in perspective, I only took CS50 prior to this course. The course is hard in the sense that you see quite a bit of new systems-level concepts and you have to apply them. There is a very good support structure for getting you started. Most of my issues stemmed from poor assumptions on my part about how something works - the actual programming of problem sets is not that difficult as the lectures, sections, and problem set spec do a great job of guiding you along the way. You can do the problem sets with a partner which makes things easier. I worked alone (keep in mind, I'm no experienced programmer) and still found the work load to be very manageable if you stay on top of things and do not procrastinate everything until the last minute.
Really good introduction to systems programming. A lot of the experience has to do with your partner so choose well. Some of the problem sets take more time than others, be careful! Tests are very tricky, would take good notes and familiarize yourself with the source code.
This class is a MUST-TAKE if you're anywhere near the CS department. For concentrators, worth making space in your sophomore fall rather than waiting. Try to do this and 121 together.
This is a very good class, and I definitely recommend you take it. Eddie Kohler is very funny and engaging, the pests are interesting and fun, and the material is really cool.
Take it! Definitely worth it to round out the 50/51 series. Eddie is also an amazing lecturer, so if you typically find yourself falling asleep in other cs courses, take this one, because that won't happen!
This is quite possibly one of the best CS courses I've taken at Harvard.  NOTE: It is significantly harder than 50 and 61, but Eddie and the Staff help you to adjust to the difficulty.  Be prepared to spend a decent amount of time on the psets and make sure you have a good partner (don't just pick a good friend, pick someone who is good to work with).  The exams are tough, and I don't think you can guarantee you'll get an A, but the material itself is fascinating and Eddie is simply AMAZING.
Take this course! It is so much better than the two intro courses - you feel like you're learning all the time, lectures are incredibly engaging, and Eddie is a skillful teacher. Finishing the problem sets is rewarding when you look at what you built, especially since it's no longer just "fill in the blanks" and you have to do some design alongside the coding.
This is not CS 50. It's better though.
This class was a highlight to my first semester.  The concepts are challenging at times and some of the psets, especially the first couple can be daunting, but you learn a ton and Eddie is really enthusiastic and inspiring.
Eddie's enthusiasm is contagious! He really made me appreciate the nuts and bolts of what goes on in a computer when it runs programs, and I think this knowledge is essential for a computer science education. You really only need to have taken CS50 to take CS61, but for me having extra programming experience definitely helped. The problem sets are difficult at times, and they're definitely time-consuming, but I found some to be quite fun. The course was pretty organized this year, but the midterm & final are still hard- but it's hard for every student basically. Definitely take this class at some point in your undergrad time if you're a CS major!
Find a pset partner early. This class really requires you to work collaboratively with that partner, so be familiar with git basics. The psets are super time-consuming but totally worth your effort, plus you get to say that you coded up a primitive shell, or dynamic memory allocator, or teensy weensy operating system, which is always cool. I would brush up on C programming skills before heading into this class if you're not feeling completely comfortable, or at least be super comfortable with the level of C taught in CS50. Be open-minded - some of the systems programming concepts might appear foreign to you as it did to me but Prof Kohler is so clear and vivid with his explanations that it makes the material fun to learn and easy to pick up.
This is a great class that does teach you a lot about systems. Eddie is a fantastic instructor who, as a systems expert, is great at presenting code-based lectures. However, run-of-the-mill CS students will have a really tough time in this class. A lot of people take this class as a requirement, but many take it because it's a fun side class for them, and so while less experienced students (i.e. those who took CS50 and 51 and had no prior experience) are struggling through assignments, other people treat the psets as fun little brain-teasers that don't take too much effort. You can go to all the office hours you want without feeling like you're actually making progress in the course. Options for help in this course are very limited, and if you can't figure out a certain part of a pset, there's a big chance you'll get stuck and won't be able to finish it. You can still get something out of the class, but the experience will be pretty difficult.
This was a fun course. Especially the assembly assignment.
This will be one of the harder classes in your schedule, if not the hardest. You have two weeks per problem set, but those two weeks are given for a reason. You'll find yourself struggling a lot if you procrastinate.
You should really only take this course if you are legitimately interested in systems programming. I am not, and took this class anyway because I love math and programming, and I ended up not enjoying it very much.
This is a great class but requires a lot of work.  The problem sets are tricky but rewarding.
I think 61 is a great class, but don't take it unless you have sufficient time/energy to devote to it. Learning the material last minute is particularly difficult, and trying to finish problem sets last minute or do well on the (very difficult but curved) exams without really knowing what's going on can be demoralizing
This class's main focus is to make you a better programmer.  You learn a bit about the way low-level parts of computers work along the way, but you'll overall spend a lot of your time figuring out how to handle complex coding projects.  It also makes you a lot better at debugging.  Professor Kohler is an amazing person; you should take the class just so you can experience his teaching and get to know him.
This class is awesome. Eddie is great and a super engaging lecturer. If you liked the C component of CS50, you'll love CS61.
Take it 80% for the material and 100% for Eddie Kohler. 180% is also indicative of how much time and effort you should expect to put into the psets.
This class is fantastic, but a LOT of work. Eddie is by far the best professor I have ever had, and he is so patient with everyone. The material is really interesting, but it is very difficult. I am not a CS concentrator, and having only taken 50 and 51, I really struggled with a lot of this stuff. I know that some people were much better prepared than I was, but I accepted this large disparity in knowledge. You will learn so much cool stuff about how computers work, and the high to low level connections are so rewarding to understand. My one regret is that I simply didn't have enough time to dedicate to this class. If you take this class, make sure you have room in your schedule to work about 20 hours a week on the material.
The class is phenomenal and Kohler is one of the best professors you'll meet. The material is difficult but rewarding and the class is totally survivable.
I have now taken CS 50, 51, 121, and 61 in the CS department, and CS 61 was (by far) the hardest of those courses. At the same time, the level of depth in this course is unparalleled among CS classes I've taken. CS 61 delves very deep into a lot of important issues (file I/O, kernel programming, assembly, etc.) and empowers students to write very powerful code. (For instance, by the end of this course, you can program file I/O systems that can beat stdio in most cases; implement the ability to create new processes in a simple operating system; and write a simple garbage collector that eliminates much of the inconvenience of having to free memory in C.) After this course, you will feel like an excellent programmer. Eddie is also an excellent instructor; he is funny and engaging, and he is clearly very enthusiastic about the subject matter and about teaching.

This class is not easy by any means (at least not for me). I spent less time on it than I should have, and ended up doing poorly on many psets as a result. But if you are willing to put in a lot of work and don't have a terribly hard course schedule, you can probably manage it well. All in all, if you are willing to work hard, you will learn a TON from this class and come out of it feeling like you have accomplished truly remarkable things. Take this class!!!
Take this class, take this class, take this class, TAKE THIS CLASS.  If you are remotely thinking about doing anything CS at all, TAKE THIS CLASS.  Even if you aren't sure you want to do CS, TAKE THIS CLASS.  This class is amazing.  Eddie is amazing.  I would put a 6 as a rec if I could.
TAKE IT!
CS61 with Professor Kohler is a fantastic class.  Although the first few lectures are a bit slow because students come in with so many different background levels, they're still worth attending because the professor is engaging, funny, and really good at explaining concepts in simple, memorable ways (and at staging hilarious demos!).  The impression I got throughout the semester is that Professor Kohler is just genuinely incredibly excited about anything systems programming-related, and his excitement is infectious.

The problem sets are challenging and definitely needed to be started early, but they're also extremely interesting and are structured in such a way that you feel an incredible sense of accomplishment after completing each one - you defused a (binary) bomb!  You built an entire OS!  I also appreciated how skillfully the logistics were handled - I never felt that we were being given an unfair amount of work or that I wasn't receiving timely feedback.

Lastly, you won't need to read the textbook if you attend lectures, but CS:APP2e is really good as far as textbooks go - clear and comprehensive without ever being simplistic.
For those of you remotely interested in the material, the course is excellent and you can take it pass/fail. Its a hard course nonetheless but the material is awesome. Makes you a better programmer. Seriously, the course is tough but there are so many cool things about the material and Eddie is awesome.
If your CS50 is your only computer science experience, make sure you have enough time to dedicate to this course for the semester. The course material is very interesting; having the time to understand it fully makes it even more rewarding and less stressful.
Eddie Kohler is one of, if not the best, CS professors at Harvard. He has a way of explaining concepts that is hilarious, memorable, and intuitive. Systems is actually not one of my favorite areas of CS, but since Prof Kohler was teaching it, I would rank this class as one of my favorites here. Now if only I had actually gone to lecture in person instead of cramming the videos in before the psets...
It's really great to take a CS class on levels of programming you take for granted. I love CS classes that are less "learn to program good for a job" and more like a humanities class, in the sense that you study "why things are the way they are". I learned a huge amount and Eddie is amazingly funny and nice and smart. Obviously, its a lot of work but that shouldn't bother a CS concentrator, YOU CHOSE THIS LIFESTYLE.
Eddie is a fantastic teacher that knows how to walk the fine line between challenging his students to take learning into their own hands and giving his students enough guidance and resources to make as much progress as quickly as possible. It will likely take a long time outside of class to fully understand the material unless you already have a solid understanding of C programming and systems fundamentals. That said, it is very rewarding to dig deeply into the material and understand what is really going on at the heart of many things you use every day. And if you grasp the material more quickly than others, there is no shortage to how you can extend concepts and further challenge yourself on psets with extra credit opportunities.
It is a very challenging course, though you learn a LOT and Eddie is a wonderful lecturer. Despite the fact that the course kicked my butt, it was a great experience and I have grown tremendously as a problem solver. Not for the faint of heart, but definitely consider this class if you are interested in the inner workings of your computer!
Lectures are well-planned, clear, and engaging. The problem sets are really well-designed, and working through them is a fun, challenging, and rewarding experience. Professor Kohler is also one of the best professors I've had at Harvard!
It was a hard, but rewarding class. Problem sets take forever, but you learn a lot and it's always interesting and fun working on them, so you don't notice the hours as much. Lectures are engaging. And the material is really cool.
This is an awesome class and you will learn a lot, but make sure you enjoy programming and are willing to work hard, otherwise you will probably be unhappy with the amount of work required to do well.
I LOVED this class. I was feeling really burnt out and kind of lost within CS but this class showed me why I chose this concentration in the first place. The tests seem basically IMPOSSIBLE but they test something that every real programmer should have: resourcefulness. If you are smart about your time and know what information will help you, you'll do just fine. The problem sets are super awesome and while difficult, are not impossible. By the end, you'll feel incredibly satisfied and be a C master. I cannot recommend this class enough. The teaching staff is incredible and Eddie is a god. He cares so much about his students and is willing to break things down like you're five (which I definitely needed at points). TAKE THIS CLASS!
This is the most difficult CS class I've taken. In fact, the most difficult class I've taken ever (just finished Sophomore fall). That being said, I highly, highly recommend this class. You learn a lot about how a computer system works as you learn programming on a lower abstraction level. You definitely come out of the class as a stronger programmer.
Take this at your own risk! It is difficult and will require a lot of time, but if you get through it, it is the most rewarding feeling.
While I think the subject matter of this course is very important, and Eddie is a great professor who really cares about his students, I don't think I got as much out of this course as I usually do in CS classes, especially given the amount of time I put into it.
The material is interesting and the lectures are reasonably good. Psets are pretty hard but very fun. Exams are hard. Overall the only major complaint I have about the class is a lack of reference material. The book is too dense and has too much information. The section notes are good but somewhat insufficient. The scribe notes (student produced lecture notes) vary wildly in terms of quality. Otherwise a great class to take as a CS concentrator!
If you enjoy programming you will LOVE this course. Kohler is awesome :)
If Eddie is teaching this class, take it. Even if he isn't, the class covers what I find to be the most interesting aspect of computing. Having taken this course, I feel like I have a pretty solid understanding about how a computer actually works under the hood. I think that's a pretty awesome accomplishment for a class in this day and age of computing and our reliance on computers in our everyday lives. Take it, you won't regret it.
Take it if you're a concentrator. It's very important to become familiar with systems, and this class does a good job getting you acquainted with the subject.
Eddie is really engaging and funny, and the material covered in the class is fascinating! Definitely my best class this semester.
Eddie is a great lecturer and a very approachable professor. Problem sets ended up eating up a lot of my time BUT they can (and should...) be done with a partner and you have 2 weeks for most of them. Still they are tough and shouldn't be left until the last minute.
Coming in with only a CS 50 background, I was absolutely terrified that I wouldn't be able to keep up and would fail absolutely every assignment. The very first lecture helped calm me down in that it was very accessible, and though the very first pset wasn't trivial, it was completely doable with the knowledge I had. Even after the psets got much harder, the staff was always willing to answer questions whether in person or on piazza, and they weren't judgy when it came to "stupid" questions (I really think Kohler wanted to make the course accessible to everyone, and that's just not something you see in every professor here). That said, I can't not mention pset 2. My partner and I spent a solid 60 hours working on something that wasn't actually technically difficult to do, but was guided so poorly that we had no idea how to start or even where to go from there. Considering they gave us an extension on unfinished/failed psets later in the course (targeted mostly at pset 2, I might add), I think the staff realized that something was broken with that assignment, and I'm sure they'll do their best to fix it for next fall. On the topic of partners, picking a good one is absolutely CRUCIAL for the class, if only because coding these things alone would have been absolutely miserable. Overall though, I don't regret taking this class at all  I legitimately enjoyed it as a whole, and would really recommend it for anyone who's even remotely interested in low-level programming, especially if you're scared that you won't be able to do it, 'cause you will. And Kohler's just awesome. Don't miss out.
This class was interesting and also a non-trivial amount of work. I am not a CS concentrator but I do not think that hurt me in this class (I have only taken cs50 in fact). I thought I was able to keep up with the workload. The professor really wants everyone to succeed, so don't worry too much about late days (you will need to take them) and be sure to take advantage of his office hours! The tests are absolutely impossible. Hardest final I have ever taken! Overall, I think I learned a lot though and definitely enjoyed it!
This is an awesome class! Eddie is the best professor that i've ever had! You will learn a lot about systems, something that is applicable everywhere.
You will learn a lot in this class. You'll feel more confident about your programming abilities at the other end. Definitely recommend this class especially if you're a CS concentrator.
CS61 is a difficult but rewarding class. If you're interested in understanding how your code is compiled and run at a low level, this is a good class for you. The psets were definitely challenging, and their difficulty varied; some took me around 6 hours to complete with a partner whereas others took upwards of 30 hours to complete. I don't think this class could be as successful without the challenging psets, though. There is no good way to understand systems programming without trying it yourself.
Difficult, but you'll learn a lot. Only take this class if you're serious about CS.
Don't take it unless systems programming sounds interesting to you!
This is one of the best classes I have ever taken at Harvard. Eddie Kohler is an amazing lecture, who genuinely cares about his students.
Professor Kohler has a lot of personality. He will make this class fun. Take it.
This class is great if you want to vastly improve your coding skills and learn insane amounts about low-level computer functionality. It will take you most of your semester, but it will be worth it.
This course is a great course. Eddie is fantastic and the material is super interesting. That being said, it is NOT an easy course. Be ready to spend MANY MANY hours on the psets, and prepare yourself for killer tests. It is still a very good course, though, and if you are even slightly interested in the material, take it.
This class delves a lot into memory and the grittier aspects of how computers and code operate. Even if that is not as much your interest in CS, this class is helpful in building comfort with important programming concepts, which is a big plus. Also, Kohler is a great lecturer and really wants people to understand and ask questions in class. I would recommend this class even if you're still feeling out CS.
For me, as a freshman in my first semester in this course, it was quite difficult.  My background before college was just AP Computer Science, but challenging myself in taking this course was definitely worth it.  I don't regret taking this at all.  Professor Kohler is a great teacher, and the  TFs are very helpful in office hours and section as well.  As long as you don't expect this course to be a particularly easy one (it was definitely my hardest class this semester), it is certainly worth taking.
After taking this course, I feel like it is one of those courses that is way harder than it needs to be. The material conceptually is pretty easy and the coding assignments aren't very hard once you figure out the basics. However, I feel like the lectures are usually ineffective because Eddie has a tendency to start his explanations a few paragraphs in, making everyone needlessly confused until they google the term to figure out what he is even talking about. Additionally, unlike in 51, the assignments in 61 have little to no instructions on how to proceed. While this does add extra challenge, it doesn't really make you think critically about the problem and instead you just waste time searching the man pages until you eventually find that there is a system call or a function in one of the helper files that does what you needed to do. Then, instead of feeling any accomplishment, you just feel like you wasted your time since you just found something that was already there that you didn't know about. The exams are made to be hard, but the standard deviation is so low that they are hardly an indicator of anything and most everyone misses the same things usually due to the fact that they were not mentioned in class. That being said, I feel like I learned a lot about systems and have a much better understanding of how they work. I learned far more in this course than in 51 and I also feel much more confident programming in C after this course. Eddie is also a great guy and is more than happy to talk to you after class or in office hours. In summary, you will learn, but the course will be more painful than it needs to be which is particularly frustrating since it could be so easily fixed if Eddie explained everything from the beginning without assuming the class knows all the terminology and if the assignments had some guidance as to how to proceed.
This class is absolutely amazing, if you're studying CS then I definitely recommend taking it. Having taken only CS 50 prior to this class, this class seemed a bit overwhelming at first due to the significant jump there is between this class and CS 50. While in CS 50 they hold your hand with problem set walkthroughs and things like that, the only hand holding you'll receive in this class is the infamous /* Your code goes here */. That being said, once I got accustomed to how things worked in the class, I was fine. Problem sets are due every other week, so you'll have almost no work one week and then a ton the next. They're very challenging and require a significant amount of time. Luckily, you'll allowed to pair up with a partner to do problem sets, an asset that greatly can further your learning process (and help your grade!). I'd recommend starting them the Sunday before they're due (they due on Fridays) so that you can go to office hours with specific questions. Regarding the midterm and final for this class, the exams are absolutely impossible. They are open book, open note, and open computer (yes, that's right, open computer) so the questions are extremely difficult. However, luckily the grading is not that harsh, as TFs are looking to throw points at you as long as you attempt the question. Pray for a good curve. And last but not least, the professor, Eddie Kohler. Eddie is an absolutely amazing professor. His lectures are incredibly engaging, he's super helpful at office hours (even for small, basic things like setting up a git repository or something), and just someone you want to be around. Get to know him personally at office hours! You'll have a blast doing so and will learn a lot. Overall, this is great class, and a must-take preparation class for the terror that is CS 161.
The tests are really hard.
Very difficult class.  Eddie Kohler is a brilliant professor, almost too brilliant though.  He literally codes on the spot and can go too fast at times to really understand the difficult concepts he lectures on.  The lectures are often pretty interesting but hard to follow at times and disorganized.  The code samples can be nice but they get overwhelming to look at when there are literally 15 per lecture.  There should really be more office hours or supplemental aids to help with psets as well since some of them were just above and beyond difficult given what we knew.  The midterm was also very difficult and most of us were pretty much just saved by the lenient grading of the teaching staff.
This class is great.  The lectures were interesting, and problem sets were a lot of fun.  If you're at all interested in systems programming, definitely take this course.
Professor Kohler is a very clear lecturer, and is really devoted to making sure everyone understands the material. Assignments are super interesting and really help in understanding how the computer works at a low level. Definitely take the class!
Not too difficult, although some of the concepts at the end, i.e., concurrency, may be a bit harder to grasp. Watch out if aforementioned concepts are tested on the final because it will be brutal. The main part is that the psets can easily take 20+ hours each if you have to debug
Great class! Problem sets are interesting and intense--exams are super difficult. Eddie is a great professor though. Definitely recommended
For computer science concentrators or any students who want to learn a little more about how the inner workings of your computer work, take this class! Eddie is a really really really good lecturer that engages the audience and teaches the material in a very comprehensive class. You will not regret taking this!
This class is profoundly interesting for those interested in the nuts and bolts of computing; I wasn't, and if you don't enjoy fairly ugly C code you won't enjoy this course. Eddie is a great lecturer, though, and you'll learn the material well (despite that the exams don't test your knowledge well).
This is a great class, the textbook really teaches you a lot. If you'd like to do well in it though, it's important you go to lecture and section! This is the only way to be prepared for the very difficult exams.Everyone does get owned by the exams, but things generally turn out fine.
This course is difficult... Very difficult, but doable and enjoyable.
CS 61 is a really nice class if you're a CS concentrator or looking for a secondary or looking for more coding experience. It's not necessarily the most organized class and the exams are pretty difficult and a bit disconnected from the pset, but you will have a "language immersion" class in C, and Eddie will really get you thinking about how to write correct and efficient code. In CS51, you might have built up a lot of different abstractions; this class is about taking those abstractions apart and really understanding how they work at the core. You will become a better programmer because of this class, and I recommend it if you're looking for more coding experience.
This course covers some very interesting material that will be both challenging and engaging. Prof. Kohler is absolutely fabulous and will challenge you to think critically about the material. The lectures were always well structured and easy to follow. The psets were rather inconsistent in difficulty, ranging from 3 hours for completion, to 30 hours for completion. This being said, the sense of satisfaction one gets after completion is unparalleled. However, even having a good grip on the lectures, course material, and psets will not prepare you for the exams. I found them to be extremely challenging and abstract - feeling completely clueless on sections that I was more than comfortable with during the semester. So beware of the exams - for the nasal demons shall conquer thee.
It is a great class if you are interested in the material. Even if you are not interested in the material, it is almost necessary to learn the basic low level stuff if you are a CS concentrator.
This is a very rewarding but difficult course
It is a good introduction to systems programming, and also gives you a good feel for its importance.
Excellent course in C programming. Also teaches you a lot about computers.
Great class - big bang for your buck. You spend each unit on one interesting higher-level (or I guess lower-level) aspect of the C compiler/Intel machine that really comes together nicely.
Best course I've taken at Harvard, and it convinced me to declare CS. Interesting and engaging lectures that actually explained points clearly. Problem sets were difficult, but engaging, and rewarding once I ultimately got through them. The concepts got harder as the course went on, but the problem sets got easier after the caching pset (pset 2). Watch out for the final, however, as it is very difficult.
It will take up most of your time.
Everyone considering studying computer science needs to take this course. It introduces the nuances of computer programming that aren't taught in any other course.
Definitely start psets early. Get to know Eddie and attempt extra credit. Scope out a pset partner that isn't too advanced, so that you're equally sharing the work and learning. Go to lecture.
It is a sweet class. If you have reservations about it being to hard, I would tell you to take it because you will be fine.
This course deals with important material for understanding systems and machine organization, but the problem sets were a bit overwhelming at times in part because the course is not that well organized. This was Kohler's second year teaching and the problem sets had bugs that even the TFs has trouble with. There was a lot of anguish for this course and I think though Kohler has good intentions to challenge his students, at times it was too much.
If you're considering computer science as a concentration, this class does a fantastic job of giving a better understanding of all the "under the hood" happenings in your machine. The class is quite rigorous and can be difficult at times, but the results are quite worth it.
It might be the most difficult class for you throughout the semester, but also your favorite one. Start doing the assignments on time - when you have two weeks for solving them, you literally need two weeks for solving them. Make sure you understand the solutions for every assignment, it all adds up to the final - which is going to be a killer exam. Get ready for that.
make sure you are actually interested in low level programming, or else the course might get really boring.
This class is simply fantastic.  It's amazing seeing how to basically build fast and efficient computer systems from the ground up.  Professor Kohler's a boss who generates so much enthusiasm for the course material.  He is clearly really passionate about teaching and the material, and this rubs off on the students of the class.
This course will make definitely make you a better programmer, but it probably does this the "hard way." Much more time is spent debugging than thinking while you do the problem sets, and the tests are difficult but curved generously. It's a good class to take if you want to become a hardcore programmer, but probably not good if you're more interested in math (in that case, take CS 51, 121, or 124 instead).
If you feel like taking CS61 is the natural next step to concentrating in CS, I encourage you to reconsider. The only redeeming aspect of this course is Eddie's sense of humor. Okay, and some of the psets are kind of cool. Some. My main complaints with this class stem from a few course policies which make it interfere with everything else in your life. Eddie announced in class that he'd given us a class-wide extension into reading week for the last pset. Yay! When I should be studying for my exams, I'll be working on a pset! This pset wasn't difficult, but I object to the principle of it. Similarly, during midterm season, expect to devote all of your time to CS61. You'll have a pset that takes you a long time to complete followed immediately by studying for this class's midterm followed immediately by another CS61 pset. Another class policy which got under my skin was the way we were expected to go back and fix up old psets when we'd under-performed. Now, in an ideal world, this is a pretty cool idea. But within the context of Harvard, it's just brutal. Just one drop pset, plz?Eddie is a really nice guy, so it's hard to be this critical, but I often loathed this class.
Start the problem sets early!
This course is a great introduction to lower level programming. If you've ever wanted to take a more in-depth peek under the hood, this is a great class for it.
CS  61 is a really excellent class and I highly recommend taking it if you're at all interested in building things  especially if Eddie is teaching it again. The class really improved both my coding ability and my ability to think and solve low-level problems, and it taught me SO much about how computers actually work. Eddie has consistently been an extremely engaging and involved professor and made the class amazing.
Kohler is a wonderful guy and a pretty good teacher, although at times his lecture style (writing code in front of you) can be hard to follow and not particularly helpful for problem sets/exams.  Expect to work hard, but also learn a lot.  I might recommend waiting on this course if you're considering it after 50/51 -- programming maturity is very helpful.  Yes the exams are completely insane.
It's hard, but worth it. Very rewarding and interesting.
Eddie is an epic instructor! It's honestly my favorite class up to now. The class is not easy at all though, get prepared for a brutal midterm/final.
Only take this course if you really enjoy the material!  It's definitely very manageable, but it can be a huge drag if you don't like what you're doing.  The psets will take a decent amount of time and you'll learn to be a very solid programmer in C.
This course is awesome for two reasons: the material and Eddie. The material is really interesting. First you really flesh out some of the harder stuff from CS50 (memory management). Then you dive into some new material like assembly, OS, parallelism, etc. Really great stuff. Although not as vital as say CS124, you definitely learn some relevant stuff. It can be challenging but it's not impossible. Second, Eddie is amazing. He's super funny and enthusiastic. He can be really helpful and he is available to answer any question. Definitely take this if he's teaching it.
This course is a lot of work, but Professor Kohler is very supportive and fun as you struggle through. Also the problem sets are so so cool, as is all the material you learn. It's awesome to realize you can understand so many of the things your computer is doing.
Really great class.  I took it right after CS50 without any other background, and it was extremely difficult but still a good class.  Office hours are very helpful.  Would recommend against taking it with Stat 110, though a lot of people do.
I really loved this class and Kohler is a boss. Coming from a more theoretical background (in terms of math/physics interest) I didn't suppose this class would interest me much, but it ended up being my favourite one this semester.
This is a great class! Eddie is very enthusiastic about systems and does his best to make it both enjoyable and understandable. The teaching fellows are definitely awesome and are willing to help. Be prepared to pay attention in lecture though because getting distracted for a couple of minutes lead to you being lost for the rest of the lecture. The midterms and finals are extremely difficult but Eddie is pretty lenient with grading and so it shouldn't be too bad. Take the class!
I hope you know some C coming in to the class.
Professor Kohler is an amazing professor!  However, make sure you find a partner for the psets.  Otherwise, you will agonize over them.  The psets themselves are excellent and well thought out.  I didn't find a moment when I felt the psets were unfair but I always felt challenged.
You will learn a lot from Eddie. He's a great lecturer and really tries to make himself accessible both in class and at his office hours. The TFs are not as helpful because the problem sets are complex and Eddie often makes a lot of changes from year to year. Section is good for learning concepts but when it comes to doing the pset, make sure you have a good partner willing to put in a lot of time in making the psets work. When it comes down to it, Eddie only cares about if you are learning the material and how you show that will reflect your grade.
51's better.
You should know this stuff if you're planning to study CS seriously. The psets are challenging, but they are doable if you attend lecture and section. Best CS class I have attended so far.
This was a fun class, and Kohler is a great lecturer. The topics and ideas were "derived" from student responses as opposed to being dictated to you. Problem sets were infrequent-- one every two weeks. You'll learn about how your computer works from the inside out, and you'll learn all about how inefficient some of the code you wrote in CS50 was. This class, to an extent, has demystified the computer to me.Sections were somewhat disorganized (they all had the same material, but my section usually didn't cover all of it. I also had different a different section leader on some days.), but still helpful. Section notes were sometimes posted an indeterminate number of days after section rather than before, which occasionally made it mildly difficult to follow.The exams were rather difficult, many would say unfairly so. There was one midterm and one final, both of which were centered more around puzzles than anything else. I'd highly recommend reading the book for them (I didn't realize this until the final). It really helps bring the material together. Practice problems are also important, but there was a rather large dearth of those. Many of the exam review materials were provided last-minute.Despite these things, I'd still highly recommend the class, and I'd recommend attending lecture. When the exams weren't happening, this class was a lot of fun.
If you take it with Eddie Kohler, be prepared to pset hours and hours oner the problem sets. The problem sets will be hard but you will be a better programmer at the end of it. The course is not easy, though. Invest in the time, do all the reading, attend all the lectures, go to all of the sections. Please.Also, go to Eddie's OH. They are incredibly helpful. Moreover, Eddie likes students who participate. Be that kid.
I learned far more in this class than I did in CS50
Eddie Kohler is the man :)When you take a course you should consider both the material and the professor. In this case, both were awesome.
Guys, this is a lot to take in and it's some pretty difficult material (especially the exams) but if you're interested in computer science then this is the course to take before you graduate.
Very good class, but don't take this instead of CS51 (take both if possible!). 51 covers more broad topics such as object-oriented and functional programming, which are more necessary to know.
This is a great course. I took this pass/fail, still worked really hard and still learned an incredible amount. Highly recommend it. Kohler is a fantastic lecturer and the psets are great for teaching material. I do wish sometimes it was more obvious where to start in the psets though.
If you read the book before class you will do way better. Go to Eddie's office hours!
This class is most accurately described as "ineffective". The assignments are cool, but the lectures are extraordinarily unhelpful. Eddie Kohler starts every explanation about three paragraphs into it, and then beats that to death with examples. So you're confused until you figure out the context of what he's talking about, and then you're extremely bored. So for an entire lecture you just alternate between needlessly confused and bored. The assignments kind of make it worth it? Systems stuff is important, so if you take this class, make sure you watch the old CS61 lectures (or another school's lectures) (or read a good book) so you actually learn the material well.
Make educated guesses for exams
Take it!!! It's really good and useful and you learn a ton. Just be prepared to spend a TON of time when the psets are due... the material for them isn't all covered until a few days before they are due. My partner and I spent upwards of 60 hours on the first pset, but after that it was way more manageable. Also- read the book since it's so good, and work with a partner, since that is the best!
I would recommend this course with enthusiasm!
Psets are every other week, so you'll be free some weeks and scrambling others.  The material is fascinating and Kohler presents it in an entertaining way.  Sometimes it's hard to follow his lectures, when he goes through code quickly.  You should at least shop it.
Start on the psets early, they're all very time consuming and sometimes frustrating.  It helps if you take breaks in between to work on something else, so that a new idea might pop in if you are blocked on something.
CS 50 by itself did not feel like adequate preparation. If you really feel comfortable with CS in general, this class may be for you. It is not for the people who simply like CS. I felt constantly dragged along without being able to fully wrap my head around the material. The problem sets usually helped somewhat. Eddie Kohler is a great guy - really nice and helpful. That being said, I couldn't follow his lectures for the life of me. A lot of people really liked his lectures, but that's probably because they were able to follow along (they are great if you can follow). Just beware you may end up not knowing what is going on.
This course is absolutely integral to a CS degree (or a secondary); however, it was less organized under Kohler's instruction than when Chong taught it (from what I hear). It also got more difficult. Kohler is, however, extremely entertaining and approachable!
eddie kohler is an intelligent professor who assumes that his students already possess certain knowledge. difficult for those of us who don't. also, exams are not reflective of materials learned in this class (i.e. write assembly code!).
Professor Kohler is awesome! It's a hard class but I really enjoyed the lectures and doing the problem sets. Just be prepared to have a few late nights.
Applicable concepts, entertaining lecture, fun and instructive problem sets. Beware: problem sets cover only approximately half of the concepts in lecture, and the tests cover everything.
Professor Kohler is hilarious and was a great person to know outside of lecture! Problem sets and the material covered were interesting, though I wish there was more direction given beforehand, since a lot of times it felt we were feeling in the dark.
Hardest tests in my entire life.
For sure take this (and especially if it's Kohler teaching). Kohler's awesome, although he does not wear shoes during lecture (this is a deal-breaker for many students). Note that psets get kinda lame in the 2nd half of the course, but it's still a worthwhile course. Take 51 though if you're doing a secondary and not super interested in systems.They say the book is "strongly recommended". If you took CS51, this will probably make you think, "lolz don't need that". Which is mostly true. Except on the final there's a bunch of stuff they expect you to know that's much easier if you have the book. Then again, there's *cough* also a beta version of the book online *cough* (which is legal to use!).
Interesting material, though the class seemed more like an extension of the systems concepts we covered in cs50 instead of a class of its own. I didn't like how the material covered in class was was basic, and how we spend often an entire lecture going over an obvious concept (e.g. hoisting invariants out of loops). New pests were sometimes challenging, and frustrating to debug when the staff was unhelpful (having not done them either). I have mixed feelings about how the later psets were open to student's own design. Exams were really creative, and props to Kohler for making them, but they proved a bit problematic. Exam questions never seemed direct or straightforward in testing  conceptual understanding, at least in same way the textbook does. Being able to ace the previous year's exams does not guarantee you will do well on Kohler's. For Kohler's exams, it seemed that good testing-taking skills (e.g. educated guessing) would serve you better than actual solving for the solution (lots of time pressure during midterm).
This course starts very easy (binary addition) and ends up pretty difficult. Make sure you buy the book for when things get tough. Systems are complicated to get all of what's going on, compared to the elegance of other areas of CS, but I think it's worthwhile to take this course so you can understand computers from the bottom up.
There really isn't time to read the book.  Study Eddie's lectures meticulously (I would suggest scribe notes) and go to OH to get to know the guy.  He's pretty darn smart and challenges you to think hard.
The material is important and fairly interesting, but I found Prof. Kohler's teaching style to be difficult to follow (he never uses lecture slides, just flashes between snippets of code) and the class overall to not be very structured. Good if you really dig systems / low-level programming, I guess?
A very fun and great class, you'll learn a lot about the low-level workings of computers and machinery. Although this might at first seem to be irrelevant in a world focusing more on high-level languages and abstraction, understanding what's going on beneath the hood gives an entirely different and deeper perspective on those questions, and only makes solving those problems easier.
Hard but good.
Don't let the pace of lectures lull you into too much of a false sense of security! Even if you're very comfortable with the material, the psets can still take some time to complete. You have two weeks for most of them - don't leave yourself only a couple of days!
If you want to understand how to optimize code, then take this class.
Prof Kohler is awesome and very helpful! I highly recommend CS61 for anyone with an interest in CS beyound CS50.
The material is incredibly interesting. The problem sets are difficult but fun and rewarding. The exams are difficult. Overall, you learn a lot about systems programming.
A very practical course. This class is very helpful to learning some low level details of how the computer works. After this course I feel like a semi-expert on computer memory.
Prof has an interesting teaching style. Challenging but worth it. If you like to code, take it. If you don't, take a different class. You will learn a lot of C and feel comfortable with it by the end. I liked it.
This is what it purports to be- computer systems.  Basically, this means that you make things better by looking at what commands actually do... Frankly, this is nowhere near as cool, in my book, as the stuff in CS51, for example.  That having been said, this course is run well and Eddie is a good lecturer.
Kohler completely changed the psets and the format of the class.  The psets were great and very interesting and solved problems that are more likely to be relevant to the students in their CS careers.  The exams were in a weird format even considering how they were CS exams.  The scope of the class often felt too broad at times and I would have rather concentrated on a few aspects and do more interesting things than briefly be exposed to material just for it too later show up as a test question rather than to complete a pset on this material and actually apply it to coding.
BEST COURSE I HAVE TAKEN AT HARVARD SO FAR. Really cool material if you actually care how your computer works, amazing lectures (with Eddie, but I've heard Chong is also spectacular), useful and informative psets (which are partner-based and are due every two weeks, even though they're only a bit longer/harder than CS51 psets), and overall badassery. If you prefer abstraction and don't actually care how your code compiles, runs, or interfaces with hardware, then you might not thoroughly enjoy the material itself, but Eddie makes lectures so fun you are unlikely to care. 5 stars.
To be frank, Eddie Kohler is a terrible lecturer. I've heard that this class is much better when taught by Steven Chong. If you're genuinely interested in programming, you really can't get away with not taking this class, and much of the material is very interesting. Under more organized leadership, this class could have been great. I'd recommend it with any other professor at the helm.
It's useful to know low-level stuff like this for CS. Also even if you entered the course knowing C very well you'll know it even better by the end.
This is a pretty cool course. It is not at all the next step after CS50 as I thought CS50 was pretty easy but found this to be continuously challenging. Systems programming is incredibly gritty so expect to be writing code that is messy and just gets the job done. The psets take a very long time but they're only every other week or so.
The exams are hard (real hard), the psets are challenging but absolute enlightening and the best part of the course, and Eddie is an extremely entertaining lecturer. When he's not blowing your mind to grab your attention, he's opening your mind to new things. Definitely a necessary course for any CS concentrator. Really relevant concepts.
While Eddie is a perfectly nice guy, this class was a disaster.  The material was significantly harder than previous years, and it was not uncommon to spend upwards of twenty hours on problem sets still not to finish.  Midterm and final exams were insanely difficult too.  Walking away from the final, I have no idea what grade I will have in this class.  Take only if Chung is teaching it.
This class is awesome (practical, intriguing, and rewarding). So worth the time. Oh, and Eddie is a worship-worthy professor. If you have any doubts of that, read his Twitter feed.
A very good introduction to systems course, perfect for those who haven't had experience with it and want to be gently introduced.
You'll definitely learn a lot by taking this class. But be warned. IT'S HARD. The TFS, Randy, Kenny and Carl, ARE AMAZING. They were almos the single best aspect of the class.Professor Kohler, although very engaging, passionate and funny, I think expected too much from the class. CS61 is one of the CS introductory classes, and I felt that he incorporated some grad level elements to the course. Some of us started off with CS50, whereas I felt he mainly tailored his teaching to teach those who have been programming prior to entering college. His exams were unbelievably hard. The curve showed that there were two peaks, which suggests that half the class was struggling. Lectures were also hard to follow because of this. He went extremely quickly, and I often felt lost. I feel bad saying this, but I'm sure if he realizes the real level of the class, he would improve. He's really dedicated. But unfortunately he just had too high expectations for half the class!
A difficult class - not as much work as CS50, but much more brainwork. By the end, you will have a good idea of what goes on inside your computer.
if you are not interested in systems programming, the material will seem very dry.
CS 61 is a wonderful course that teaches the basics of how a computer works and how best to program. I think every good programmer needs to understand at least a little systems program. The problem sets were SUPER fun and much less stressful as they come every 2 weeks, as opposed to every week. Professor Kohler's lectures were also amazing and really cool. The only thing is that you never quite know what to expect for the exams as the review materials (when there was any at all) was not very indicative of the kind of questions that you can expect on the test. That being said, it is a great course that you should definitely consider taking if you want to be a good programmer!
Eddie Kohler is a golden god. He's completely hilarious, really cares about each student's learning, prepares excellent lectures, follow him on twitter, and take this class.
This course is not as easy as people from previous years described (when it was taught with Professor Chong). Problem sets, although assigned only once every two weeks, were for the most part burdensome (especially toward the end of the semester) because the specs and description were very vague and unclear. Midterm and final were both very hard in the sense that they did not straightforwardly test you on the concepts you learned in class. Despite how much I studied the concepts I do not think I could have done any better on the exams because they seemed to test your guessing abilities more than they did your understanding of the course
Read the book early.
Challenging but the professor is great and the material is really interesting (this coming from someone with no prior interest who took this just wanting a coding course).  Don't worry too much about the exams; they are brutal but you will learn from them.  The problem sets are extremely time-consuming but actually really interesting; definitely get a partner for ones where you can have one.  You will probably need to go to OH at some point.
This course is important. You can't consider yourself computer-literate, let alone a computer scientist, without a basic understanding of systems. That said, systems is not for everyone and if it's not your style you might find it frustrating or tedious at times. Regardless, Eddie is a great lecturer, and while I wasn't always excited about the problem sets I was always happy to come to class. If you think you're going into CS, you ought to take this course, and if you're going to take this course, you should take it with Eddie Kohler.
you learn a lot about how computers work.  the material and psets won't challenge you conceptually, but will test how quickly you grasp and understand machines
There was a little class disorganization that made things tricky, but that was to be expected with a new professor this semester. It is paramount that you work with a partner on problem sets. Get that set up early in the course; you will thank yourself later.
Professor Kohler: the man, the myth, the legend. Seriously, take this class. It's amazing! You'll learn so much about the internal workings of programs and what it means when code is "run" on a computer. I will admit that I'm biased when I talk of this course because I love systems programming, but this has been the greatest class that I've ever taken at Harvard so far.
The workload is very sporadic, those who have a fair amount of computer experience will find it takes them exponentially less time to complete assignments.
At the end of CS61, I think of it as kind of complementary to CS51. Whereas CS51 moves beyond just "getting stuff to work" and explores topics such as recursion, algorithms, and data structures in greater depth, CS61 focuses on real-world performance of code. You'll learn how to optimize programs, really understand concurrency, and gain a deeper understanding of how computers actually work at the lower levels.
The assignments were excellent for reinforcing concepts from class and were really fun too!
Disorganized lectures, frustrating problem sets, and difficult exams. The material is fairly interesting, but I would not recommend this course unless the teaching staff promises to revamp the way material is taught.
As a first CS course, it was difficult. I had a sufficient knowledge of C but since the class is full of CS concentrators, I couldn't really count on the curve.
You do learn a lot about systems / low level stuff, but at least in my experience it was not too much from lecture and more from reading the book. Lectures are kind of jumpy and disorganized. All the information was present, but not as easily digestible as one might have liked.For example, we might cover a topic and get halfway through another topic, then the next class we'd go back over that topic but with totally different examples or seemingly conflicting code. Code samples are fine, but it gets a little overwhelming when there are 10 different code samples for every lecture.Overall, I think the course organization did not mesh with my learning style, which is geared towards more organized lectures.
This is a really awesome class. Eddie is amazing, and although he had to make some adjustments to his lecture/teaching style throughout the semester he's always looking for ways to help convey the material better. Lectures are fun and informative. Doesn't take nearly as much time as, say, CS51. Having a problem set due every other week is really great, and many (although not all) of the problem sets don't even require huge amounts of work.
The professor is dynamic and the material interesting. However, in the second half of the semester the course was logistically terrible, and the TFs very uninvolved.
Material is a little challenging at time, but always worth it
this is a great class! you learn a bunch and the psets are very interesting. professor kohler is awesome. he really gets you to think critically. his midterm and final are kinda unconventional and quite difficult, but kinda enjoyable at the same time.
CS61 is a great class! For almost every problem set, when I read the spec, I was sure that I couldn't do the pset, but I was able to complete all of them. The class teaches you a ton about programming in C and how to write fast code.
Prof. Kohler is the best! You must take a class with him. He understands his students. He really loves to teach so even if you ask him stupid questions, he will patiently explain them. I think he is on the students' side. And I think that everything I learned from this class will help me in the future as a programmer. The psets align so well with what is taught in lecture and Kohler knows his material so well! One note: be careful with balance if you take this class with Stat 110. I tried to finish CS psets before the week started since I knew I would go to Stats office hours. All in all: must take this course. It doesn't matter that you don't do too well; it's the experience that counts. And if you try hard, you will surely do well! Besides, the psets are just fun! How many classes can you say that for?
The psets were reasonable, as was the necessary time commitment (little to no work one week, then close to 14-18 hours the next week, biweekly psets). however, the exams were very difficult. they really required you to have mastered the material because the questions would be so involved, complex, and layered. do all the section problems, and do some book problems too to prepare for them. simply going to lecture and doing the psets will not be sufficient.
This class was very difficult for me. I should have taken it pass fail as it was an elective. Be prepared to spend a lot of time on the psets. The midterm and final were very difficult. Go to Eddie's office hours if you are struggling or need pset help. I spent over
61 is a good class. The topics covered are important, and the psets are interesting and fun. Eddie and his staff have work to do though. The class feels loose and poorly put together, and lectures are not very good. You'd benefit the most from just reading the book and doing the psets.
Only take this if you really want to learn a lot of low-level details about computers and programming. Definitely allocate a good deal of time for this class if you decide to take it.
I think the topic is interesting and important for cs majors, but this class was not taught well, and we didn't cover that much material.
Don't be fooled -- this is a hard course. Be prepared to put some serious time and (potentially) a GPA/ego hit. But it's worth it. The material is really interesting and surprisingly useful. Plus, you learn some awesome stuff. Other notes: amazing textbook. Eddie is nice and enthusiastic but his exams are killer, and don't reflect what you learn in class. But he is a good professor.
Not the most well-organized class. Actually, it is a bit of an organizational disaster ever since Chong left and Kohler came in to change all the assignments. That said, everyone in CS must take either CS61 or CS51. Personally, I despised CS51 (even though it is more well organized), so I find myself liking CS61 more, even though it definitely was not as good a course as I expected it to be  this being on the basis of the lectures and assignments Chong gave last year (I sat in on them a few times, and they are still available online). Do know this: Randy Miller and Kenny Yu were the utterly amazing TFs who kept the sinking, disorganized ship of CS61 afloat all semester, while Kohler was bailing water into the boat and the other TFs did nothing to help.
Great class, not too hard for a CS class and the professor is fantastic. He makes the material easy to understand.
This class isn't the easiest, but it is great! It exposed me to the non-algorithmic side of programming, which is important as well.
You actually learn a lot in this course through the psets. The midterm was one of the most fun tests I've ever taken, just because it was actually interesting. Before this course, I was not a good programmer, but this course has made me much better, and it was actually enjoyable. And EDDIE KOHLER IS THE BEST!!!
This class is great!
Eddie Kohler is a wonderful teacher.  His lectures lead you through the rationale behind the course concepts.  It's much more interesting and informative than just getting a rehash of the text.  Admittedly, this meant at times it could be hard to follow, but overall I think his approach better facilitated learning.  The problem sets in 61 are really fun and you can grade yourself as your progess (usually), nice motivation and convenience
Overall, CS61 was a great class.  You'll write malloc and your own shell (!!!!!!!) and learn all sorts of cool things about how computers work.  The assignments take some time to do, especially malloc, but they're not really that difficult.  The midterm was far too hard this semester - everyone agreed on this - but that's really my only complaint, and something they'll probably change.  Take it if you're a CS concentrator, take it if you're not.  Professor Chong is great and you'll have a good time.
Great class and an enjoyable introduction to many systems concepts.
Don't start working on the malloc lab after the due date.
A great CS class. You'll learn a lot about how computers "actually work" and it's not too difficult.
Very fun course overall. The exams, of course, are less fun because they test a lot of material that's only covered conceptually and have nothing to do with the labs. But the labs are super interesting and definitely worth it, even malloc.
Tough class, but teaches so much.  Prof. Chong is a great lecturer and almost all sections were great.  Problem sets are fun, especially the early ones.  Exams were hard, so try to give yourself enough time to study well.
This class is incredibly informative and fun. It is challenging and very demanding at peak times.
This class completely depends on your TF. Get Rob Bowden. Or watch his sections online. Prof. Chong's lectures are great and try to read the textbook chapter before/after the lecture on that material.
Consult the lecture slides, and go to office hours.  Draw diagrams and ask questions.  The assignment specs/book/lecture slides give you pretty much everything, but it is necessary to go to OH!  Often you can have a design that you think will work, but walking through it with a CA can help improve and avoid major bugs!
If you really want to know what goes on inside your computer take this class. It made me very interested in computer systems.
Be prepared for a very difficult midterm and final. Section is optional, but you should go and do the practice problems, even if they're dull at times.
The tests are really tricky. Just tricky on purpose, for the sake of being tricky. Other than that, the material was really great if you want an overview of how the computer works.
This class is very interesting and Professor Chong is great, but it is very tricky-- it's difficult from other CS and that can be really hard.
This is a very important subject in computer science. Steve is a very good lecturer who made the lectures interesting.
This is an amazing course. You really do not have to take CS50 to take this course if you have coding experience. I jumped directly into 61 and although I may have had to work a bit harder at the beginning, it was completely worth it. If you are at all confident in even VB, it will only take a couple of days of learning C and you should be fine.  Also, the course staff my year was AMAZING. They really make this class doable.
This class is really fun, and Professor Chong is awesome! There are only six assignments, so it's pretty light as far as CS class go, but you learn so much. Understanding systems really helps you understand what optimizations you can make in your own code pre-compiler to save time, and you also learn how to dynamically allocate memory, which is ridiculously hard and time-consuming but a lifetime bragging achievement. You need to take this class to be a good programmer, and you won't regret how much you learn! Also, use wrapper functions--it'll make your code look cleaner and save you style points, and don't take this class if you're worried about your GPA.
The material covered in this class is at a survey level at best. I would strongly encourage avoiding this class, as most of the material can be self-taught as necessary. The material that benefits from instructed learning is covered in brevity, and, while useful, should be more rigorously covered before this class will be as useful as other classes that could be taken in alternative.
CS61 is great. Stephen Chong is a really good lecturer and the assignments are fun. Be prepared to work hard on some of the labs, but they're enjoyable enough that it's not frustrating
There are very few classes in which I have learned so much material in so short a time.  If you're willing to attend every lecture, read the assignments in the book, and seriously pay attention in section, this class will be a rewarding experience.
Very interesting material, really lets you appreciate the technology behind computers. Labs are frustrating, but instructive.
This class was very good. It was straight forward, informative, interesting, presented useful information, had clear expectations and clear teaching, and assured that nothing was expected of you that had not been taught. All of this made for a very good, well organized, and well taught class. This is the class that teaches you everything about computers that you never knew but always thought was too simple to ask. It is essential to understand the basics of how computers work. It is not difficult relative to most CS classes, and is very fair in general. Class periods are not always the most engaging, but are very clear and will teach you the information well. Unless you are looking for a very challenging CS course, you should definitely take this class.
The course is very well taught and the material is really interesting! Just be warned: the workload skyrockets after the fifth week.
The class is necessary but not the most stimulating
61 is a pretty natural extension from CS50--still lots of staff support and goes at a decent pace. Expect to spend a LOT of time on malloc, but rewarding in the sense that you get to know pointers really well.
Take this class for the problem sets! Some of the most fun and challenging problem sets you do - were all enjoyable except for malloc (which was interesting but just start it early!) Also Chong is an awesome professor! Definitely worth taking if you want to learn to be a better programmer - few other classes will give you a nice depth of low-level and practice with C.
This course is one of the best CS classes I've taken so far; problem sets are interesting and instructive. The exams were challenging, but fair.
the class is taught very well and the materials are excellent, but make sure to start the problem sets early because they do take quite a significant amount of time to complete, especially in the latter half of the semester with group assignments
It's a lot of cool knowledge, and you have a much better understanding of how the hardware of computers work.  That being said, the knowledge isn't very useful if you're doing every-day programming (ie, mobile platforms, etc.)
PowerPoint presentations are thorough and neat. The class has a light workload--the homework assignments are engaging and not difficult if you start early like they recommend! The only time you might feel serious pressure would be during the first programming lab (malloc). The open-book midterm can be a bit difficult but the open-book final is comparatively easy--you have more than enough time to answer all the questions, and it's administered during class. You'll learn C really well, because the programming really tests those parts of C that you might not learn about too well in other classes (the fine points of pointers, how to deal with race conditions, etc.). You'll marvel at the inefficiency with which you wrote code for previous classes. The best reason to take this class, though? Stephen Chong is the friendliest person ever. Get to know him. The staff was great this semester too.
This class is pretty damn hard, the midterm was really tough, and the lectures weren't very interesting. Not really worth it unless you love low-level CS or are a CS major.
Everything but malloc is easy, and malloc is incredibly hard but neat.
Keep up with the material, even though some of the lectures can be dry. And do practice problems! For the psets, read the textbook thoroughly. A lot of the code is already in there.
This is a very good class if you want to learn more about the lower level functioning of computers. If you have never wondered how a computer works, this course is probably not for you.  Malloc pset takes forever, the others are not too bad.
This class was very disappointing. Other CS classes here such as 50,51, and 124 focus on teaching problem-solving and challenging students' logical thinking ability. CS 61 lectures/assignments did neither of these things. Instead, lectures covered dull details we could have looked up in the book and PSETS centered around the tedium of reading assembly code. There was little genuine critical thinking, and a lot of going through monotonous motions. Even in malloc, which was supposed to be the big challenge of the semester, all we did was code up a book/lecture solution in C.Generally, Harvard CS does a good job shying away from teaching technical details in favor of building conceptual understanding (this is, after all, a liberal arts college, not a vocational school). CS 61 is a disappointing exception. If you are interested specifically in a career implementing operating systems this class makes sense, but if you are looking for big picture ideas or problem-solving challenges look elsewhere in the CS department.
make sure you learnt C before
Learning about the guts of the computer may not sound like fun, but this class makes it very accessible and interesting, and demonstrates its many important applications.
If you're willing to put in the work, which isn't even that much, this class will definitely equip you to be a better computer scientist. Though, make sure you don't have much planned around the time project 4 hits, you will NEED the time.
It's a good class.
Pretty casual because there aren't homework assignments every week -- but make sure you start early on the homework!!  (Especially malloc!)  Sections are useful if you have a good TF.  I found the exams pretty difficult but wasn't really sure how I could have studied more...
It's really cool.
This course is difficult, but not tedious. Assignments are due once every two weeks. While challenging, the coursework is not too time-consuming. After taking this course, practically nothing in a computer's internals will be a mystery.
It depends on what you want out of the class - take a look at some of the assignments if you can - there's a good chance what you want to take out of the class won't be what you actually gain. I found the assignments to be almost CS50-esque and I didn't see what else I was supposed to have gained..
the assignments are fantastic, the test is borderline pointless in testing understanding
Excellent course. Every CS should take it. Teaches you information that is incredibly relevant and one of the few CS courses at Harvard that'll do you good after college.
Start psets EARLY
Be ready to work, but the material isn't all that complex. It's how it all fits together that can be a little tricky. The sheer volume of stuff to learn is pretty crazy, but again, no individual topic is particularly difficult to wrap your head around. Watch out for the malloc pset, start it early and use the book as a guide.
A great introduction to systems. For those who have minimal programming experience, expect to work hard and really learn a lot. For those who have a lot of programming experience though, expect to learn a lot but not have a terribly hard time.
Interesting, but not terribly applicable. You will probably never have to do anything with assembly code and its a pain to read and understand. Biweekly assignments is a definite plus as well.
You must have an interest and I would say some background knowledge on systems programming. That being said you will understand memory and the insides and outs about how a computer works by the end, which might or might not be useful. I felt that the class was a little difficult for someone who has only taken CS50 in the sense that more experience reading assembly code and programming in C would have been very helpful. Overall a good class though and Professor Chong was great.
great class, if you don't take this, you are missing out on a great lecturer and great labs. Chong's presentations are detailed and his slides plus section notes cover the material very well. Definitely should have strong C skills and be ready to get dirty with the labs (malloc especially!) and spend quality debugging time.
Good CS course that is not too difficult. Besides Malloc the psets are pretty quick and the material isn't that hard but it is useful to know. Even if you have already taken 50 and 51 its a good elective and the only real systems class.
Really good class for learning more about how computers actually function. Not too hard, so if you're thinking about it, definitely go for it.
This is a solid class and you will learn a lot
if you are interested in cs and are not afraid to spend several hours at a time debugging code, take this course. read the textbook because that and the lecture ppts will be your best friend in completing your assignments. for the partner assignments, choose a partner and don't leave it up until the day before the deadline to start them.
It's an awesome and interesting class.  Probably not for everyone - maybe you don't care about a lot of the low-level details they teach.  But it really teaches you a lot about what's happening when you use and program a computer.
If you want to really understand how the code you write is managed/understood by the computer, and as a result become a much better programmer, you should take this class.
Don't underestimate the time required to do well in this class.  Stay up to date on the course material.
I really enjoyed the class in terms of the subject matter. Since I am not a CS concentrator, the material was generally more difficult for me than for someone who has more experience in CS. Regardless, if you're taking this class for a secondary or because you liked CS50, the book is your friend. While it's tough to go through it, it's worth your time to do so and do some practice problems.
Very very good class to take! The information I learned in this class was very applicable. Professor Chong is a very good lecturer, and the sections are very helpful in reinforcing the information that you learn. The class is not too time-consuming or difficult either, so it made for a very enjoyable experience. There is no reason not to take this class if you are a CS concentrator! Understanding low-level systems is crucial and often overlooked.
Great class to help you understand basic concepts of Computer Science that you don't get to completely grasp after CS50.
Be prepared to spend many hours on labs/problem sets
CS61 is an excellent class in many ways.  It has historically been (and is presently still) taught very well.  The assignments are easily managed and a lot of fun, and the material covered answers all the nagging questions raised in any introductory foray into programming or computer science.  CS61 is a required class for concentrators, and is certainly one to look forward to.  Some programming experience is probably useful, but I went into the class having none beyond self-teaching CS50 over the summer, so any thoughts about skipping CS50 and taking CS61 should, I think, probably be given serious consideration.
For the average somewhat-interested in CS student, this will be a hard, time-consuming class. But it will most likely be the most interesting one you will take. Also, Chong is an amazing lecturer and is very accessible - definitely take it if he's teaching it!
This course is awesome. Although you get a veryvery general view of different subjects, the ideas are important for the deeper material of higher level courses. Assembly code is awesome.
absolutely recommended for CS majors/minors- the low level of abstraction is good for rounding out an understanding of how computers workFor people looking to take the odd CS course after CS 50 for fun, I think it's a little too low level. Maybe I'm biased since I'm not that type of person, but there are other classes where you focus more on how to get something done/made. 61 is more about how your computer works at a fundamental level.
When I first heard about this class, I heard it was fun and not too much work.  That was definitely not my experience.  Be prepared for almost weekly quizzes, difficult assignments (especially the last 3), unprepared TFs, and tough exams.  If you don't love computers and learning about the inner-workings of a computer, you should realize that there are a lot of students in this class that do (so do not count on a curve saving you).
If you're serious about programming this course offers some extremely valuable experiences.  If you enjoyed CS50 and think digging down into systems sounds interesting take the course.
Great real world application.  Knowing C goes a long way though.
Great class to take if you want to learn what actually happens under the hood when you run a program on your computer.  I really felt like I learned a lot about programming in this class.
This class is fun, and not that demanding. You really learn about how computers work at a low level, which is interesting and helps you to program. Pretty good
Really great class. Labs were fun and really helped learn the material. Probably best to have some C experience though.
I have a really hard time pinpointing where this course went wrong. The lecture powerpoints are informative and well-organized, the textbook is even better, the course is not particularly challenging (provided that you invest some time in doing the labs well, especially since they're the most awesome component of the course), and the grading is fair. Yet I always felt like the course wasn't living up to the material it was teaching. The stuff you will learn is an incredibly important foundation for just about anything that you'll do as a computer scientist, but I lost my excitement about it after a few weeks. No doubt this had something to do with the required (!) sections (oh, and participation is a part of your grade!), where we wasted 1.5 hours every week, and the fact that lecture was not particularly enthralling (reading the powerpoint slides on your own/reading the book is a more effective use of your time). Also, you have to be prepared to take a short quiz in section almost every week, and despite what they tell you, you should prepare for them. All of this made me feel like the course was dictating how I should study and learn the material, which is not cool.
I think this is a great course and you learn a lot. This is great to take whether you just want to learn some systems or if you want to continue taking more systems courses. The one thing is that the exams don't really reflect the assignments well, so be sure not to fall behind on lecture material.
The labs are great, but don't procrastinate on them. Professor Chong is a great lecturer, and everyone on the teaching staff had great enthusiasm for the subject matter. I learned a lot of interesting things, and it was my favorite class this semester.
Be prepared to be frustrated. Still, very useful if you are interested in systems programming.
The labs will turn you into a real C-programmer. Yes, it will be difficult but after you have written malloc, a shell and a hopefully concurrent system you will have gone to the next level of programming. Also, optimization and a basic understanding of what is actually happening in your computer are useful.
Good intro course with fun assignments.
This class is very useful for any programmer or anyone who wants to learn something about computers. The material can be dull though.
CS 61 is a great class: the lectures are engaging, the workload isn't too large, and the material is interesting. A word of caution: don't be caught unaware by the third lab, malloc, since the first two were pretty short. You're given three weeks for a reason.
Make sure you know your shit for the midterm and the final, since they're a huge chunk of your grade
Stephen Chong is downright one of the best lecturers around. His presentations make this potentially difficult material easy to digest. Everyone should learn what is behind the ubiquitous technology we call a computer. Take this class!
Stay on top of labs. Although it is not necessary, it is always good to review for quizzes.
Great class. I never thought I would be this interested in systems programming, but I was really wrong. The homework assignments are interesting and not that hard. Start early on them and you'll be fine. The weekly quizzes in section are annoying but not that big of a deal.
Good class, but the material's a bit dry.
Great course! Professor Chong was amazing. The labs were really hard but you get a lot out of them.
This is an amazing systems class. It's taught very well, the material is interesting, and the work is fun.  It's also a rather painless class in terms of workload, but you get a lot out of it.
Probably requires more work than you think, and then some.
A great next step from CS50.  Much better than CS51.  Required sections are a bit of a drag, but good psets and lectures, you'll learn a lot of interesting and very useful things about how computers work.
the labs are fun and the slides awesome.
Take it, especially if you enjoy writing code -- the problem sets are really fun, and it teaches you some solid concepts.
Make sure to choose a good partner for the projects.
Great class.  I personally loved the material (although a lot of my classmates didn't) and the psets were the best yet.  The midterm was pretty nice, and the slides and textbook were spot on.  The lectures were sometimes dry and boring, but I overall enjoyed them.  Take this course if you want to know how to take advantage of the machine when programming or try out some concurrent programming.
Well-taught, supremely well organized, interesting course with tremendously awesome staff. People care if you get the material (and not in a condescending way). Highly recommended. One warning - though the first two labs are short, malloc will suck out your soul if you start late, and will likely have some soul-sucking qualities even if you start early. But the lab will be totally worth it.
Even if you aren't too interested in systems, this course is a fun way to see how a computer works. The workload is manageable is you start projects early, and the projects are pretty cool.
Prof. Chong is the man. This course is awesome and you learn a lot, etc.
low level details seem irrelevant at first, but the concepts of this course make you a legitimately better programmer.
Excellent introduction to systems. Worth taking for the labs alone!
Like computer science--only more fun!
It's a good class.
Malloc isn't as bad as everyone makes it sound.  Get the bonus points on pset2.  Start the takehome exams when they come out.  Some of the programming labs have some issues you won't discover until you try them, so don't start too late.
The first two labs are easy. The fourth and fifth are straightforward. The third will kick your butt.
Many cool topics and p-sets. Very enthusiastic professor. Greater insight into how computers work (mostly software and OS).
Half the people here have been programming far beyond CS50. Do not take unless you really are willing to devote a lot of time to it or you are already very comfortable with programming.
Great class. Not too difficult, but you leave feeling (justifiably) that you've learned a lot.
attend lectures, they are all great
interesting, engaging, not too difficult, well-taught
very interesting material without an overload of work
I think it is important material that people who are serious about computer science should know.  If someone is just dabbling in CS, however, I don't think this is necessarily the course they should take. It would not make me want to be a CS major.
Excellent course in introduction to systems programming.
If the material appeals to you at all you should definitely take this class.
This is the best course I have taken at Harvard to date
It is a completely new level of computer science if you have just started and you'll be surprised by the end of the semester what you have done.
I did not initially think I would be very interested in the subject matter, but the engaging lectures and edifying problem sets made me like, and want to know more about, the material in the end. It's good knowledge to have, taught well.
If you hate abstractions, or are frustrated by being told that the system works and not being given details, this class is for you. You'll have to work hard, and accept randomness and new frustrations, but you'll see how far down the rabbit hole goes.Then again, like me, you might decide that Zion's overrated and you want to stay in your pod, being used as an energy reservoir and living as Mr. Anderson. It's a good life, and it's often garbage collected as well.
I guess it's a fun and painless class, but really you can learn all of the material on your own in about a week.
It is a fun course, although somewhat slow.
With the possible exception of CS 50, this class is probably one of the best-taught CS courses offered at Harvard. The material is somewhat important to know if one wants to go into computer science (i.e. if a student really wants to know what computers are like), much akin to how learning how the internal combustion engine is useful to becoming an auto mechanic.
Very different from most other Harvard CS classes, really interesting, and very manageable.
Take this class! It's a great way to satisfy the systems requirement ; it's easy, and it's pretty fun to boot.
You can think of this course as background reading for a career in computer science or software engineering. Few people will want to or need to work with system-level code (and this course shows you why) -- but it's definitely important to have a good understanding of how things work under the surface.
Good, easy intro to computer systems
cool stuff sometimes, ocassionaly can be boring.
If you felt good at the end of CS50, you must take CS61.  CS61 makes you a 1337 haxzor.
Start early on your labs!!!
If you are interested in learning how to improve your program efficiency (better utilization of cache, understanding assembly), learning how to debug more efficiently (learning gdb and assembly), or learn more about systems programming (processes, pipes, threads, file I/O), then this is a great course.
This is a useful and necessary course for anyone interested in computer science.
This class has pretty much everything you would want. The lectures are good and very interesting, the exams are definitely doable, and you learn a lot from the labs. One thing to note is that on the labs, you are supposed to explore the various concepts by yourself with very little prior introduction, which can be both a curse and a blessing.
Great fun.
Matt Welsh is an excellent lecturer.  The material is extremely cool.  My only complaint is that the course moves along slowly at times, but I would highly recommend it to anyone.
take this class, for all the secrets of the universe will be revealed.  seriously, TAKE THIS CLASS
The class introduces you to systems programming, as promised. It is a great way of testing whether or not you are interested in systems.
The assignments are big and sometimes a bit of over kill but it is all stuff you need an understanding of
Everyone with enough background in C can, and should, take this course. The professor is great and the assignments are fun and rewarding (although some do require a substantial amount of work). You'll never look at your computer the same way again.
If knowing how computers behave just isn't enough for you, take this course. You dig deeper, learning the intricacies of how computers work and how the best programmers are the ones who understand this and, hence, are able to code with deathly efficiency and precision.
Take this class if you have the space in one of those four (or more) class slots.  This is a CS course that no one with interest in the field should miss.
Even if you're not extremely interested in systems, this is a useful class to take as an introduction and survey of important ideas, and it's fairly easy for a CS class.
If you are going to take this class, first make sure that you are at least somewhat interested in learning very detailed aspects of computer systems. Heed the fact that some of the labs will be unclear, non-explained, and riddled with errors. Read the textbook for information clearer than that presented in the lectures.
The material is so, so incredibly dry, and I found it tremendously difficult to care about this class. Unless you want tedious assignments on the most tedious aspect of CS, don't take this class.
CS50 shows you how to program, but CS61 will teach you what you're actually doing and how to do it right.
CS61 is a course that will turn a coder into a true programmer -- or, at least, it will set that transformation in motion.  The concepts and strategies learned are invaluable, the labs are fun and challenging, and Professor Welsh is excellent.  Just make sure you're very comfortable with C programming before embarking on this journey; I don't think CS50 really qualifies as ample preparation (coming from a CS50 alumnus and several-time TF).
The assignments are so much fun!
The content of CS61 is quite accessible, and the lectures are done very well, but there tended to be errors or ambiguities of various sorts in the assignments, section exercises, and exams.
This course material is conceptually interesting but probably not too relevant or applicable to anything else.
It's a great course full of interesting material that is very relevant to real-world computer science applications.
Matt is a great professor and he makes an already interesting subject more interesting, but if you are not into CS, do not think it is like CS50 and take it -- the class is not as easy as some think it is.
Only take this class if you are comfortable programming, willing to have half the material fly completely over your head, and at peace with low B's.
Along with CS124, this has been one of the most useful classes I've taken at Harvard in CS. Moreover, it was a lot of fun. Definitely worth taking.
Definitely take this class if you are interested in programming and want to learn more about what goes on "under the hood" of computers.
great class; you learn so much from a very engaging professor
This class was one of the most interesting classes I have taken.
It is a great course because of the Professor, but make sure you are ready for the assignments.
Definitely go to every lecture, if for no other reason than listening to Prof Welsh for 90 minutes is going to be entertaining.  Seriously, though, this is a fun and informative class and (with the exception of malloc and perhaps the final exam) isn't really that hard.  If you're at all interested in computers, you should take it.The only thing is, review the course syllabus.  If you feel like you legitimately understand a lot of the things already covered, you might want to just skip 61 to have room for more higher level classes.
Very interesting material. Welsh is a fantastic lecturer so GO TO LECTURE. Just because other people may say this is an easy class doesn't mean it's easy, it just means it's easier than other CS classes which isn't saying too much. Textbook isn't as necessary as Welsh insinuates except for PSet 3 where it is YOUR BIBLE.
Ask questions, especially about special cases. You'll be amazed how much relevant information you learn from this.
A decent amount of work and a decent amount of fun combine to create a worthwhile introduction to computer systems.
definitely recommend if you took cs50 and are looking to learn more about how the actual computer works
Best class I've taken at Harvard. If you liked CS50 (and didn't find it too hard), you will love this class.
Margo is a fun, funny, and smart teacher. There were still some kinks in this first stab at a flipped classroom version of this course, but on the whole it worked really well. The TFs were amazing this year, I really hope they are as good in future years. Just be prepared to sink a lot of time into it! Not for the casual computer nerd.
Learning about lower levels of abstraction is extremely useful for anyone interested in computer science and software engineering. That being said, the material in this course will only interest a certain subset of people, and if you're not in that subset, you might find the course slightly boring and overly difficult. Also, I wasn't a biggest fan of the flipped classroom.
Even though it may seem that low level programming and knowledge is becoming increasingly obsolete, the material still seemed interesting and relevant.
Margo did an amazing job and put in a very noticeable amount of personal effort into teaching this class, improving the problem sets, designing all of the lectures, and demonstrating her passion for the material. It's one of the best-taught courses I've ever taken, and was challenging but satisfyingly so. The problem sets are hard but interesting and meaningful in the real world - not just arbitrary tasks they want you to code up. I learned a lot, feel like I was challenged, but also felt like everything was reasonable, doable, and had a point. Fantastic class!
The material is very interesting, but the flipped classroom style of teaching may not be the best way to learn the material.
I thought that the information covered in this class was really interesting, and I gained a much deeper understanding of what goes on at a lower level. The problem sets were all really interesting, and Tfs/piazza were always very useful. However, I did not enjoy the flipped classroom at all. I would have learned much more from 90 minutes of teaching instead of 20 minutes of lecture video and 90 minutes of "working" on assignments each class. Margo is also a great teacher and definitely very enthusiastic about the info.
If it's flipped classroom with Margo, be prepared to love and hate a lot about this class.  Margo is a gem and is so kind and helpful, but this class will take so much time.  The psets are intense, yet extremely rewarding. Pick a good partner and be prepared to spend many hours a week on problem sets.  For someone who enjoys CS but isn't naturally good at it, I would spend about 20 hours a week on psets at office hours.  In the end I definitely am glad I took this class, I wish I had even more time to spend on learning the material.
Make sure you lock down a pset partner on day 1! I made the mistake of not finding a pset partner until none were available,  and my entire semester was a mess because of it. If you don't have a partner you work well with then you will basically be doing twice as much work for this course, which is already a very tough course. Seriously. Get a friend who is as smart as you, and don't just assume you'll be able to find one once the class starts.
I think that Margo's teaching style was pretty bad. Her teaching style of watching lectures at home and doing exercises in class is the ideal teaching style but just doesn't work in practice. Other than that the material in the class is still really relevant and useful. However, I discovered through this class that my interest in computer science lies more closely with algorithms and not systems.
If Margo is teaching, you need to decide if the flipped classroom is something that you like or not. I happen to think that it's a great idea that was implemented suboptimally this year (I hope/think it will get better); it's hard to do with such a large class.In terms of the course material - systems are very interesting and very, very complicated. I learned a lot, but there's so much to learn that you cannot possibly learn all of it in one class. So it's a bit of a weird feeling at the end, because you learned a lot but have many more unanswered questions than answered ones. It is definitely a rewarding class, though - I can point to many things that I can do better now than I could at the beginning of the semester. I highly recommend it for general education purposes (not the GenEd program, but the idea that it is actually valuable to have the knowledge that this class gives you).
This is a very hard class. But Margo is awesome and you should take it!
If you want to learn code like in the real world, take it. You dont need to know C, you can pick it up if you know JS or Python (I took this as a sophomore and I didnt take cs50/51 but took 6.0001/02, the intro CS course at MIT). It will be hard, but you will learn that what real coders do is Google how to do stuff and read the manuals, writing code one loop at a time.
This class is really hard --- Be prepared to spend a lot of time on it, particularly if you've never programmed in C before.  Also, if you don't like systems programming, don't take it.  You will learn a lot though.
It take a LOT of time, not really worth unless you are for sure going into systems
This course was great, aside for the exams that were truly a terrible experience, with almost no guidance or practice offered.
This class is absolutely amazing!! TAKE IT!!! Yes, this class is much, much harder than anything you saw in CS50 and you'll die in the midterm and final, but you learn so, so much and I felt like by the end of the semester, that I was a much better programmer. Also, if you don't take it for the material, take it because of Margo (She is literally the best professor/teacher ever, and she sincerely cares about every single one of her students: which I really appreciate). TAKE THIS CLASS!!!!!
This class is amazing it's challenging (but not impossible), incredibly interesting (you'll learn so much about what's going on inside your computer), and very fun (the flipped classroom makes lectures actually bearable). Do not take this class if you've only taken CS50 or don't have much programming experience  you won't actually learn much because you'll spend the entire time trying to learn C and you'll never fully understand any of the material. Just wait another year if you're still inexperienced.Definitely a challenge at times (some of the psets took me ~15 hours), but I'm very glad to have taken the class. One of the best I've taken at Harvard, especially with Margo teaching it.
The class this year was "flipped" (problem solving during classtime, with lectures assigned as hw). This year was also Margo's first time teaching CS61--if she teaches it again, I would expect it to be much improved, as it was fairly disorganized this year.Hopefully, CS50 isn't the only programming class you've taken. If it is, this might be tough; otherwise, keep up with the lectures, and do (actually) get a head start on psets, and you'll probably be okay.
This class is fantastic. Margo was an amazing instructor. The problem sets can sometimes be quite difficult, start early, ask questions. Very doable if you put the time in.
This class made me a lot better at coding (specifically in C but also in general). Learned some cool things like how to read assembly, caching, memory allocation, multithreading, and virtual memory.  The flipped classroom was a bit annoying at times so make sure to evaluate that for yourself during shopping week if it is repeated.
Expect to be challenged and spend a lot hours but you'll learn a lot and become a better programmer.
I really enjoyed this class, despite its difficulty! The material was super interesting, and the psets were a bunch of mini-projects where we actually implemented useful parts of systems (e.g. shell, buffered I/O, virtual memory). Lots of thinking, but also lots of actual programming -- you'll get to be a master at C even if you've only had CS50. Margo is awesome!
Psets are super interesting, but after the 20th hour of debugging, you start to get fed up
This class will help you understand how your machine really works
Great assignments and materials. Takes a lot of time and maybe not directly applicable for non-CS majors/software engineers.
This is a difficult but very good class with interesting material. I found it fun overall and definitely feel like more of a real computer scientist.
This class is hard. You will spend hours upon hours debugging problem sets for bugs that neither you nor the TFs really ever quite figure out. Some concepts are very tricky, and the class does not really try to make anything easy for you. That being said, there's a lot of support, so if you utilize class time and office hours you can definitely do it. And you walk away from the class knowing that you've learned a lot of useful material you really wouldn't have otherwise. Worth taking if you're studying or interested in computer science, because it really teaches you how computers operate - which is good to know in life. Just know what you're getting yourself into, because it is definitely a challenging course.
The flipped-classroom style worked for the first half of the course. You will really get to know the people sitting at your table. You will, however, need lots of discipline to be able to truly digest the material of the second half of the class without the traditional lectures. For someone who hasn't taken a CS class in over a year, this class was extremely difficult for me. I spent over 20 hours each week on the pset (and I was working with a partner). But if you have prior CS experience, this class will be a breeze.
Hard course and extremely time consuming. Flipped classroom structure is hard to manage and keep up with, so get ready to work!
A well taught class and definitely worth taking for a CS major. With Margo the workload is still hard but reasonable. Exams are also hard but reasonable.
Make sure to come to class - working through all this stuff on your own can be frustrating, and classmates/TFs can give you information/help that you would otherwise take a long time to find
Take this class. Take it take it take it. It makes you a better programmer.
Tough class. Only take if you're interested in the material.
The teaching staff is incredible and really cares. The midterm is fair. The assignments are cool. The material is certainly very useful and definitely allows me to understand how systems work much better.
Take this course if you are planning to concentrate in CS.
CS61 was surprising both in the amount it had to offer me and in the amount I needed to give to it. I learned much more than I thought I would going in, but I also worked much harder that I thought I would have to. But it was all really fun, and I'd recommend the course to anyone with the necessary background (proficiency in C and some coding experience).Do note that the course is an order of magnitude more difficult than CS51.
Great class, great material, great professor. Some work and time are required, but overall great.
To be completely honest, I don't think the inverted classroom scales. There were a lot of TFs around during class, but it seemed like there sometimes weren't enough for the many students who were enrolled and showed up to class. Otherwise, it was a fantastic learning experience to peel away layers of abstraction and learn what constructs exist in our computers that make it work on a day to day basis. This class is enjoyable when you're making progress on the assignments, but there are definitely dark times where you spend many hours trying to fix one little problem or debugging. This class will make you a better programmer, but it can surely be frustrating at times and make you want to throw your computer to the wall (caching pset).
This is a really great course. You learn some really cool material so you'll walk away with a better knowledge of how your computer and networks and synchronization work. The way the material is presented makes it easier to pick up and the teaching staff were all extremely helpful. The course is rather challenging, but manageable. Just start the psets early and it's pretty non-stressful.
Take it!
It's really hard and time-consuming but you will learn a TON and Margo is one of the best professors and overall people at Harvard. She truly cares about her students and will do anything to help you get the most out of this course and make it possible for you to succeed.
This class is very cool if you are interested in understanding the low-level details of how computers work. This class easily requires more time than either cs50 or cs51, but is a great opportunity to improve your C coding abilities. It is taught with a flipped classroom style, which requires you watch videos and answer questions before class.
I was initially wary of the flipped classroom style, but quickly came to love it as I watched the videos. Professor. Seltzer did an outstanding job of narrating over the material in a concise and clear manner. In addition, the assignments were fascinating and provided an exciting understanding of system's programming as well as design decision in modern languages.
You need to do CS51 in addition to CS50 if you don't want to hate yourself in this class. It's really hard and it's not enough to just go to lecture; go to section always (they should be made mandatory). Exams are great in terms of being open book and note, so you don't need to do stupid memorizations, but definitely a very very very challenging class.
It's hard, but a rewarding class if you find the information in the syllabus interesting.
It will change the way you think about computers!
This is an incredible class. Margo is a wonderful professor, and each member of the teaching staff was very knowledgeable and helpful. The assignments are long, but a lot of fun to work through, and you learn a great deal throughout the course.
Reading this material in a book would be phenomenally boring, but the psets are really well designed, and it really brings your coding skills a notch up from the CS-50 level.
This is a difficult class but it's well worth it. You get out as much as you put in and it's a great class with great support!
make sure you are ready to take this course, do some research before hand
This is a cool class where you begin to understand processes in deeper detail. The content is extremely interesting. The psets generally serve to reinforce this. They are often annoying however given that debugging memory issues is often a pain.
This class is amazing! Margo is a great prof, and she has a veritable army of TFs to help you understand the course. In fall 2015, this was taught in a 'flipped class' method, which worked very well for the subject matter.
Great class to get you thinking about hard problems in computer science. Challenges you to think theoretically about fundamentals, and to implement your ideas in a fun and approachable way.
Just take it -- one of the best CS classes at Harvard.
If you're interesting in more of the "under the hood" details that CS50 glosses over, you'll enjoy this class. If that sounds terrible, you probably won't find CS61 very interesting. The flipped classroom that Margo introduced this year is not for everyone many students disliked it and chose to skip class . But I felt that it worked very well for the most part, and I got a lot of benefit from working on the in-class exercises.
This is a phenomenal course. At first, I thought that I would not be able to make practical use of the materials taught in this course, since it all seemed rather "low-level" for any practical applications. However, I was very wrong. I found myself using the concepts taught in this course on my own independent projects immediately throughout the semester. I am a much better programmer, CS student, and logical thinker for taking this course. Highly recommend.
Really great course. I learned a whole lot, and I think the flipped classroom experiment paid off. Margo is a wonderful instructor; she explains things very well and simultaneously makes you feel like you're going to succeed. The assignments were well-crafted and never felt like unnecessary work. Take it!!
CS 61 is essential for any CS major, teaching you how things like caching, networking, concurrency, and memory management run under the hood. Margo's "flipped the classroom" this year, to generally good effect; I like having watched the videos before showing up to class. In-class exercises are hit/miss; the tasks themselves are good, but being a large intro class it's hard to find a group who'll take them seriously (as they're not for grades).
This is by far the toughest intro to CS class, but is also definitely the most rewarding.  Definitely take this - even if you don't plan on doing anything with systems in the future you will learn a lot of useful things and become a better programmer by taking this class.
You learn a lot. You come out a better programmer. But there might be less painful ways to do it. Also, for a lot of my peers and myself, the flipped classroom really did not work (and I say this coming from 2 semesters of flipped classrooms) My advice is to start reading some material before you take the class because it's a lot. If your idea of fun is finding yourself at Maxwell Dworkin at 12:00 am on Friday night trying to finish the pset, or looking at one line of code for 8 hours, this might be the class for you.
I wish the class meetings were more useful because by the end I just stopped attending the lectures and ended up doing well on Assignments with the help of the book. By the way, the book is a gem, download and peruse it. If you are good in studying by yourself, the course structure would make you feel dissatisfied. The highlights probably were the material, the book, and the assignments.
The assignments will take a long time, but this course is very useful. Would recommend!
A tough class, but worth it if you have the background experience and time to put into the class.
Unless you plan on taking 161 and know that you love low-level, you don't need to take this course!
If you like programming in C, you'll love this course. It's been my favorite course at Harvard so far.
Before taking this course I went through some of the CS50x psets that are coded in C to brush up on my understanding of C and make sure that I already understood what CS50 has to teach. This class ended up being less difficult than I expected, and I enjoyed it greatly. I would often begin the psets as soon as possible and enjoyed working through them almost entirely in the first week while procrastinating on Math 25a work. This class convinced me that systems CS is an interesting subject. I don't know how much the reversed classroom setup did for me, but it seemed to have worked out in the end.
Although I didn't do as well on the exams as I would have liked, because the in class material were orientated more towards the problem sets, I deeply enjoyed this course. The flipped classroom was an amazing experience, and I learned a lot from the in class work and the problem sets. That said, this course does require a significant investment of time. Even the lecture material needs to be watched on your own time before class. If the systems programming sounds interesting to you, then this class is worth it. But let me warn you again, this class is hard and takes a huge block of your time.

Run
This was a great class! I would definitely recommend it. Its rather poorly organized but you still learn a lot. The psets were very easy, you could usually do them in 4-8 hours. Labs were where the majority of time was spent. There are 3 hour labs on Fridays but really you need to work the whole week on the labs as they are impossible to do in that short of time. Generally My partner and I spent around 15 hrs on the labs every week. The difficulty of the labs varied wildly which was annoying. It would be much nicer with a smooth progression form easy to hard. The TFs were great, very very helpful. If you can, I would recommend going to OHs Monday or Tuesday to work on the lab and then just go to Friday lab to demo and leave.
Only take this course if you are very interested in learning about digital hardware, or if it is a concentration requirement. The lectures are far more conceptual than the implementations of the material, and the entirety of the lab and some homeworks is implementation. Expect to spend a lot, lot, lot of time on your own or with your lab partners trying to debug obscure Verilog issues and figuring out labs. However, by spending a lot of time on this class you will learn a lot about how computer processors actually work and what makes computers tick, from the hardware side.
You learn a lot in this class if you put a lot of time into the labs. The lectures aren't overly interesting, but the material is good.
It was a very enjoyable course. The labs were done very well this year. Definitely take this course if you are at all interested in hardware
This class should be taken by all Computer Science concentrators!
Be prepared to spend some hours on the labs. The last topics were also interesting and tough
I felt like I learned a lot in the latter half of the course (covered architecture and CPU design), but the first half was just review since I'm an EE and should probably know basic logic design. The class has been made a lot easier than it was in the past so that shouldn't shy you away. Avi was a lifesaver and without him the labs would have been complete sh*tshows, so just keep that in mind if Avi isn't involved with the course the next time around.
CS141 is a nerd's course, and I mean that in an entirely loving way. It is in every sense a "second year course" meaning the niceties of an intro course are passed over in favor of moving through with the assumption that everyone has a grasp of basic electricity (voltage, transistors as switches, ground) and everyone knows basic programming (if, else, for, while). The course is very professionally done - Professor Brooks truly treats the students as undergrads (maybe even as grad students) and ties in real world stuff like looking at an Apple A9 Processor to see where stuff like CPU, GPU and memory are.  Homework is comfortably light for a CS course - you get a 4-6 problem pset that takes 3-6 hours usually, due every Wednesday. Labs take just as much time - expect to spend 3-6 hours on each prelab/lab, due every Friday. You will become a demigod at Verilog after this course though. There are both CS and EE students in the course and the course is equally important to both.  The skinny? Take this course. It's a moderate to moderate-hard engineering course that'll teach you how processors in computers work and for the final lab, you'll get to build your own processor which is super cool.
This class covers a lot of very interesting information.  You will walk away being able to explain everything between the transistor and assembly code levels in a computer, and have experience using an FPGA.  The lectures can be a little dry, but the teaching staff has done a good job making the labs much better than they have been in the past.  You still should budget a lot of time for the class.  The labs are more of a second assignment you need to complete on your own time, the scheduled lab times are more for demonstrating/turning in your work.
Lab component was mostly completed outside of lab, and took a lot of time in addition to weekly pset. Otherwise, GREAT CLASS, very comprehensive - you will start at the logic & transistor level, and build up all the way to design principles of a processor. A strong plus of the class is actually being able to design and implement the principles you learn in class. Book is a great supplement, and lecture was effective also.
You can get a lot out of this class, but it's definitely very time intensive (the labs in particular).
This class has the potential to be good but it needs a lot of work. In particular the labs need to be re done and it would be good if the teaching staff had better understanding of the material.Overall I would be very careful before enrolling in this course.
The lab are demanding. Make sure to get a good partner, and read the book--the lecture and textbook provide the same amount of information in terms of what is used in labs and assignments.
The professor obviously doesn't care at all- he is a terrible lecturer and has not even looked at the lab materials. He doesn't have office hours and won't answer any student questions. The material is cool, but don't bother with the class. Take 161 and learn about hardware that way or just read a book...
High workload class with both problem sets and labs.  Lectures go over material for the pset / take-home midterm / take-home final, but you can also learn effectively from the textbook.  Lab sections and TFs go over material for the lab.

Labs took me ~7 hours/wk, psets took me ~3 hours/wk.
I would not take this class without significant changes from this year. The material was interesting and the psets were fair but the labs took 30-40 hours a week. There is not enough teaching staff, not enough office hours, and not enough lab staff who actually know Verilog and the lab assignments. The take home exams are long and don't test the material from class
Start the labs as soon as possible because they will take forever to get working properly.
Expect to spend a lot of time on this class.  You are assigned homework and coding assignments (labs) which usually add up to at least 10 to 15 hours per week.
Prof. Brooks teaches well.

If you don't like struggling with implementations, you probably shouldn't take this course.
The course material is interesting but the labs are very time consuming- the last few weeks of the semester I spent ~15 hours a week on just the labs.  This is time outside of the time I spent in class and doing homework assignments.  Just be aware that throughout the course the lab is a significant amount of outside work- I don't think that is always made clear by the teaching staff.
This class was a brutal grind. Although I learned a lot throughout the course, specifically about computer architecture, FPGA's and verilog, I don't know if it was worth the struggle. The lectures were pretty dull, there are p-sets every week (which typically don't take too long) but the labs are really difficult and lengthy, taking 6-12 hours, sometimes more, each week trying to get your code working. The software we used was really outdated, and the course structure/teaching fellows did not make it easy to get help with the buggy Xilinx program. Avi was extremely helpful throughout the course, but was also very often busy teaching ES52, and certain problems no TFs could help with and they would just refer you to Avi. Overall, a very tough class that took a ton of effort, and while learning a lot, it just seemed like changes should be made to make it more effective and up-to-date.
I have mixed feelings about this course. In my opinion, the labs, while difficult, were the best part of the course, and you really gain an understanding of how a CPU is implemented, because you implement one yourself as the last lab! The labs do take a ton of time, and the 3 hours per week that they allocate for you are really just help sessions where you can ask questions of the TFs and get help. Lectures were pretty dry most of the time, although at times they could be informative and interesting. Problem sets were generally pretty easy (except for pipelining) but very tedious, consisting of hand-translating code into assembly or machine code or drawing large gate diagrams. Exams were similar to the problem sets (we had a midterm and a final, both of the take-home variety). Overall, I thought the amount of stuff I learned in this class and the cool labs outweighed the dryness of the lecture and the tediousness of the problem sets. Full disclosure: I am a CS concentrator with a few more CS classes under my belt than some of the other people in this class who were more EE-focused, so I found the labs easier and the problem sets trickier than they did.
Be prepared to allocate a lot of time for this course.  I wasn't given any heads up, and I chose other classes that were also time intensive.  That made this class more difficult.
I would not recommend this class at all. Professor Brooks does not care about the class or students. His lecture slides are years old and will likely not be updated anytime soon. He is not involved with assignments or labs. Most of the teaching staff are either incompetent or just do not care/put in enough time to make the labs run smoothly. They do not know exactly what's going on in labs. The due dates and organization of assignments/labs was completely arbitrary, and students in earlier labs did not get the same amount of time to work on them because the labs were released at the same time to all students, while being due at the end of the assigned lab section. It basically felt like taking an exam every week.
Ensure you have necessary time in your schedule to devote to this course.
It is great to learn how computers work at a low level. It is empowering to build your own assembler or multi-cycle processor. It is good to build these things for yourself, and learn how to use a FPGA.
However, the virtualbox, which you have to complete the labs in, was unwieldy and annoying. The labs were unrealistically ambitious. It was nearly impossible to complete some of them without significant help from TFs, who were generally unavailable outside of lab time. It was unrealistic to think you could come into lab with questions for the TF and finish it within 3 hours.
Very interesting material.  Professor Brooks is a good lecturer. Recommend because of just how cool computing hardware can be. The TFs have not invested themselves heavily in the course. The labs are often frustrating. Pretty much all things you will see in every response.
This class, although a bit disorganized, will give you a new found appreciation for your computer.
This is an extremely interesting class, but is definitely time consuming. But you really learn a lot when you spend a significant amount of time debugging code. If you really want to learn about computer architecture, this is definitely a good introduction. I think all CS concentrators should take this course and EE concentrators as well, especially if you're in EE and are interested in the CS side. The lab component is the most time-consuming portion. The problem sets are pretty straightforward and don't require too much time. If the labs were as disorganized as they were this semester, you will constantly be frustrated by the ambiguity of the specifications given to you and spend many hours debugging things that really weren't in your control. But if you have a great partner, the experience is made a little bit better. You definitely bond with your classmates in this course a lot, and as an EE concentrator, I really enjoyed working with CS concentrators.
This class is a lot of work. There are 4 labs, 9 problem sets, 1 midterm, and 1 final. Sounds like your average class? Think again. The 4 labs are split into parts, and it's basically like having double homework every week. If you're okay with the work, it's a great class. Prof Brooks is a wonderful lecturer and teaches you A LOT in a semester. Whether you're an engineer or computer scientist, it's great to know a bit about circuits and computer architecture. Beware, though, the TFs are usually not prepared (save for Sam, the head TF) and will be little of help on all the assignments. The problem sets and labs will also have errors, omissions, and missing details. In general, the course staff could be better prepared. But I believe the knowledge you learn makes it (kind of) worth it.
This class has a lot of great potential. Brooks knows what he's talking about, but the labs need significant improvement.  At the moment, we would spend hours trying to debug code and errors that TFs themselves told us, since they had no idea as to what exactly the code was doing. Yes, I understand that these are all grad school students, but they need to take the time out to prepare for the weekly lab session that they lead.  Don't take the hours as a joke as well.  The psets are really straightforward, but the labs are a pain.
The course is awesome and is an absolute staple for EE and CS. You learn how to use Hardware Description Language (Verilog) to design hardware. By the end of the course you will have designed a humbler version of a real computer processor. The problem sets are trivial but the labs take much more than the scheduled 3 hours - think of the labs as the real problem sets and the problem sets as a warm-up. You can easily do the labs alone if you put in the required time and you will learn much more that way as well. If you're familiar with Physics 123, it's essentially the digital portion of Physics 123 continued into the 21's century - there isn't much overlap after the first two weeks. Awesome class - more EE classes should be like this.
Very interesting material, but the class was not well run. Exam and midterm were filled with typos. Verilog lesson was after the lab, not before, etc
The labs are a fair amount of work. Start them as early as possible. The psets are quite short on average. Also, Kevin is an awesome TF! He was a critical resource for this class.
The RAM is your limit.
The labs take a lot of time, but the homework is usually straightforward. The first half of the class resembles ES50, then the second half moves into introductory computer architecture. Lecture is pretty snooze-worthy - the professor has been teaching this class for so long off of the same slides that I think he's bored with it to.
CS141 is the best course that I've taken at Harvard so far.  It's a lot of work, but I learned more than I have in any other course.  I highly recommend it!
This class had some rough edges, but the teaching staff are super helpful and really want every student to succeed. It was a good experience.
Hardware is really interesting and different from your average programming class. You'll emerge with a fairly deep understanding of how computers are built and work. Do NOT be fooled by the 2h/week lab--it's more of a help session so you can work on it with TFs available, and you will DEFINITELY work on labs for many hours outside of class. Problem sets are actually not terribly taxing--a couple hours or so.
CS 141 is a bit of a mixed bag.  I came in as a systems guy looking to dig even deeper down into the stack.  The details on CPU and ISA implementation, as well as instruction pipelining, were decently interesting.  Further down, though, things got tedious.  Early problem sets involved large gate diagrams, which were time-consuming but not particularly insightful (the course touches on lower-level circuitry, but only skates the subject, which is presumably covered in the Physics department counterpart to the course).  Late problem sets involved translating into assembly by hand, which, again, was neither difficult nor insightful, but tedious.  Labs were more fun and, as someone with sufficient programming background, felt fairly easy.The material of the course is interesting enough for those interested in gate-level hardware.  However, the tediousness of assignments---which may fluctuate year-to-year---ought to color your decision whether or not to take this course.
This is a great CS class!  It has a lot of work, but none if it is overly difficult and you'll learn a ton!
cs141 is one of those classes where if you make the effort to do well in this class, you'll get so much out of it, and really have fun as well. Psets are really manageable, but pre-labs and labs are more difficult, but definitely do-able. I think it's a great class for people who want the hands on component to a harder side of computer science and electrical engineering.
It's an easy CS class but lectures aren't the most useful or interesting. You can read the textbook and learn most everything except what's in the labs.
I learned things I never expected to, actually got to build some things, and legitimately enjoyed lectures and labs.  Probably the best course staff I've ever worked with, too.
Pretty difficult class. Interesting topic. Took it PF and glad that I did.
You learn a lot about the CPU, but the labs are much more time-consuming than the two hours allotted each week so watch out.
The lab is the core of the class; it is the most interesting, the most rewarding, and the most time-consuming portion of the course. Lectures are adequate, and homework is somewhat interesting. Be sure you want to commit to a lab course, and then, by all means, take CS 141.
Loved the material and the class overall, but this class ended up being a lot more work than I expected.  There are written psets almost every week and labs every week which *always* require time spent outside of lab; in fact, most of my time spent on this course was on the labs.That said, Professor Brooks is a clear lecturer, and the regular TFs (Kevin, Tao, and Amanda) are all top-notch.  Would recommend this class for people who want to learn about designing computer hardware.
This was the best CS class I've taken at Harvard (maybe tied with CS61). It was definitely the best in terms of connecting material to real life applications. The labs were extremely time consuming, but they were fun. Before I took this class, a processor was just some black box that did some magic and made my computer work. Now I feel like I actually understand how computers work. TAKE THIS CLASS!
Class was really great, but labs were definitely poorly managed. We started labs based on material not yet covered in lecture, lab code Avi wrote was often buggy. Lab policy needs to be finalized (especially concerning late days). Updates were often pushed out to Avi's starter code AFTER the official deadline was passed. Problem sets covered the lecture material well, TFs were very helpful and quick to respond (especially Kevin later). Quizzes were 5 multiple choice and kinda silly. Final was focused on the later half of the course. Overall, labs were a mess, but they were fun to finish. Final project is fun and problem sets are not too difficult, can be done in 2 hours at office hours
As long as you keep up with lectures, problem sets will be challenging but very doable. The staff is very helpful, and office hours are always available for both homework and lab. The hardest component of the course is the lab, which is done in partners. It is important to have a reliable partner, since the labs are definitely the struggles that kept me up late at night. In addition, the final project was one of the most time-consuming aspects of the course, and coupled with a final exam as well, CS141 predominated much of my reading period. A strong CS background is not necessary but very helpful, especially in the lab component.
This class is definitely a lot of work - between lab work and psets, there are typically two assignments to do each work for this one class. However, you also learn a lot, and the final project is a very rewarding experience.
This class was one of the most amazing and rewarding CS/ES class that I've taken. You can walk away with the ability to tell your friends: "You like your computer? Yeah? You think that's cool? Well guess what, I can make one from scratch." (Disclaimer: by computer, I mean computer processor, and a bare bones one at that. But still, effing baller). However, the class really needed to strike a better balance in terms of work load. It was too overwhelming to have to deal with a problem set and a lab assignment every week, especially if one wasn't coming into the class with as much experience as others. Also, the lab structure could have been significantly improved with better organization. There were too many glitches and last minute corrections for lab assignments that were already taking twice as long for the students to complete as it seemed the instructors intended - so the lack of organization did not help the matter. There's a problem when a lab that's supposed to last 2 hours keeps you locked up in MD basement for longer than 7. With that said, maybe without that the class wouldn't have been so rewarding in the end.
It'll teach you the basics of hardware. The CPU will no longer be magical because you'll know how to make one. That's cool, but it is not very difficult conceptually.
Really tough if you're not a CS guy. Probably still pretty tough if you are a CS guy.
This course is awful!!! Don't take it unless there is a serious overhaul of the material. The labs are interesting, but they are poorly designed and the lab TF is awful and unhelpful. The homework was also ridiculously easy, which was misleading because the final was really hard. The lectures are also really poor, because they don't focus on important points, but rather on trivia that is stupid to memorize and makes for easy, busy-work homeworks.Your entire grade also hinges on the last 4 weeks of the course (final project and final), so the entire semester leading up is pretty useless.
Of the choices for the Electronics requirement, I still absolutely believe this is a better option than Physics 123 or ES 154.  I learned a ton and loved most of the course, even if the last month got pretty insane.  Good course overall; study hard and don't be afraid to ask for help and you'll be okay.
good class but labs are a lot of work
I would not take this course if you have modest experience with digital electronics or computer systems or if they do not make serious changes to it. It takes quite a while to get to the computer architecture specific stuff (which is what I was interested in), and then you don't really talk about it for that long (or so it feels). Homeworks were really tedious sometimes (converting numbers to binary, doing 2's complement arithmetic, HANDWRITING HEX for MIPS). Labs often have subtle bugs in the write-up or whatever which will cause you to waste a bunch of time. We had a final project (which is a _lot_ of fun), but there was also a final exam.
As with the best CS classes I have taken so far, this course helps you move one step lower in your understanding of computers: from assembly code down to transistors. Despite some issues with homeworks/exams, I still felt that I got a lot out of the course and would recommend that all CS concentrators take it in order to learn the fundamentals of computer hardware.
Beware the labs. The problem sets aren't horribly difficult, but the labs take a lot of time outside of class.
This class was terrible.Apparently Professor Brooks was sad that people didn't think this class was painful enough so he amped the workload.  Its the equivalent of somewhere between 2 and 3 classes worth of work and material.Labs were away.  Assigments were poorly designed and unfair.  Labs took forever to complete even with dozens of hours of TF help.Homeworks were also very time consuming.Lectures covered way too much material too quickly.  Professor Brooks just wizzes through 60 or so slides in his 1.5 hours and you quickly get behind and then can't understand the rest of the lecture. The final was absurd.  Compared to last years final which was open note, this year's was not open note and was significantly more difficult.Xilinx and the other tools you use for lab were super buggy.This class involves a ton of coding, everything is done on a computer.Take something else, this class has been probably my least favorite one at Harvard (even worse than Physics 11b with Feldman).And of course there were no sections to help you actually learn the material.
My reservation is that you have to be prepared to give up one week of your life to MIPS, and another pretty large chunk of time to your final project.
The labs were very frustrating, especially because they redesigned the lab this semester and we never got any feedback on how we were doing. Hopefully the labs will be better next semester. The homework wasn't difficult. You learn interesting things in this class, going from basic boolean algebra to computer architecture. We actually built a CPU! And the final project could also be cool (if you get it to work). However, I thought that the final exam and quizzes were very unfair in evaluating the students.
Final exam was much harder than any work done during the semester
Should be interested in hardware. I think I hated a lot about this class while taking it (because of the busywork), but in retrospect it was really cool stuff to learn.
You should know that after the first couple of weeks, "circuit design" just becomes a different form of code with more rules.
The material covered in this class overlaps with the material from CS61, ES50, and some Wikipedia reading about computer architecture. If this class is taken without CS61 and ES50 then it is really useful.
The topics are interesting and the work is doable, but the last lab is extremely difficult and will cause you no end of frustration.
I would recommend this class to anyone interested in CS.
A good introduction to computer hardware, but also has a heavy programming side to it.
Good stuff, kinda boring.
The class is good in most every way, except lecture can be boring, and the later labs are hellish.
This isn't hard.
The subject material is very challenging, but also very interesting, and the TFs provided plenty of help.  The lectures were not always interesting, but the labs and problem sets were generally relevant.  The workload was about average for a CS course, and overall was manageable.
This is the class was really cool. I finally feel like I actually know how computers work.
Don't take the final lab lightly!
I LOVE MIPS!!!! You're gonna hate it when you're doing the last lab, but you learn to really love MIPS and binary when you're done with the class. Xilinx is bit frustrating though, just have patience with it, and you'll get a lot out of the course.
Islands of interest in a sea of boredom.
The final lab takes a long time. An assigment can turn out to be more challenging than one might think at first. Professor Brooks is very atemptive. If you are interested in basic computer architectures, this is the course for you.
This is a good way to complete your knowledge of how computers work from a high level all the way down to the electrons. It's easy, but you'll learn a lot if you've never worked with hardware.
it's interesting cause you learn how computers work at the hardware level, you get a break from the long, complicated programming assignments. There's still programming, but it's much simpler than the programming of cs51 assignmnets.
Get a good lab partner.
An interesting class which is nevertheless not too difficult.
Can be lots of work, boring at times, but the cool parts make up for it.

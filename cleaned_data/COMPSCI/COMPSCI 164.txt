While this was a new course, I think it has a lot to improve upon.  The projects are very relevant to the material you learn, but the support structure (OH, lectures, clearly organized code structures, sections) is not quite matched with the overall student profile.  If you don't have at least a foundation in web development, I would *highly* suggest familiarizing yourself with it (especially PHP) before taking the course.  The iPhone dev part of the course, however, was much more flowing from CS50, as it is just an extension off of C.I would recommend this course if you're very interested in web/mobile development, but I would highly recommend having a solid background before taking the course.
You will learn a lot of useful skills, but be prepared for the workload and possible inadequate feedback.If the lecturer were anyone else but Malan, then I probably would not recommend this class.  Malan is a great lecturer, but this course was very rough around the edges.  The TFs always seemed overloaded, and expectations regarding workload and grading were not made clear.If you only have CS50 under your belt, be prepared to struggle.  Many people dropped the class in the first few weeks.  Definitely buy the books; I can't stress this enough.
This is a coding class.  For the most part, it won't teach you new ways to code.  I appreciated it because I hadn't coded in a while and I wanted to "relearn" coding but if you're looking for something more rigorous, this isn't it.
Fantastic class!  Probably the most directly useful one I've taken at Harvard.  Highly recommended, but be prepared to work for it.
This class is great!
This class was an awesome intro to professional software development. It requires a certain level of sophistication in CS and web dev, but the course is well-taught (who doesn't love Malan?) and there is a lot of support from TFs and such. That said, the grading system was somewhat arbitrary. It's tough to have 4 psets and grade them out of 20 each...5 points on each of 4 areas leaves not much room for error. Also, XCode is terrible. When it works it's great, but when it doesn't it's like running into a wall. Finally, MAKE SURE YOU HAVE A GOOD PARTNER. Having a bad one means you get dragged down on their behalf. It stinks.
Great way to learn mobile engineering, but it is a lot of work and often very tedious. only get into it if you're serious about learning and want to build apps. Overall, one of the most useful classes I've taken in terms of providing a tangible skillset.
Terrific course, especially considering that this was the first time it was offered. You must enjoy coding, and a lot of it. Many students might complain that this course was poorly organized, but I think that these people are probably those who are either a) bad at coding, or b) bad at time management, because honestly this course was organized very very well. The 4 projects were all extremely engaging and fun and interesting, there is an abundance of support, and lectures were quite interesting. You will have a lot of fun with the projects and feel like you are doing something useful and cool, but only if you organize your time well, because they do take a lot of time. I found myself "addicted" to coding by the end of this course, to the point where I would work on my projects even after they were done.
This is a great course to take to learn how to program well, but be prepared for all of the work that that will entail.
be ready to work independently
Very interesting class... Approach the TFs for help during OH.
Not worth your time. It's a lot of work but you don't get much out of it. Everything in the class could be learned on the job, from a book, in much less time.
You will learn a lot about mobile app development in a pretty short period of time. That being said, this class is very time consuming as building an app from scratch isn't something that can be done in an afternoon. You will probably need to devote a large chunk of the weekend before a due date working on the project. Try to start well before the deadlines as you will probably discover that certain aspects of each project are more complicated than you initially thought.
This is a great class! It teaches you a lot about mobile applications which is a very interesting and extremely applicable topic! It was because of this class that I got a summer job! Also, Malan generates, as always, a lot of enthusiasm and makes the class fun!
Kind of fun, but iOS development can be a pain. Xcode is buggy and a pain at times.
one of the top 3 courses i took here in 4 years.
This is a difficult but rewarding course. Malan has brought an applicable and interesting course, but it is quite difficult for someone with little coding experience. I would say take it but know what you are getting into. Be willing to pull all nighters and choose your partner VERY wisely.
It was the first year, so I'm sure they'll improve it. It's a good idea for a class, just shop it and see if it's improved
CS164 had a rough start, but the staff cared, and it definitely shaped up near the end of the semester. You will need to be prepared to handle fairly massive projects with much less support than CS50, so come in with more than just one semester of coding behind you.
Pick your partner wisely. Go to lecture. Get started EARLY on the psets.
It sounds cool... but it's really not. I don't know of anyone who enjoyed the course.
Be prepared to spend time on the projects. Do them early too to avoid all-nighters.
Astonishingly enough, even more of a time commitment than CS50.  Unless you already know mobile development already, look to spend 30-40 hrs per week combined with your partner.  If your partner slacks off, you have to pick up the slack.
If you can commit to watching the lectures online every week there's really no reason to take the class yourself. (And if you can commit yourself to doing projects).
Worst decision ever - wait for it to be refined/developed.
Good intro to mobile web development. Much of what I got out of the class was self-learning by working on the projects, but support is available to augment that learning. In general, the class gave me an excuse to learn iOS and PHP frameworks, as opposed to directly teaching me much about them.
If you have the proper background, I would highly recommend the course then. Projects were very engaging and offered much flexibility
Fun projects, not as frantic as CS50 or 51. Helpful to gain basic understanding of mobile programming. The web app programming isn't too useful but the iOS stuff will come in handy.
You should be comfortable with programming and learning new languages and techniques (i.e. CS50 alone is probably not enough preparation).
Be prepared for a lot of late-night debugging, especially when you try to do something "clever" in objective c.
I enjoyed this course and would recommend it to CS concentrators and other curious individuals. The current format is 4 30-hr projects, so schedule things accordingly.
Make sure you select a good partner, otherwise it will be a difficult semester.
Not for everyone but good for those that already know how to code properly for iOS.
In the first offering of this course a lot was wrong with it. The subject material wasn't really taught. But trust Malan to improve it in the coming years.
CS164 is a lot of fun. The material is engaging and very relevant to today's tech environment. It's still having its kinks worked out as it is infantile, though I'm confident that those will disappear before the next time it is available.
This is a fantastic course (another Malan must-take). The second half of the semester is particularly awesome - learning how to make iPhone apps is sweet! The setup of the course is really great (4 projects, no final). I would recommend anybody relatively new to CS (those who have only taken CS50) to take it pass-fail, because there is a wide range of experience in this class, and taking it pass-fail lets you enjoy learning everything you can but not worrying about how yours is relative to others.
This course was great, as someone who found a good partner, and had a lot of CS experience. Make sure you have someone to take the course with, and that you've taken more than just CS50!
Get started on the projects early. Also, there is not that much handholding. Learning new frameworks is a fact of life for computer scientists, so if you don't feel like spending 5 hours or so reading references and testing things out to get the hang of new frameworks like CodeIgniter and jQuery Mobile, look elsewhere. The second half of the course, on iPhone programming, is very fun and helpful, just too bad that objective-c is such a terribly designed language. Again, if you feel like whining when learning new things, do not take this course as you will have to learn a lot of new things to get an app running.
Unless the course gets a major overhaul I wouldn't recommend it. You can make a couple mobile apps on your own and get the same education as this course. Lectures are essentially irrelevant, they really don't help you with the projects and you have to teach yourself basically all of code igniter.
learn some php before taking itmake sure you have time to complete your homeworks
I approached 164 as an engaging, fun, and relatively low-key course, and it turned out to be a frustrating, disorganized, and all-consuming course that severely decreased my inclination to study computer science in the future.  While I can't speak for CS51, if faced with the choice between the two of them again I would have made a different decision in retrospect.
/* * This function gets an array of students and returns an array of students after  * attending lecture */(NSArray *) teach: (NSArray *) students {   	return students;}/* * This function handles a student problem at office hours  */(NSString *) goToOfficeHours: (Problem *) questionToTF {	// initialize array of ideas	NSArray *ideas = [[NSArray alloc] initWithArray:STACKOVERFLOW];	while (i in ideas){		if([self tryIdea:i])			return @"yay!";	}	return @"sorry! out of ideas!";}(BOOL) shouldYouTakeThisClass {	return NO;}
Suitable for Master's Student with no experience in php, iOS, SQL
This course was definitely rather rough around the edges (as any course would be during its first running) but it definitely fills a more practical niche in the otherwise very theory-focused world of Harvard CS.
I have enormous faith that Professor Malan will take Q evaluations to heart and really work to improve this class for the future. This, combined with the extremely useful nature of this course's content, motivates me to recommend the course to you. However, this year the course was fairly disorganized at times, and I felt like I was thrown in to a bunch of large scale projects without the initial comfort that CS psets (in the style of cs50 or cs51) would provide. I think this couse should be taught with psets in the first half of the semester and 2 projects in the second half. I applaud Malan's ambition in starting up an iPhone programming course. He did a pretty solid job for the first time around, and I think that he'll really rock at it next time.
The most practical software engineering class I've taken
I think this course is likely to change a lot next year, and likely all for the better. It was clear even throughout the semester that it was constantly being reformulated based on student feedback and needs.
If you want to learn iOS programming, you'd probably have more success and less frustration learning it on your own. David's a very good teacher, but the course is unsatisfying.
Came in from CS50 wanting to be a CS major. Now doing MCB. You should have lots of CS experience before taking this course.Granted, my partner sucked. Pick a good one!
Well, I hear this class is going to be changed dramatically, so I'm not sure how useful anything I have to say might be. At any rate I'm glad I took it. I definitely learned a ton of things I couldn't have picked up from a book or online.On the downside, I think I ended up doing the bulk of the work because my partner often had to write papers for other classes. That wasn't fun. We were also completely blank on ideas for the students' choice apps, and the assignment was incredibly open ended. Good and bad at the same time...
Prepare to work while having fun making some of the most modern and relevant cs projects
Be prepared to teach yourself most of the material. The lectures help in giving you background on the topics, but when you get to coding, its a different world.
This course was cool, especially if you take it with a friend since the course is partner-based. Not sure how often it will be offered, but it might be a good idea to take it while it is offered. Designing apps can be a fun, creative investment. Expect significant time commitment if you're rusty or relatively new to coding, as I learned mostly by doing, and I did a lot of doing.
I found this to be a great introduction to mobile software engineering.  For those coming straight from CS 50, this class will probably prove challenging, as there are many new concepts to be learned and the project schedule moves quickly.  For those who have more experience (perhaps Juniors, Seniors, Grads), you may need to decide to increase the difficulty of the projects (i.e. choose a different technology, or design a harder project) in order to get the most out of it.  Things that will help to know are object oriented design, database design (Mysql and CoreData), event driven development (for iOS), scripting languages (PHP was used in the course), MVC style frameworks, some web programming (HTML, CSS, JavaScript), as well as some C-style languages for Objective-C (knowledge of pointers and such).
It's a life ruiner. It ruins people's lives!
Take this class if you are willing to put the time in!  I would say it is more time but much less frustrating (and far more rewarding) than CS50.  My partner and I did fairly well and probably each put in about 35 hours on a bad week and 10 hours on a good week.  We would often pull two all-nighters in a row to get everything done in time, but we also set high standards for ourselves.I got A LOT out of this class because I put a lot into it.  Do not take this in combination with another time-commitment-heavy CS class, but if you're taking an otherwise normal load, DO IT!  It's a lot of fun, definitely my favorite class this semester.
This class is a bit disorganized -- make sure to frequently get feedback from your TF so that you know what to do.
This is one of the few CS courses that is directly applicable for your future carers. You actually make iPhone apps instead of just learning theoretics. However make sure you get a good partner or you will be upset as everything is split with them.
Poorly organized, I might recommend it if there were new tfs
If you love web development, are decent at it, and want a class that gives you the freedom to work on whatever you want at your own pace, this is the class for you. You can build some really cool stuff just because you'll have the time to do it.If not, don't take it. You will suffer if you don't have the personal motivation to carry through on your own projects.
This class is a ton of work, but you'll be in great shape to make web and iOS apps by the end. Working with a partner is a really cool experience.
It can be a lot of work at times, but when you're done you've learned a lot and you've built your own awesome (or not so awesome) product.
This class is a lot of work. It might seem really cool be be prepared to learn Objective C on your own in less than a week. It is definitely not a continuation of CS50.
Great class, learned a lot. In general, I spent one or two weekends working on my projects every month (i.e. i didn't work during the week on the projects at all), and found this to be sufficient. This means you generally have two weeks "off" each month, so in all honestly, I didn't find the workload overwhelming. However, my partner and I worked really well together and were resourceful despite only having CS50 background. I could easily see students with only a CS50 background struggling a LOT on the first project, and then probably adapting to the pace of the class.
Really fun!
The class seemed to leave it up to you to learn the material on your own, so only take this class if you have the time and are interested.
an awesome, interesting class, but be prepared to spend a very large amount of hours on assignments
It is a lot of work, and most of the learning you do will be on your own.
make sure you have a good partner who is willing to put in the work.
It was unnecessary to take this course to learn any of the material.
I took the class pass/fail because I had only a semester of computer science under my belt before this class and this turned out to be a fantastic idea. In order to take this class for a grade, I would recommend substantial programming experience, especially in web programming. That being said, you will learn a TON if you take this class with little programming experience and although some of the projects may seen difficult and overwhelming at first, they are ultimately very satisfying.
Learn how to write for the iPhone.
You need to have skills and time to dedicate to this class. But it's the best way to learn to program for the iPhone, as well as things like version control and testing.
One of the worst administered courses I've taken at Harvard. The TF and course heads are incredibly inconsistent in how they determine and apply course policies, make up policies that supposedly exist on the syllabus, and inconsistently apply policies from lateness to grading individual assignments. TF quality is pretty bad too - many are non-students without much CS experience. My TF even at one point said he was "too lazy" to correctly grade my assignments (fortunately, that TF eventually revised my grade).On a bigger scale, the course is not intellectually rigorous. I never felt I was being intellectually challenged in the course, just gaining skills on how to code in a new environment. You can learn this yourself, but being guided to think in new ways, learning to solve problems in new ways are all important and not touched in this course. It really doesn't fit into the liberal arts mindset of Harvard.Finally, there is abysmal support for students through the process.  Lectures are not relevant to the assignments. Office hours are not very helpful and some TFs seem like they just want to leave. There is no feedback (at all) for your assignments, just a couple numbers in an email sent to you too late to have any impact on your learning as you work on the next assignment.If you take this course, good luck getting a good TF and not getting screwed over by the randomness of the courses's odd policies. This course is like playing Russian Roulette with your sanity and grade. You will do multiple all-nighters for projects (most people in the class did) and will still learn very little.
you could learn things in this class on your own time or from a job --- I think the material is not the best for a university lecture.
It's rewarding, but it's work.
Be careful of who your TF is and be prepared to work VERY HARD
fun class, some problems with the structure but teaching staff is very responsive to feedback
Over the course of the semester, we worked on two projects, one in node.js and the other in ohp using a framework called Laravel.  Since the entire class is project-based, there were a few lectures to start basic concepts and once we chose groups, we simply met in groups once a week with our TF.  There were office hours added halfway through the semester but for the most part, there was a lot of figuring our own way--which is typical of web development anyways.   One of the great things about this course is that they're trying to figure out the best setup so the staff is very receptive to student feedback,
A really good course if you are interested in web development and willing to study on your own.
This year was a major improvement over the last iteration, and knowing David it will likely be even better the next time around. The projects are a great way to gain experience with building software at a level that other courses don't offer.
This is course has a LOT of work to do. It has almost no structure, with only a few lectures (almost all of which are highly technical and less informative) and only 1-hour meetings each week. The rest of your time is spent learning and applying the two web frameworks used in the class: Laravel and Node.js. While I came out with a much better understanding of HTML, PHP, CSS, Javascript, and the in's and out's of both frameworks, this was not because of what I picked up in class. Google was my instructor for the semester, and Google (and Stack Overflow, the section leader) taught me all I know about this material. Guidance in class is very light. Malan would stay for the first 30 minutes, offer a few remarks, and then hand it over to Rob, would have a few other remarks; a few comments about UI would be exchanged, and that was it. The code itself was almost always peripheral; what mattered was a good presentation. And then you even though you have spent many hours that week working on your project and meeting the expectations set at the last meeting, you might get an email for Malan later that night expressing his disappointment in your group's progress.In short, there is a lot, a LOT that needs to be improved about this course (is it really a course?). More informational lectures are needed; more defined project scopes so you're not implemented endless, useless features; and a better system of feedback and criticism from the staff is in order. While I think the course has promise as an intensive in web development, a great deal of effort needs to be put in to reshaping it what the course's purpose and objectives are before it is ready for another semester.
Take this course if you have a strong programming background and want to work on larger scale projects with a team.  You can accomplish a lot during the semester, but a lot of the learning will be on you, as their is not much formal instruction.  On that note, the flexible schedule and creative control that groups had for their projects was great.
I had such high hopes for this class and they were thrown down on the ground and shattered into many pieces almost immediately. The TF's tried valiantly to help us students get something out of the course, but it ended up just being us facilitating Prof. Malan's filming his classes, and doing his intended Harvard cs projects for him, while he didn't actually teach us.
I really wish I had loved this class. I wish that it was everything that I thought it would be -- and yes, I came out of it with some good experience with coding frameworks and the like. I guess that the class gave me the structure and, so to speak, lit a fire under my ass to get me to work, but I feel like I could have literally learned all of this information without the context of the class. I already stated this earlier in my Q evaluation, but the first half of this class was atrocious. Absolutely no guidance on anything, which seemed like a good idea on paper, but ended up being very confusing for everyone involved. The worst part by far was the constant feeling that we were on a reality TV show for a CS class -- all the filming, the weird competitive aspect of the class, these passive-aggressive emails we would receive from Malan about our work... I could go on and on, but the basic gist of it all was that he wanted to make this another CS50, which in it of itself is already too much.The second half of the course, NodeJS, was admittedly better. They seemed to take our feedback in and restructured the class. But the first half of the class left such a bad taste in my mouth that it was hard to enjoy the second half. I wish there had been more emphasis on actual code that we wrote -- for the first half, we spent hours and hours just restructuring our code so that it would be extremely efficient, only to find that they didn't even seem to look at what was in our repository at the end. So we restructured the way /we/ looked at this class for the second project, and basically focused on writing messy code that would churn out a pretty final product, something I am not pleased about.Anyways. If you want to take this class, likely me writing this review will not deter you from taking it. But at least, let's hope that they take this feedback into account when it's offered again.
There is a lot of personal work and quite lose guidance.
The main benefit of taking this class is that it forces you to learn things you otherwise might not. The majority of the learning is still on your own through Google though.
It will consume a large chunk of your life, but you will love every (most of every) moment of it, and you will learn how to work effectively in a small team. You will also receive intensely good feedback and learn to code from that. Reminds me of industry/internships, which I think is the point, b/c it's called Software Engineering.
The best course I have taken at Harvard. I have never received so much attention in an individual course and have learned more in this style than any lecture-based class. You have a team of 4 for the whole semester and meet for an hour once a week with Malan and a TF. The rest of the time we were on our own, actually building two fully-fledged websites/apps. Take this class - even if you have only the bare minimum of the requirements (4 CS courses). I only had this background and was able to learn SO much in just one semester. Before this course, I did not really know how to code, despite having taken a handful of CS classes. Now I know how to build a fully functional web app, adding so much value to my future career.
I expected the course to include more feedback on our web development projects - unfortunately most of the feedback was on small bugs and not enough on material that I felt actually increased my ability to do web development. Greater feedback would be appreciated, although I do realize that the teaching staff are stretched very thin.
This class is a lot of work. Many weeks I had to spend over 20 hours to become familiar with the frameworks, debug, and push new functionality. The experience was very rewarding though, and not one that can be found in other classes.
This class gives a great hands on approach to CS. You learn a lot about programming and designing a project. The course is almost entirely self-taught. You get out what you put in.
Take it if you want an experience developing a group project over the course of the semester and enjoy programming/engineering.
This class gets a bad reputation. What you put in is what you get out! Finally a CS class at Harvard where you can make a product with a user in mind. Awesome experience for me.
I really appreciate the opportunity to take such a technical course given the generally theoretical nature of CS here. Lots of teamwork and programming, and potentially very rewarding.
The class is fairly independent- there is little guidance beyond the two-hour per week meeting with your mentor. The class had a difficult learning curve as none of my team and I had used the language and framework we chose. Towards the end, as we understand the tools better we were able to develop much more efficiently
This year you picked your own project. I would advise future students to only pick a project you are passionate about. It makes all of the work fun and meaningful if you care about what you are building. There are already so many Harvard Map, Shuttle trackers, class-pickers, etc. -- could you build one that's BETTER than what students are already using? If not, try to come up with a super original project idea. Also, set weekly meeting times with your group early in the week.
This was definitely one of my favorite classes at Harvard, and definitely the class that not taught me the most but also instilled in me a sense of confidence about my skills as an engineer.CS 164 is a great class that will leave you with a deep understanding of the software engineering/web development process. By the end of the semester, you will know the ins and outs of system architecture, GIthub workflow with a small team, the build/deployment process using Docker and AWS, handling of security issues, and generally how to determine what works and what doesn't in practical application. However, there is little to no hand-holding and the only resources you really have are your advisor and the internet. If you've never touched web development, this is not an introductory course and will be almost impossibly time-consuming. That said, if you're looking for an experience that rivals a real software engineering internship at a fast-paced startup you will probably enjoy this class. Just be ready to spend upwards of 25-40 hours a week, depending on how determined you are to get a good grade in the course. I found myself spending WAY more time on this than any of my other classes, but that was mainly because it was just so interesting, and I felt a sense of ownership over my project that I'd never experienced in a class at Harvard before. If you've got the time in your schedule, definitely take this class!
Given the low level of support and engagement from course staff this class is pretty similar to just working on side projects on your own except that (i) you get a grade and (ii) you end up working with a partner or partners you may not get to choose for yourself. Think your experience will be extremely dependent on the group you're with. You'll also get out what you put in, and nothing more.Would not take this class unless they've made significant changes to the Spring 2017 format.
If you aren't into web stuff, this class probably isn't for you. The class is one big independent project; there's no lecture. You work on whatever you want to work on, learn whatever you're interested in--on the whole you get out of it what you put into it. It's pretty helpful to come into the class with an idea of who you might want to work with.

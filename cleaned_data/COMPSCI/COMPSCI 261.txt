I don't think Margo knows how to make an easy coursethis one is easier than 161 but still very tough. There's two ~12 page conference papers (about 25 pages as a double-spaced Word document) to read every class, which does get tiring. Most of the papers are very good though, and you'll learn lots of the hip systems research topics and where they are now. You'll also learn to examine research papers critically, take away the big ideas, and see the connections between various different research topics.

Then you'll do your own research project, in addition to the readings. This project is really what you make of it, but if you want to have a good project you'll have to put in a lot of time here. Interestingly, what code you write is not so important hereit's all about the writing and presentation of the results (you'll likely have to write code to get results, though!).

Overall, this is a great course and will really help you get acquainted with the state of systems research. If you're at all interested/intrigued by systems, research, and have room in your schedule, it's definitely worth taking this class.
This is an awesome class and knowledge gained from the class brings you to a whole new level of understanding about computing.
You really have to spend time on it and pay effort. This is the only that the course helps you improve.
Take this if you're comfortable with reading academic papers.
The format of this course makes it fun, but it might not be for everyone. Reading and discussion dominates the time in class, and students are expected to understand material independently and generate useful input.
It's an amazing class, especially if you're interested in doing research.  I'd recommend it to anyone who knows OS and wants more.
Set aside time for the readings.
This course makes you are more knowledgeable, stronger computer scientist by helping you understand how the modern systems grew from the ideas and concepts of the past, and provides an excellent view of current research that can inspire your own career or research path
If you have any natural interest or curiousity in how modern computers function (in software), take this course.
This class really teaches you how to write good papers and do good research.  If you want to do those things, take this class.
Many of the papers for this class are "must reads" for computer science graduates
Take this course. It will teach you how to think about academic research. How many academic papers have you read? Margo will have you read fifty. Each class, you'll discuss two with some of your smartest peers, and by the end, you're ready to write your own. The discussions you'll have here really broaden your horizons in the field, and whether you're pursuing a career in hardware, OS, scientific computing, distributed systems, or software engineering in general (or are just interested in OS!), the incidental lessons you'll learn from your classmates are almost as useful as those you'll learn from reading (and discussing) seminal authors' pivotal papers in the original text.
Take the project and homeworks seriously.
This is one of the best courses I have taken at Harvard and despite its difficulty ("less work that CS161" literally means nothing) I will always be grateful I took it. In this course I learned several important lessons: (1) I learned to read, understand and evaluate research papers. If you have never read and discussed research papers rigorously before, you will be surprised how difficult it is to do, especially in a reasonable amount of time, and you will improve immensely by taking this course. (2) I learned what constitutes good writing and through that how to write a research paper. As you will find out throughout the course (if you take it), it is extremely difficult to convey complex system design with words, so improving your writing is valuable. (3) I learned to think of good questions to ask in order to do research. While this seems simple, being able to ask the right questions is one the most important aspect of research. And (4), I learned to understand with what parameters I should evaluate a system - or research in general. This course changed the way I think of systems and research in general. In addition to teaching me those 4 skills, it also drastically expanded my background knowledge in systems and enabled me to leverage past experience of system developers in my own projects. Finally, few courses will attract such a combination of bright and hardworking students, and few courses will provide you with an opportunity to interact so closely with Margo on a weekly basis. I highly recommend this course.
This class is related to operating systems in much the same way that a class about the original writings of Nietsche is related to the German language.  You will have no idea what is going on in the class without knowledge of the latter and just like reading Nietsche will improve your German, reading the papers from this class will improve your knowledge of operating systems but in no way is that the primary pedagogical aim of the class.  A better title would be "Reading and Writing Research Papers 101".  No one will look at a line of code you write.  All the deliverables are some form of written prose.  You will also be required to manufacture an opinion on every paper you read regardless of whether you feel that you have the knowledge or experience to properly evaluate it.  After taking this class, I can now bore you to death talking about various topics in operating systems but if you asked me to go build one of the systems we read about in class, I would have no idea where to start.TL;DR - Insufferable amounts of reading and writing; criminally negligible amounts of actual doing; avoid at all costs.  If you're really interested in operating systems, take 6.828 at MIT instead
Prof. Seltzer is great -- this course gives you a chance to interact with and learn from her on a wide variety of systems topics.  Perhaps most importantly, you'll learn how to write systems papers -- which is not nearly as easy as one might initially think.
The final project will take a ton of time and effort, so make sure you devote enough time to that. Readings are super interesting, and Professor Seltzer leads discussions very well. You'll get a lot out of this course, especially if you do not have that much exposure to reading research papers. I feel like I will do better research as a result of taking this course.
Take this class!
Looking back, I feel that I didn't understand much of the papers when I initially read them for class, but I began to understand them when studying for the quizzes when I could take a step back and see each paper in the larger scope of things. I think the overall understanding of the papers could have been improved if we could see the larger picture of things and how all the papers relate to each other, then sometimes getting lost in the details of a single paper.This class made me realize that(1) Reading academic papers is HARD (especially if you don't have much experience)(2) During discussions, I felt as if everyone else had a much clearer understanding, yet I was lost.(3) I was initially turned off from academic research, but this class definitely showed me how one conducts systems research!
This course is FANTASTIC.Pros:1) Margo -- Margo is great at getting everyone involved in discussion and engaged with the material. This makes class time incredibly valuable. In addition, Margo is an astute and dedicated research adviser. Her advice was always spot-on, drawing upon her extensive knowledge to provide helpful suggestions without dictating my research path. I am thrilled that I had the opportunity to interact with and learn from Margo this semester.2) Other course members -- Over the course of the semester, I developed a deep respect for each and every one of this other students in this class. Each brought his/her own unique perspective to the class and contributed significantly to the discussion. Hearing their perspectives actually changed the way I think about computer science and related fields.3) Learning to write -- This course has improved my writing skills far more than any Expos or Gen Ed class has. I have not taken a representative sample of all Expos/GenEd courses at Harvard, but generally speaking in my experience these courses have only confused my writing style due to vague comments on papers, half-hearted peer reviews, etc. This class, however, forced me to recognize flaws in my writing and to fix them. I attribute this mainly to Margo's focus on paper reading/writing throughout the course and to peer reviews (which, in this course, were clearly well thought out).4) Get a solid introduction to research -- We started researching with about 1.5-2 months left in the semester, meaning we actually had time to get a good introduction to research.CON (not necessarily a con, but something you should be aware of)0) Margo describes this course as "less work than 161". While this is true, this course is still a significant time commitment. My partner and I spent roughly 20-30 hours per week on this course (8 per week on readings, 12-20 per week on research; add a couple hours in there somewhere for 3 quizzes and the first assignment). Be aware of this time commitment.In summary, I highly recommend this course.
If you are not familiar with the material in Prof. Seltzer's "Supplementary Papers" section of the syllabus--then read the supplementary papers.
If you took 161 and enjoyed it, don't think twice about taking this - just do it! If you didn't take 161 but want to learn about systems research, you should take it, but will probably have to do a bit more work to catch up on the background.
Its a good way to complete a substantial project over the semester.
Think about the research project early, including what you'd like to accomplish and what you envision your end product will look like. It's much easier to resolve these things earlier in the semester vs. later, and it will be beneficial in the long run. Aside from that, reading papers and preparing for discussion will require a consistent time investment each week, which is actually pretty convenient.
What I got from the reading list was good material, so if you're interested in reading a lot of systems papers, then the class is great. Beyond the reading, there is very little technical content that you will take away from the class, so if you want to learn something about operating systems, take something else.
It's a good course for both learning about operating systems as well as becoming a better researcher.
Great course
Only take it if you LOVE systems and don't have any other hard classes this semester. You will learn a lot about systems, but if that is not your thing, or you are not super familiar with them, beware.
The projects and reading can be quite a bit of work but I learned a lot about evaluating and conducting research in an academic setting.
Be prepared to feel small.
Good paper selection. There are weekly homeworks based on JOS, but they don't require that much time.
This is a difficult, programming-intensive, systems research course. If you don't have significant C programming experience, obtain it before taking this course. If you've done operating systems programming before, this course may be significantly different and therefore worth taking -- it's an exokernel design, and the research component is high.
Its a lot of work but worth it.
A great addition to the stuff you learn in CS161.  However, the labs can be time consuming, so only take this class if you are truly interested in the subject matter.
This is an awesome course, especially because it combines coding with reading research papers. If you want to do systems research, this is the class for you!
This class is a lot of work but definitely worth it!
The labs aren't all too difficult, although I recommend starting somewhat early. What's much more important is trying to understand the readings - if you don't, important things will quickly start going over your head.
Take it!  It will make you a better student, a better researcher, a better computer scientist, and a better programmer.  Eddie is amazing.  Don't let the difficulty of the course scare you; it is SO worth it.
Take CS 261!  Do-able but challenging labs, paired with an engaging reading/discussion component.  The course does take a lot of time, but you will get a lot of out of it.  Professor Kohler is awesome!

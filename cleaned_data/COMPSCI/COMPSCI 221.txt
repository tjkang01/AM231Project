If you are really, truly interested in computational complexity, this is the course for you.  It's a nearly back-breaking workload, but the colin's and salil's support is really helpful, and you will learn alot.  Take this class if you are prepared to work very hard and learn some very interesting material.
The course requires more statistics than advertised. Probably stat 110 is sufficient. The class is much more difficult than CS 121, but the material is also a lot more interesting. CS 121 is tedious and uninteresting in comparison.
Understand our knowledge of computation, well beyond what you will learn in intro theory. Worthwhile.
It's a great class, but can be challenging at times. I am not even particularly interested in complexity theory long term, but its fun to think about and the problems are good.
The proofs in this class are far more difficult than those of CS 121. Take the undergraduate discrete math classes strictly before you take this class.
Salil is a great professor that cares for all his students.
This is a must take class with Salil, as he presents cutting edge material in an engaging way. You learn a lot. All CS/math students should take this class at some point.
This class is excellent, especially if it is taught by Professor Vadhan.  Be ready to work very hard and to get out what you put in.  The material itself is very interesting and leaves you with a good impression of the open areas of research in theoretical CS. Also if you are in over your head actually get help, the teaching staff is very kind.
This class covers plenty of material that is essential in a Computer Science background. You'll be glad if you take it!
Professor Valiant is not the greatest lecturer.  Although he may look confused and uncertain in class, he does know what he's talking about.
Definitely go to office hours early if you have questions about the problem sets
A lot of work, but you'll get out of the course as much as you put in.  Expect to spend a lot of time reading/self-teaching on your own.
problem sets are lots of fun and satisfying
The lectures aren't great and it's a lot of work, but the material is interesting, so if you're willing to put up with the course weaknesses then it is definatly a rewarding experience.
CS221 covers a huge array of modern, powerful results in contexts such as circuit complexity, randomized complexity, counting complexity, etc... A lot of the techniques and big ideas are very thought-provoking, but the proofs can be very very nasty, and there is a sense that the field has many disjoint components. Problem sets are hard and fun, though it can be hard to keep up with lectures, esp. without a real textbook. Valiant is brilliant and one can get a sense of how he approaches problems (including ones which he originally solved), but expects a lot out of one's power of concentration to follow along. Take it if you like doing tricky, somewhat long arguments to prove results about semi-obscure but cool classes of problems.
By far the hardest class I've taken at Harvard. Very interesting subject matter, but definitely don't take it unless you have a lot of time to spend on homework and did extremely well in CS 121 and some advanced math courses.
The material is very interesting and worth studying. Don't underestimate the time it takes to write up psets after you solved them.
The course was a fascinating, if somewhat scattered, collection of material. The problem sets are quite difficult, but often fun.
A very theoretical class. I took it because I liked the mental exercise of the problem sets, which were indeed challenging and stimulating. The lecture was very confusing to follow at first, but I adjusted to the style and got more out of it later on.
Certainly one of the hardest classes I've taken at Harvard but nonetheless very interesting. The problem sets were challenging and should be started early. Les Valiant is probably my favorite lecture at Harvard; I know that he's not to everyones' tastes but he is extremely effective at getting across the motivation for proving particular results. The class' material is presented as a coherent whole and the way it progresses is an interesting model for how academic research works. Professor Valiant is one of the smartest people at Harvard and some of the result from the class are his original work.
If you're a CS theory person, this class is for you.
This is probably a course for Math / CS people (the math experience is more important than the CS). The first bit on Turing machines can seem a bit tedious and unenlightening, but it gets better from there so don't be dissuaded during shopping period. The problem sets are interesting but don't really use much of what we learned in lecture - it's basically all about being able to come up with algorithms and reductions on your own from the definitions, which I found challenging but rewarding all the same. That said, lecture material is interesting although Valiant isn't a stellar lecturer (he tends to mumble and his handwriting is not too legible), but overall going to lecture is worth it. This course gives you a much better understanding of the different complexity classes and the variety of open problems along with their implications. In the end, I'm glad I took this class.
If you want learn complexity theory from a true master, this is the course to take (assuming Valiant is teaching).  The lectures are quite good, if you really pay attention.  Valiant isn't slick or an exciting performer, but he knows the right way to think about the material.  The choice of topics is maybe not super modern (for instance, no quantum computation, though this may vary year to year).   At the beginning of the course, the problem sets don't seem very difficult, and since they're only assigned every two weeks, you may think (like I did) that you can do well in this class without much work.  Don't be fooled - many of the problems, especially later in the course, are very difficult.
You do not need any CS background at all-- most important is a strong math background. 221 is quite a bit of work. The quality of the course materials seems to vary with the professor. (The textbook is excellent, but there's a decent amount of stuff that isn't covered in great detail, or at all, in the book.) You get some intuition for complexity; you'll find that the proofs covered in class are quite difficult, while the problem sets are manageable and just require >= moderate general cleverness.
The material and concepts do not always come easily and will require time, but the understanding is very valuable and worth the effort.
Prepare to work very hard for this course. A strong background in proof-based mathematics is a must, and an inclination to think abstractly is helpful. The problem sets are hard and take quite a while to complete. Professor Valiant, however, is a true leader in the field and his lectures are very well presented and insightful.
It's a great class if you enjoy this sort of stuff. Try to take it with friends so you can have some people to work with.
CS 221 was a great course. Salil is a fantastic lecturer and you will learn a lot. If you are at all interested in complexity theory, then definitely take this course.
Salil's lectures are very engaging and helpful for solidifying your understanding of the readings. On top of that, the material is super interesting, and the problem sets are quite fun.
It's very hard if you fall behind (I did). Please stay on top of the material and if you find yourself falling behind, talk to the professor! If you're taking other hard classes along with CS 221, it'll be very difficult to catch up halfway through the semester. I'm not as much of a genius as the rest of the people in this class, but perhaps you are. If so, then maybe this won't be so bad. For me, it was a nightmare. Regardless of how many all nighters I pulled for this class, I still feel like I'll do horribly given that I fell behind.
The class is a great introduction to complexity theory. Coming in to the class, I thought complexity theory was all about P and NP, but the class showed me how complexity theory leads to insight on a much broader range of topics, such as approximations of NP problems, cryptography, and quantum computation.
Lectures were well presented, the textbook was solid, pre-lecture readings were well-selected and informative. The assignments were very difficult. Making friends in the class is a must. This course could have benefited from a TF to lead sections to reinforce the material.
Vadhan is an amazing professor and is extremely passionate about theoretical CS. You won't find a better person to learn CS theory from!
Great course, well worth taking if Salil is the professor.
Computational complexity is am amazingly hairy field, and it can even get depressing when most of your results state that certain things don't work. If you're into that, then this is a great course to take. It is very difficult at times, but in the end you do learn quite a bit.
I really did not enjoy this class. I found the learning environment really uncomfortable. To make matters worse, the class focused on the parts of complexity theory I consider dull - like circuit lower bounds. I think you would be wise consider 18.405J at MIT instead.
I really enjoyed this class - Salil's a great teacher, problem sets were well-designed, material interesting.
This is a great course to take with Salil! He's not only a leading expert in the field of computational complexity, but also cares a great deal about his students and doesn't hesitate to spend the time to help them and make the course great all by himself (we didn't have a TF this year!). The problem sets can be hard and require some mathematical maturity, especially in combinatorics and discrete probability, but they're also pretty exciting for the most part, and the subject (if you haven't seen it before) will show you a new way of thinking about computation.
Very difficult, and the brilliant professor is often remote and uninvolved. Don't take unless you are prepared to commit.
Difficult course. The workload is not immense but the concepts are extremely challenging and following lectures is very difficult. You'll have to take good notes and review them a lot and really spend a lot of time thinking through all the problems, so don't take this course lightly.
Difficult, and a lot of work even though there's only 4 psets. It might be easier than CS121 and CS124, but it's still a significant amount of work. I enjoyed it, and I think you'll like it if you liked anything about CS121. It's much better at building intuition for CS theory.
Be prepared if you wanna take this class. The psets can take a lot of timeBut you can really learn a lot if you finish this class
This is a great course!  Moderately difficult and well-taught.
You learn so much about some pretty advanced topics in complexity theory. It's such an honor that Valiant is teaching it although his style of teaching might make lectures hard to follow if you don't already have a great intuition for some of the CS and mathematical concepts involved. It's a very difficult class but if you collaborate with a group of friends and go to office hours you can get through it.
Valiant is a great lecturer! Attend to lecture material and your understanding will be clear.
If you are interested in complexity theory, I highly recommend this course. It assumes some background with the material and delves deep pretty much immediately. The problem sets are very challenging and take many hours to do right. They are well chosen problems that taught me a ton though. The lectures are not super engaging. This was not a problem for me because I enjoyed the material itself. If you need an energetic speaker to keep you interested though, it might not be a great fit. If you like complexity theory, are comfortable with proofs, and have the time to work through tough problems, this class is excellent

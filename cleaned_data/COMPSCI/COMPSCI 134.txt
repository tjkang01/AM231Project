The class was a bit disorganized, but that might be ironed out in future iterations. Lectures occasionally offered interesting points, but in general it seemed like attending them wasn't necessary to do the problem sets or exams, and that the problem sets provided a more thorough introduction to the material. I do not have a particularly strong math background, but still found the course easier than I expected.
Interesting course material and good introductions to networks (graph theory, game theory, network theory.) Not very challenging for someone with a lot of computer science background but the economics stuff was really interesting.
Really cool range of econ, cs, stat.  Ben is a great dude and lecturer.  Relatively easy way to fulfill a CS requirement, but if like me you are not CS is a great way to gain CS exposure without dying in a CS class.
This was a new class and had its ups and downs. In sum, everything was very inconsistent. Some of the lectures were incredibly engaging, and some were downright dull. Some psets were incredibly easy, and some were very hard. Some of the TFs were great, and some were terrible. I personally think Ben is a great lecturer, but had trouble staying engaged with Yaron. I would also add that I think that for someone with a lot of CS experience, this class would be incredibly easy. I took this having only taken CS50 like 2 years ago, so I struggled with some of the coding. Overall a pretty good way to get a concentration requirement out of the way compared to the other options, but not a stellar showing by any means.
This is probably a reasonable class if you have have never seen graphs in a computer scientific context before and thought that Stat 110 was a difficult class, but the course never really picks up the pace from the first week, where Gollub spent 90 minutes proving the Friendship Paradox. After a few weeks, I stopped attending class and just did the problem sets, and don't think I missed much, considering how easy the final was anyway. A rigorous, challenging introduction to networks this course is not.
I learned a lot in the class, but the class is more applied math than econ. The psets can take as long as 20 hours a week when they are really bad. But you are allowed to drop 2 of them.
CS134 is a great class if you want to fulfill a CS breadth requirement! The workload was very manageable, and certain days you came out of the class really intrigued by the material.
It's really easy if you have at least some background in stats, econ, mathematical proofs, and coding. Otherwise there are portions of the class that might get a bit rough for you. Still, overall it's do-able.
I think the material was fascinating, and it's an extremely relevant course to modern applications. The problem is that it's a new course, and a very shining advertising campaign for the class was undercut by a frankly underwhelming course. The instructors will likely get better, the class will likely build up the bank of assignments and lecture materials so the instructors can spend less time on writing those fresh, and the consistency in difficulty will be ironed out.
This is an awesome class, particularly if you're interested in math and economics and want to learn about the intersection of a number of different fields (cs, economics, and statistics). Lecture was interesting and I learned a lot even though grading wasn't super tough. Highly recommend!!
This class does an interesting job of relating networks concepts to real-world examples. You will understand the underworkings of network phenomena from the spread of disease to search engines to dating websites.
The first few weeks is kind of a joke, but then the material gets kind of interesting. I wish we had gone into more depth about some of the concepts that we learned.
This course was both interesting and very accessible. Both the material covered in lecture and the future applications of the information are very interesting. Coding component was not too intimidating. Overall, a great course.
CS 134 is an interesting class that can't decide what audience to which it wants to appeal. It does go into concepts that are definitely not simple (i.e. Markov chains, branching processes) that may interest a math / CS student, but the class often examines these ideas at a very simple level to account for the portion of the class that may be less mathematically-inclined. At its present level, I'd say this can be taken as an easy class for a more quantitative student, expecting not to learn much. It's hard for me to view the class from the other perspective, so I won't attempt to comment there.
This was the first time the course was offered, so naturally there were some kinks. Otherwise it was pretty solid. The main downsides were that there was a stark difference in teaching between Golub and Singer, and sometimes the section component was pretty much mandatory because the lectures didn't cover all the material, or the instructors got upset that kids weren't showing up to lecture and section and decided to just let the sections teach some of the integral material for the problem sets without posting section notes. Overall, I see a very bright future of this course, as it exposed me to some of the very interesting applications of the combination between computer science and economics. Definitely worth taking.
This class was a great first iteration by Professor Golub and Singer.  Course material was fascinating at times and I really think a lot of college students would find the lecture material on stuff like networks and social phenomena very engaging.  Definitely a few areas for improvement, but a solid class overall and I'm sure it'll only get better in the future.
The topics covered were very interesting and eye-opening. As a non-CS concentrator, the coding on the psets (which was only about 1/5 of each pset) was a little difficult as quite some time has passed since CS50... But the problem sets were otherwise super interesting. The difficulty of the exams was hard to predict (first one really easy, second one pretty hard). But overall, really great course!!!
Definitely a class you should look at if you're interested in Networks, and want a really mathy explanation/exploration of the topic. Do check out the sociology version of this class, which has less of the math and more discussions about other tangential subjects.
Very basic network theory - interesting if you haven't been exposed, but if you have experience in graph theory and game theory, it will get be redundant.
Ben and Yaron are extremely dedicated to this course, and it's interesting material as well. The workload fluctuates by the week though, so beware of that.
Very fun and useful class if you're interested in networks. The homework is pretty easy if you've taken CS20 or a proof-based math class before. The guest lectures are interesting, and the lectures are very hands-on. During the game theory section, you get a chance to play games in class...for real money!
The second iteration of this class will have worked out the kinks on a class dealing with a fascinating subject matter.
This class is very easy relative to the harder technical CS classes that are offered. The content is interesting, but doesn't teach a new paradigm the way that a lot of the CS classes do. I don't know what it's like to take it as an economics concentrator, but in terms of CS, if you're particularly interested in graph theory and networks, then take it. If you're looking for an easy CS class, then take it. If you're looking for anything else, don't.
This is a great class! The textbook is fantastic, and the professors are really really knowledge and enthusiastic about the subject and about making the course enjoyable and useful for the students. Definitely take it! I'd recommend going to class, since I found the lectures actually did a good job of teaching the material and that the lecture notes were helpful but (intentionally) not always complete.
Definitely worth taking!
It's an awesome class and very accessible to most students!
This course's workload is very reasonable (<5 hours a week), the exams were easy, and the material was interesting. Lectures were a little slow/dry, and I wish the course covered far more material. Maybe requiring CS 124 as a prereq would let the course move at a faster pace.
This course is very easy, but the material is pretty interesting.  If the professors give more interesting assignments and faster-paced lectures next year, it will probably be quite good.
It was really interesting.
Interesting topics, mainly a math class.
This course definitely has some very interesting material (which you could probably learn on your own if you want), but it has this way of sometimes getting very interesting (game theory) and sometimes very very boring (math, summation stuff, etc).  Psets also have quite a range as far as difficult and number of hours spent is concerned.  But this is a new course, so i'm sure they will improve these things next time the class is offered.Overall, I'd say it's one of the easier CS courses at Harvard (nice as a second/third CS course, for those who don't like to take too many in one semester).  Programming, though kind of fun, is minimal.  And it's mostly the math that is annoying on psets.
This is a hard and work-intensive class if you don't have a particularly strong math background, even though compared to a lot of other math and CS classes at Harvard it might be fairly easy. I took 21a and 21b (and found both of them very difficult), and have not taken stat110. Throughout the course I was very frustrated because a lot of my peers constantly talked about what an easy class it was, and while I was able to do very well on all of the problem sets and on the midterm I still found it necessary to devote a huge amount of time to this class and was often stressed out about figuring out all the problem set questions. However, the professors and TFs were extremely good about holding regular office hours and making the exams and problem sets manageable and I would say that this was more of a problem with my classmates and less of a problem with the course itself. For someone who is not particularly confident in my math abilities, I would actually say that this course helped strengthen my confidence because I was able to do well in it by putting in a lot of effort. This class is also a pretty interesting subject matter, and I think the professors did a good job of covering it.
Great introductory class to networks. Strong background in probability is required. The material is very interesting and the course covers a wide range of applications to networks. Loved the class and would highly recommend it. The concepts are not very difficult to understand yet they are very interesting.
New Class. Professors were very enthusiastic. Insufficient materials to prepare for exams.
This class is an interesting way to learn some basic concepts of graph theory, networks, and network dynamics, with some relevant concepts from programming and economics tied in. Depending on how it's taught in future years, there could be more of a focus on coding, as in the first year, it seemed more like a math class with some coding on the side. The concepts are certainly very interesting and important, though to really understand them in-depth you would probably have to spend more time reading through the recommended textbooks/other resources.
Only take this class if you feel like you excel at math and computer science.  If you did okay/scraped by in STAT 110 or CS 50, then this class IS NOT for you.  This year, the class was really disorganized.  There were always mistakes and typos on the psets, and office hour changes were not always communicated well to the students.  I found this class very frustrating, and would not recommend it to any of my friends.  For those who take the class next year, I hope the class improves and becomes more organized.
Lecture and section were not super essential to watch/attend. You could easily get by most weeks with just looking at lecture slides and section notes. However, even if you attended lecture, the notes were pretty vital to helping yourself understand material outside of class, so it was great that they provided them. Exams overestimated the student's understanding of the material, and were quite difficult, but curved heavily. Problem sets should be started pretty early, they were often proof heavy and sometimes the code took a long time to run
This class was advertised as having a significantly lower workload than it actually did. I think I would have enjoyed the course more had the expectation for time and difficulty been set more realistically (for example, the second or third pset was supposed to be the hardest math we would see - it was not). That said, it's an interesting class with a wide variety of applications. If you're interested in graph theory and its applications it is definitely a class worth taking  just don't think it will be a light workload. The TFs this year were incredibly helpful and patient at office hours, and the tests were generally reasonable.
The course has good content overall, but the problem is that the difficulty spikes pretty wildly and the topics don't seem entirely cohesive. This is a product of disparate lecture notes with too much notation -- if you take this course, read Kleinberg as it explains topics much better. Overall interesting, but definitely something that you could learn on your own and perhaps learn it even better that way.
It's a pretty doable way to fulfilling the CS breadth requirement and one of the few offered in the spring that has decent Q-scores and doesn't require too many prereqs (as many other CS spring courses do...). I took this with CS124 and 2 gen-eds and found it very reasonable. The material started to connect between my two CS courses and that was cool. Check your assignments with others and it's pretty easy to do very well on the psets. Midterm/final have very high averages -- I suck at exams so I didn't do too well, but it's supposed to be a nicely graded course.
If you are competent math/CS student I definitely recommend this course- the content is very interesting and provides many real world applications of the theories covered. I wouldn't recommend this if you think you are getting an Econ class.
Take this course!! The material is so so interesting! I came in with a very vague idea of what would be taught and was amazed every week by new concepts introduced. I would say this too: I took this course thinking it would be quite chill in terms of workload but was very surprised by how time consuming it ended up being. In particular because of the programming components of psets. Don't think this is an easy CS course; it might be compared to other crazier courses but still will require a significant amount of time.
take this class! its awesome and a nice way to apply mathematical models to real world behavior!
Prepare hard for your first midterm. It won't be hard but if you don't do as well as everybody, it will affect you grades a lot.
Class covers a broad range of topics in network theory and the problem sets allow you to apply the methods practically which is the best aspect of the course. Quite a lot of proofs and the lecture material doesn't always prepare you for problem sets but overall a good challenging course.
this course was far more difficult than previous Q scores suggested. Not a trivial CS course. Will challenge you if you are a CS normie like me.
Very easy class if you are a math concentrator
The course material is interesting and very applicable. This year, however, the class was largely disorganized.
I really enjoyed networks. It's a nice mix of sociology/networks concepts and computer science material. Teaching staff was very helpful, and Yaron is a great lecturer!
Much more work than expected but overall an easy CS class
Hard class, but also very rewarding. Be ready to put in the effort and you'll reap the benefits.
This is a decent course. The psets admittedly can be a little painful. As someone with a strong math/cs/stats background, I just took this to round out my CS breadth requirement. Regardless it was a decent class. Lecture is pretty slow tho; however lecture notes were decently good
Good course, pretty easy on the math side if you're somewhat experienced in that area. DON'T use a language besides python; your psets will take about five times as long as they otherwise should. Python is super easy to pick up, though, and beyond that there are really no deep programming prereqs for the course. Have a little bit of experience, be able to competently write nested loops and subroutines, be able to think iteratively about somewhat-abstract-but-still-assuringly-concrete data structures. You should be fine with just that; CS 50 would be wicked overkill in terms of preparation. I got through okay with some (by which I mean I still am kinda iffy about pointers) self-taught Perl and C (I picked up Python along the way). Also, course staff is super nice.
I learned a lot through the psets and notes. It's really chill if you even slightly break up the workload across several days.
Overall, I took this course because I heard it was super easy and sort of interesting.They actually ended up making it harder this year apparently, so it was moderately challenging and really interesting, which I think is the right mix. It started off slow, but I guess since the class was so large they made it harder to reach a more reasonable size. I think by midway it got quite good. Exams were pretty easy.
You learn a bit, but there's a lot of work that doesn't necessarily teach you much about the concepts discussed in class.
It's a good class and the material is interesting. There are some problems with psets (like being updated days after they were released) but my guess is this is because its only this class' second year. Think it is definitely a good class for people who want to use CS for more applied social issues-- very different than all the other CS courses I've taken at Harvard.
This course is actually pretty good. You just have to engage with the material.
This is a pretty good class; you learn a lot of different things about networks. The only warning I'll give however was that almost every pset needed a fair bit of coding (especially pset 2), so I'd recommend you take at least CS50 before taking this class.
PREREQS: 1) The course becomes substantially more math-heavy after the first few weeks, so make sure you're confident in at least 21a, 21b. A background in proofs would also be handy. 80% of the pset questions don't involve coding, so be prepared for a lot of math. 2) I would also advise some Statistics knowledge (I found Stat 110 content really helpful here). 3) Provided you're willing to pull an all nighter or two on the first couple of psets teaching yourself Python, I don't think a coding background beyond CS50 is necessary. 4) Finally, I had no economics background at all, and felt fine on everything.The course draws from all four of those disciplines above, though, which I think is one of its strengths. I really liked the content, found lectures to be fine, course notes to be excellent, and psets to be exhausting (they DEFINITELY require collaboration at office hours, so get yourself a pset squad early if at all possible). Overall, would recommend! I'm a Stats major, and feel like I learned a lot, and that the course was a good excuse to learn Python and some really cool social network analysis ideas. Know that this will be a decently time-consuming course, and require more and more mathematical skill as the semester goes on.
This class is kind of a weird mishmosh of various topics in networks, but is at least taught clearly.  You need non-trivial programming background (the silly 'can you sum an array in python' question does not cover your background).  The exams were very easy.  The psets were relatively interesting but had a massive variance in difficulty.
This course was effectively a tour of different algorithms and techniques, using networks as an excuse to teach some interesting material.  While the problem sets were not particularly challenging, they were very inconsistent, with a few taking only 3 hours and some taking over 10 hours.
I heard it was easy and interesting. It was definitely interesting. Moderate workload with some pretty intense coding challenges on psets. It changed a lot since last year though, so it might change again.
This class is pretty good, but still seems like its being fine-tuned. Yarons lectures are presented well and we ended up covering a broad and interesting subset of material about modeling networks, network games, and algorithms describing network interaction, and approximation algorithms for asking NP-hard questions about networks. Still, huge amounts of variability in pset difficulty. Some weeks would be a breeze and other weeks extremely difficult, which made it hard to figure out how to fit the weekly pset into our schedules. Grading was fair, and there's an emphasis on reasonable answers over the answer in a lot of cases. Overall a good second CS course and I think they'll keep improving it.
Pretty good class with a relatively light workload for a CS class. Psets were usually 75% math computation or basic proofs. Most psets had one programming question at the end that was more tedious than anything else. Grading was easy. The class got harder throughout the semester but started off very easy. The class covered basic probability, graphs, networks, game theory, etc.
Going into this class, I had relatively high expectations, since it seemed like it would be a good way to blend economics, CS, and statistics. As a friend put it, "this course seemed perfect in theory".However, these expectations were far from met. The course struggled with what audience they wanted to appeal to: the students with more CS experience or less, the students with more math/stat background or less, etc. For instance, while the first problem set was quite easy, the second problem set involved implementing an algorithm that would have been almost impossible for someone with only CS50 as their coding background. Despite only listing CS50 as a prerequisite for coding, the course included a number of problem sets where a lack of prior coding experience would hamstring students. Similarly, in lectures, the professor would often say something along the lines of "we won't be going over this proof because it's too complicated" and then proceed to spend an entire lecture on some contrived proof that yielded almost no useful intuition.If this course is to be offered in the future, the instructor should really think about which audience he wants to appeal to from the start of the course and stick with it.
This was a great class! I learned a ton about different models in 134 and find networks a fascinating subject. I would recommend you have a stronger CS background. (Just cs50 is definitely not sufficient).
This was very easy for a CS course. So about moderate difficulty, not a ton of work, but some psets had some involved coding parts which took time. The two homework drops were essential for me, so I hope they keep that for future years. Overall, I guess I'm glad I took it. It's one of those courses where you wonder at the end what you actually learned and whether or not it was particularly useful.
This class is very time consuming and will require you to spend hours to learn things on your own that could be covered in class.
All of the course materials including psets and lecture notes were written by the student TFs, and were riddled with errors. Also, lecture is taught at an excruciatingly slow pace, possibly due to the high amount of students in the class without a quantitative background. The best way to describe this course is that it covers a lot of topics at a very surface level. If you're a strong student and are looking for rigor or depth, don't bother. Otherwise it's a nice filler course.As a side note, the TFs were generally very friendly and helpful. I only take issue with their hasty/sloppy preparation of materials.
This is a fairly low stress comp-sci elective which will introduce a few novel concepts while neither requiring an immense amount of work or being immensely fascinating.
This is a fairly painless way to knock off a CS credit. The math and programming can be fun at times, but the material may not be super relevant to your future work unless you're going into a network data job.
Professor clearly tried to make class substantially harder this year after its reputation as an "easy" class last year. Students who don't study STEM--be warned, this class requires a solid math and CS background, and I saw non-STEM peers struggling to learn python while trying to implement code on the psets. Psets often had mistakes on them and were disorganized. Psets also seemed to be untested with the occasional ridiculously hard problem that might take 5-6 hours to complete, baffling even the TFs.
This course was pretty much all hype. They pubbed it as a very interesting class that anyone (within reason) could take. Very wrong. I came in with a strong CS and math background and still felt as though I could have benefitted from more. I can't imagine how Ec or humanities concentrators made it through this course. It's definitely doable, but you're going to waste a lot of time on problem sets if you don't understand key concepts to begin with. Problem sets and exams will make you feel as though you've learned nothing. The topics are interesting but the class can be rather demoralizing at times.
The course was beyond the pre-requisites that were suggested and made it really stressful throughout the semester trying to catch up.
Hey, it fulfills the breadth requirement for CS. Yaron's also the coolest guy ever. I highly recommend getting classroom to table with him.
Not a difficult class conceptually, but psets may be tedious at times. Materials are sometimes prone to error or confusing
As a CS concentrator, 134 was the worst CS class I have ever taken at Harvard -- I believe it is a good predictor of how badly structured a course will be from how many TFs are hired after the course starts and this was wildly apparent here. Previous year's Q scores were completely different from the course this year; they made it more time consuming and the lecture material was rarely enough to get through the psets though I was personally fine I took it alongside two notoriously hard CS classes and this was unnecessary and did not contribute as much to my knowledge as I would've liked because the psets were so annoyingly difficult and not well written that my learning was not reinforced.
CS134 is a cool, "lighter" CS-class. It is however still in the developmental phase and as such is still not fully structured. Some problem sets require a lot of time.
This is a solid CS class. Not the best I've ever taken - Yaron is a bit of a boring / spacy lecturer, but the course materials are really great and the problem sets are mostly managable (other than one which didn't really connect well with the lecture material). I think you can get by in this class without stat 110 prereq. Also it really really helps to have friends in the class because you can't really get any attention in office hours. The stuff you learn is interesting, relevant (if a bit academic), and gave me a nice enough taste of machine learning to make me interested in taking 181 next spring.
Another big, "filler", cs class that lots of people take. Content is kind of similar to other machine learning classes towards the end. I'd say it's a nice survey of interesting cs topics in graph theory.
This course does takes up a significant amount of the time and anticipate to spend some time in the psets. Furthermore this year section times were used not to review materials but to teach more material. Some of the concepts were critical in knowing the material.
The prereqs are actually pretty important to the course. The material is pretty awesome and surprisingly applicable. Also there's surprisingly a fair amount of math :)
The lecture notes are very useful and go over the material very well. The material is also quite interesting in terms of learning more about the properties and models of social networks
Good class. Starts off easy, but soon ramps up.
This is a great course! Yaron is a great lecturer and you learn a lot of cool, applicable things. I struggled a bit because there were a lot of stat concepts, and I hadn't ever taken a stat class. The coding assignments were cool because you got to run your code on real-world data-sets; however, I had previously taken CS 124, and there were definitely times in which I would have been lost had I not taken CS 124, but it never got to impossible levels. Coding assignments are very doable. Tread carefully if you're not too comfortable with writing Python code.
While this class definitely is harder than what I have heard it was like in past years, it is still a great course that is on a very interesting topic. If you are completing a secondary, I would recommend taking this class as it is extremely manageable and a very relevant part of computer of science. Do not be deterred by other comments saying this class is very hard, compared to other CS classes this is extremely reasonable.
Interesting material, very good lecture notes, not too exciting lectures, amazing TFs, good for those less comfortable with CS or those taking harder CS classes in need of an easier CS second class. Psets were fun but could be tedious.
This course is very easy if you're comfortable with coding and introductory proofs. While you don't have to be a math prodigy to find the course easy, it certainly helps if you're not scared of notation. For reference, I took 21a/b, Stat 110, CS124 and other CS/stat courses and found this to be pretty easy. Taking this with CS181 is a good pairing that many students.Biggest issue was that the course got pretty hard with the last few psets in a way that was not reflected in the initial psets, but with pset drops, doing poorly was forgivable.Overall I recommend this course as something to add that's pretty easy workload-wise, but a course with material that's pretty niche and hard to apply to easily apply to other problems.
The course was definitely interesting to some degree, but it was a little scattered and we touched on a lot of different topics in a cursory manner. The biggest difficulty was with the problem sets, which would vary in difficulty tremendously. Some were anthills, some felt like K2. Especially without a formal CS background, this class is difficult. The diagnostic quiz made it seem like the coding would be elementary, but every once in a while they throw a very difficult algorithm implementation problem at you and you are left questioning why you ever took this course. Definitely not an easy 4th class.
This course is quite chill if you have a decent CS background. Taking it as an elective, I wish the course had gone more in-depth on some of the topics covered. At times, it felt a bit pointless or scattered, and I'm not sure how much I actually learned in this course. If you are looking for a more rigorous introduction to networks, you're going to have to take a bunch of different classes that go in depth on the various topics covered (AM 107, CS 143, CS 182, CS 136). Teaching staff cares, Yaron's lectures are quite boring but you can watch them online.
Easy as CS classes go, but not worth the time. Psets were not welled planned and some TFs just didn't know what they are doing. Took time because it was tedious not necessarily because it was hard.
I think this class touches upon a very fascinating set of network concepts and I'm glad I took it. That being said, there are a few places the course needs work particularly in organization. If there was more clarity surrounding the problem sets as well as standardization of difficulty (i.e. everything is similar difficulty rather than a few easy assignments and a few killer ones) that would help improve the course experience.
Overall, a great survey to various facets of networks and computing on them - the course material has definitely become more streamlined and cohesive since the first iteration of the course. However, the assignments vary widely in terms of difficulty and requisite background knowledge (knowledge of probability is required and stochastic processes is very useful, but the course also touches on game theory and machine learning), and therefore the grading / point schemes seem somewhat arbitrary and poorly defined. Would recommend if your background in CS / stat isn't quite as strong and you want exposure to these topics, otherwise would suggest simply taking a grad level version or another course (CS222 this year had very similar topics).
Very interesting and applicable material - plus Yaron is a bro
BEWARE this class.  The material is very interesting, but it is taught so poorly that it is often quite painful.
This course is great introduction to a lot of topics related to networks. There are a lot of really interesting topics presented. It would be really helpful to take both Stat110 and Cs124 beforehand. Of the 2, Stat110 is probably more important and more tested on (without being taught). That being said, it is possible to do well in the course without either of those 2.
Still a relatively new course, and it showed.  Extremely interesting and relevant material, but not always super organized.  Applications of material are currently lacking, but that could change in future iterations.  Students had widely varying backgrounds.  I think CS 50, 20, Math 21a/b, and Stat 104 (or equivalents) are absolutely necessary prerequisites.  I think CS 124, Stat 110, and CS 51 are extremely useful, and students who do not have this preparation are at a disadvantage.  Some problem sets are extremely challenging and require (for most people) going to frequent TF office hours.  Midterm was surprisingly hard (much more challenging than the practice midterm).  Final seemed fair, but definitely not a walk in the park.
While I'm sure it will improve in future years, the course in 2017 wasn't particularly well put together. It was a messy combination of seemingly unrelated topics, both in terms of the material covered in lecture and the different material covered in problem sets. It started out being pretty easy, given a medium math and CS background, but picked up in mathematical rigor after midsemester feedback, so be a bit wary of difficulty scores for this year.
Again, this class will challenge you. Don't trust the prerequisites.
Very interesting material but the assignments are a little daunting.
One of the most interesting CS courses I've taken at Harvard
The class materials is amazingly interesting and relevant for anyone! Though if you are not a CS concentrator or not comfortable with proofs, you might be at a bit of a disadvantage.
Great course. Psets may take a bit longer than expected, but start early and there shouldn't be any difficulty.
This class is moderately tough, but the material makes the class fun. Watch out though, sometimes the psets are incorrect when they are first pushed. Hopefully this will be fixed for next year.
Make sure your graph theory and math knowledge is up to scratch.
This class covers interesting material but is not too difficult. I felt like I learned a lot even though I never felt too stressed. Previous Python experience definitely helps (I didn't have any and had to learn on the fly).
the coding problems were a bit unnecessarily long, yaron also doesn't do an amazing job at avoiding small mistakes and using consistent and understandable notation which could be annoying sometimes
The class starts really easy but quickly ramps up so be wary. The pests take longer than expected, especially the coding problem because they give us such large data sets that it takes for ever to run on a normal laptop.
don't be fooled by the syllabus and first day of class--this course will introduce a lot of intricate techniques from statistics and CS! Prof Singer puts it aptly: "the network data of today are a great excuse for CS134's curriculum, but they're just one application of it". with that said, as long as you've taken Stat110 and CS124 (or will take them concurrently with CS134), you'll understand the material and will enjoy being taught by the friendly and funny Prof Singer.
134 is a great class to get introduced to a lot of topics! It's not a trivial class at all but extremely interesting and a good way to cover a lot of different areas in CS. The course material is very thorough and lectures are not extremely stressful.
I enjoyed this class and would definitely recommend it to someone interested in the subject. Much more a math/problem solving course than a pure coding class. The code is only 25% of each problem set and there are no coding assessments. So for that reason I enjoyed it. That being said, it's a very back-heavy class: the problem sets at the beginning of the semester took <3-4 hours each, but the last four or so problem sets definitely took >9-10 hours each.
This course does a good job of covering basics of networks, and graph models. The psets involve some programming, so some experience with that would be helpful. Otherwise, the math requirements aren't extreme. If you have some experience with proofs and manipulating formulas you should be fine.
Pset 2 is tough as hell, but after that this class is relatively chill. Lecture notes are quite good, and the TFs are very helpful! I'd definitely recommend this course!

Get ready to do lots of reading, but it will really show you a lot about the world of academics.  I think people who are deciding whether or not to do PHDs would be wise to take this class.
Appreciate that it's very unstructured, recognize it's of limited use to someone not pursuing or intending to pursue a PhD in CS, recognize that how much you get out of the course is entirely up to you, and presumably won't influence your grade much.
Generally useful to computer science students; mostly for people interested in graduate school though since it is very theoretically oriented.
This is a great course for both theory students and other cs students; it brings both philosophies together in a single course. Not only does this course prepare students for future graduate work, but it also demonstrates the value of intradisciplinary research in computer science.
The topics were interesting, the problem sets were sort of annoying (about 50% busy work), and I didn't think the professor was all that engaged in teaching it. BUT, these topics are all important to know, so it's valuable to cover them in at least SOME context.
Some of the papers are OK, but the professor is not going to add to the understanding of the course.
You should take this class if you enjoy learning from Prof. Mitzenmacher and if you are willing to put in the work of reading the papers religiously. It is a fair bit of time commitment, and I wish that I had had more time to contribute to the class, so only take it if you really have the time to devote to it.
If you know a lot about theory, this course will deepen your understanding of the covered topics. If you don't have much background, you will learn a lot about the topics.
Come prepared to work hard. That's part of the point. When you do, you will learn so much from actively participating in this course.
If you are interested in research, you should definitely consider this class.  It will at very least get you reading more quickly.
the class is approximately: take these major topics in big data, and look at (read papers about) the theory AND systems side of things. i personally found the systems side of things rather boring and the reading to be quite a lot, but overall the material was pretty interesting i thought. also a neat experience to start on a research project.
The material discussed is great.
Don't be fooled by the initial papers - the readings will balloon to 50+ pages of dense material once you are trapped into the class.  It took me 2-3 hours to read and summarize a paper and 10-15 hours per homework.  So that's 8-12 hours of reading plus 5-7 hours of homework per week.  Then add on a final project in the last month or so which should be the equivalent of 2 homeworks.  So that's another 4-6 hours a week.  You will learn a lot about very specific topics in algorithms, but there is no unified general-purpose curriculum.Take this class if you are genuinely interested in the topics the will be covered or if you want to learn how a professor can ruin a class by overworking his students.  Otherwise stay far away.
The workload is substantial, mostly due to the four or five weekly papers and written responses.  However, the class is very much geared towards learning; lectures are better than those for CS 124 and all assignments are useful for learning how to parse the papers, as well as for learning the particular contents.
A good class where you get what you want out of it. I thought the topics were really interesting and good at introducing you to the various fields. The final project was a lot of work but also a good experience and helpful for thinking about the research process.
If you're a systems student trying to fulfill a requirement, expect to be a second-class citizen and have it consume a lot of your time. The readings will get down to about 1-2 hours per paper (there are four per week), but homeworks will take at least 20 hours to complete on the low end (and up to 50-60). Most of this is busywork, and Mitzenmacher knows it. Unfortunately, there aren't a whole lot of other options, so grit your teeth. Above all, find a group to work with for the homework, even if it means randomly introducing yourself to classmates.
You read a ton of papers and get a lot of insight into how research in CS works. The actual material ranges all over the place.
A solid background in probability, mathematics, computer science, and information theory.
Pros : Will read some interesting papers and learn about some really good stuff (read Bloom Filters). Cons : Can be dry, heavily math based theory at times. Problem sets are not easy, and need to be worked on as soon as possible, especially the last two ones which were misleadingly 'short'. Feedback on assignments and support beyond class hours by the teaching staff is negligible.
The class is very difficult, but if you have the necessary backgrounds it's quite interesting. The course provides you with a lot of materials (research papers), and fully understanding each takes a LONG time, but if you're willing to put in a lot of work you can learn a lot from this class.
Very fun class. The amount work that is required as well -- you can choose to skim over the papers more quickly, or spend more time fully understanding them. You get to explore a variety of very interesting topics in computer science, which I thoroughly enjoyed. You get a good sense of what computer science research is like (at least in certain domains). The final project gives you a small taste of what CS academia/research would be like.
I'm an undergrad and I took 222 because I liked 124 a lot. This class is not at all like 124. There's much less focus on actually doing stuff; instead, you will read lots of papers which are pretty hit-or-miss. The problem sets are also not as interesting, and if enrollment is as high as it was this year (~50?) you certainly won't get any more attention from Mitzenmacher. The ideas he teaches are pretty cool, but it would probably be a better use of your time and courses just to read a book on information theory and compression. The most valuable thing I learned is that CS research isn't really my thing, which I guess is helpful but I wish I hadn't spent a whole quarter of my semester learning it.
If you're an undergrad and enjoyed CS124 and Professor Mitzenmacher, then go ahead and take this class. It requires a fair amount of work (mainly reading two conference papers before each class), but the material is cutting-edge and the class atmosphere is much more casual than CS124. If you consider innovative algorithms fun, this is the class for you.
I think the main value of the class is that it teaches you how to read and think about research papers in computer science. I found that there was too much reading to go through everything very carefully (and frankly, some of it is not sufficiently interesting to merit such effort anyway). You have to develop the ability to pick out the important ideas and "big picture." Some of the papers were pretty interesting, but many were unimpressive. Lecture was basically a freeform discussion of the papers. A couple people were very engaged and provided interesting dialogue, but as large classes tend to go, a good proportion of the comments were not very insightful. Unlike 124, this isn't a class for learning cool new algorithms. There is some of that, but it's mostly an introduction to research.
Great course, way more fun than CS 124. Should probably be subtitled "Things Mitzenmacher Enjoys." Most papers are good reads, I definitely learned how to read a paper in this class. Some papers are mathy and a bit dense though. Material was pretty interesting, but the final project does require some thought for a good topic.
This is a great first research class for anyone interested in CS. It covers a broad range of recent research problems, with a healthy mix of theory and systems, so it should be useful for just about anyone considering research. The work (assignments, reading / summaries) is straightforward and shouldn't take you much time, but do try to put time into the final project - it counts a lot towards your grade.
Don't be scared! It's a fun fun fun course. Also, if you don't have CS 124, don't despair. I didn't have it, and instead I had some reasonable background in math (55) and some basic experience in CS (I did a Google summer of code in computational group theory, I had some general idea of the algorithms taught in 124 and I had taken CS50). I was a sophomore at the time I took it, and I feel I did reasonably well in the course and had a great time nonetheless.Also, be prepared to spend a lot of time on reading the papers, and especially the final project. Everything related to it will take longer than you expect :), but in the end it's totally worth it, especially because you have the chance to develop the idea further and make it into an actual paper.
CS 222 is a very good introduction to interesting algorithms and data structure that often are applied to commonly faced problems. In this sense, the scope is wider and more grounded than 124's. It's difficult to get much out of paper discussion when the class is huge, like it was this year, but it's still a really great way to read papers. It's not a hugely time intensive class and the final project is a wonderful exercise.
gives good ideas from different fields, so extends horizons. not easy though
This is an amazing class.  The professor is great, and you will learn as much as you have time to learn; the class is very open-ended.  I would recommend this to undergraduates regardless of whether they want to go to grad school.  However, the workload is very high.
If you're interested in algorithms (and theory), systems, and networking, I recommend it.
Contrary to popular belief, there is really only one lecture about Bloom Filters.
Great class. Great teacher.
This course is more accurately titled "Stuff Mitzenmacher Likes," and he likes some pretty cool parts of CS. I highly suggest this course.
It is a good class. Have a look at the topics/readings before choosing the class though. If you are only interested in one or two of them, you are better off just reading the papers yourself.
Take this class if you are serious about your CS background. It is a hard one but it is much rewarding. Mitzenmacher is a great teacher and scientist. He has an eccentric style but you will learn a lot from him. Also, some topics are very hot right now: web/graph compression, network coding etc. Be ready for a reasonable commitment to prepare for the classes.

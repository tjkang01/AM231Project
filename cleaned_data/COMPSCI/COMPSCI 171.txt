Interesting material, interesting lectures.  Not always the most interesting problem sets.
You should only take this class if you are interested in programming.  If you are interested in design principles and learning about how to make good visualizations without being tied to programming, I would recommend auditing lectures.  You would learn a lot of interesting concepts, but would not have to complete tedious programming exercises.
Very fun and very practical.
The class is easy, but not too easy. Manageable assignments, and interesting material is learned.
the class taught us new and interesting ways to understand and display data. i learned some skills that were very useful in my other classes!
CS171 is a fun class, much more real-world focused than many other CS classes at Harvard. Students are likely to enjoy the pretty visualizations, and the design that goes into them, and will leave the class with a new awareness of how to construct images with a specific purpose in mind. Students may also be irritated by the sense of feeling isolated in the class, with few ways of getting support for the problem sets, beyond the Google Groups Discussion Board the TFs occasionally monitor.
lots of interesting visualizations, cool insights into human psychology, but the level of rigor is not high
Absolutely fantastic!
programming assignments take a long time, but are not challenging. they're tedious. interesting material, however!
unless they overhaul lectures and assignments, this course is just a waste of time and money.  however, hp and miriah have the potential to develop a better course, so i'd expect it to be better next year.
stupid, useless, but easy and counts for breadth
Great course. I would go in with a strong computer science background, and you will have a lot of fun. For a CS course, it's extremely manageable.
You will never look at visualizations the same again! This is a fantastic, exciting field that is a lot of fun to explore and incredibly useful, even if you don't think you will be actively involved in it as a career path.
If you need to fill a CS requirement, this is a good, well-structured, not-too-demanding course to take for that purpose.  However, the field that you learn about is extremely narrow, and unless you happen to be very interested in that particular field, you may not find the course material very interesting or engaging.
Gives you very useful toolkit for displaying various types of data in an aesthetically pleasing way.
Make sure to start homeworks early so you will have time to ask for help
This course explains the theories and best practices necessary for producing strong visualizations.
Do not take this class. The material might appear interesting, but is horribly taught. Most lectures are just masses of examples for critique or taken straight out of textbooks. There is no guidance with programming in Processing, absolutely no feedback, and the class is generally poorly organized. Assignments are tedious, and Processing is unlikely to be an environment one would use to implement real world applications.
tedious, not useful
fun, interesting course for students of all fields. AND GO TO CLASS!
The course provides a broad overview of major design principles for creating visualizations. It also teaches you a widely-used coding platform, Processing, to make visualizations. Realize that most of the design principles taught in the class are subjective; they are not rigorous facts or theorems, and this aspect of the course can turn people off. Although CS50 is the minimum requirement, I think that you will benefit most from the class if you've taken an object-oriented course like CS51. I think one of the course's major strengths is that the assignments give you a lot of freedom and you are encouraged to be creative.
very interesting material, workload manageable, useful material
While this class may be easy, you want to make sure to start on your work early.
Only the class if it promises to improve.
This course provides a solid background in visual cognition that anyone interested in visualization will enjoy.  Following that background, the assignments go through a very nice formulaic way to think about structuring visualizations that is very useful for actually producing good results on your own.
It is an excellent class and wonderful introduction to visualization applicable to students in any concentration!  However, one should be prepared for the large time commitment and programming assignments.
Assignments are straightforward. Final project can be as good as you make it. In-class demos are really cool. Skills gained in this class can be used in a variety of fields.
Need to know how to program in Processing.
Take it is you need an easy CS course.  Don't expect to really learn anything earth-shattering.
There is a large discrepancy between the amount of information we can process and the amount of information available in the world--visualization is one way to close this gap.
You don't learn a lot in class, but some of the assignments can be really fun.
Be ready to learn Processing on your own.
Easy CS class.
excellent opportunity to learn about visual cognition and how that created visual design principles
If your creativity goes unappreciated in many of the "hard" science classes you take, this class is perfect for you!
The course workload is extremely manageable, and the content is fairly interesting.
It's really fun and not that hard.
Take this course if you're mainly interested in the practical applications of visualization rather than computer science itself (e.g. people getting a CS secondary might find it useful). Otherwise, it's not a very computer-science-oriented class. It's a class that uses a bit of programming to accomplish its goals, not a class that teaches about programming.
The class teaches many useful concepts, but there is a lot of unecessary busywork that takes a long time to complete.
This is more of a design based course than a programming course. You'll receive little reward for clever programming
It's not necessarily hard, but time-consuming and silly.  I wouldn't recommend it unless there is a major overhaul of the course.
By far the easiest course in the CS department. If you actually know how to program, this class is a complete joke.
It's not a super work intensive course. You learn important skills, but how much you learn is based on how committed you are to the course.
You should be interested in visualization and the power of data (when properly displayed).  If you lack that spark that makes you want to mine data or create visualizations, this probably isn't the class for you
A relatively easy CS class, but you won't learn much.
Interesting topic but tf's were not helpfull
the assignments are tedious and you learn very few useful things (python, R, etc)
This course is a trap. It starts off nice and easy with little to no programming on the first few psets. Following psets trivialize programming requirements and the support system is just not there to help students that are not very experienced programmers.Though prof. Pfister is a nice lecturer, the TFs are very reluctant to help, and are dismissive of students that struggle. Office hours were not regularly set and often skipped by TFs. This has been my worst experience thus far.
You can't beat the relevance of this material.  I know some people did not like the more science-heavy guest lectures at the end of the course or the constant references to bio applications, but I am a biologist and the relevance of computational visualization to our field has never been greater.  If you are in a life sciences field and at all computationally talented, this course is for you, if only so that you can publish the best possible plots in your publications and presentations and be able to create interactive charts for other media.
Great and fun material. Problem sets are not annoying, but cool little projects that don't require that much CS frustration when solving them.
If you're really interested in how effective visualizations are produced and the psychology behind visual design, then take this course. However, it's not really a CS course (although there is programming involved), so if you're looking for a concentration or secondary class, take something more legitimate. The course is not very organized, and most lectures were tedious.
Even though the lectures don't focus on programming, the graded work more programming-heavy than I was prepared for coming out of CS50, so be ready to teach yourself a lot in terms of programming.
The homeworks are straightforward, and the lectures are interesting. Expect to spend a lot of time learning Processing for the final project, as neither the lectures or the homeworks adequately address it. On the whole, I left with skills I didn't have before, although many were self-taught.
Prof. Pfister is an excellent lecturer, and it's generally just a fun class. It's not the easiest class around, but it's relatively low-stress.
Material was fun at times, but overall I did not find the class to be all that intellectually interesting. You do get to make cool things, but along with that comes all the tedium of reading tutorials, scouring online forums, ect, since lectures focus on visualization at a high level, rather than teaching the tools we use such as python and processing.
The course has a lighter workload than many in the department. That said, it is not a good idea to take it without interest in visualization (which should really go without saying). The assignments can feel fragmented since they cover such a wide breadth, but they are generally an interesting and painless introduction to a variety of visualization principles and tools.The final project is really the best part of the course, provided that you have a good partner and pick a subject of interest. The results of most of the projects people created are engaging and (naturally) visually compelling.
Very easy if you have a CS background. Not particularly interesting though - you get an overview of different types of visualization software but no real skills. Take it if you need to fulfill a CS requirement without doing as much work as is typical for CS classes.
The class introduces you to too many different visualization programs and rather than letting you learn how to make more complex visualizations, you spend all your time trying to adapt to a new program.
Don't take it, barring a huge revamp. There's no support, you don't learn anything, the staff is frustrating and not helpful, the bulletin board assignments are busywork, and unless you already know Processing, you're in for a randomly difficult assignment in the middle of the year with no real warning. The course is interesting in theory, but it's just not worth one of your precious 32 if you're an undergrad.
Good and helpful class
This class tries to do a lot, which often times gets in the way of students doing the assignments properly.  That being said, it grades based on effort so if you put in the time you should still get good scores.
the lectures are very interesting, the problem sets are instructive, and you learn pretty neat things that you can apply to a variety of fields. you really get a keen sense of what it takes to make a great visualization.
Good course - just be careful to not let due dates sneak up on you, or your experience will not pleasant. Readings are interesting but not always pertinent, and profs/TFs are very approachable and enthusiastic.
This is a fairly easy CS class, although you do have to learn a couple of visualization languages. There are five homework assignments and a final project that done is in groups of 2; all of these are rather vague and open-ended. The lectures are interesting although sometimes irrelevant or dry. The support staff/community for this class isn't that great. Sections are optional and there are virtually no office hours (unless you personally request them).
Not the best class, but probably offers a very different feel from most CS classes. If you're looking to learn a bit of a lot of programming languages, this class will be good, but don't expect to gain any depth in those programming languages.If you're well versed in visualization already, this will be a good class as a jumping platform for exploring other tools.
Unless they SERIOUSLY revamp the class, do not take it.  Sure, it could be an easy A.  But it is objectively the worst class I've taken at Harvard.  I haven't learned anything from the class itself, Pfister just reiterates the readings and doesn't teach anything of his own, sections are worthless, TFs do NOTHING (literally nothing...if you have the chance to TF the class, do it, since it's a free $3000, unless you want to actually improve the class, in which case you'll have to work incredibly hard to salvage this trash).  Homeworks need to be reanalyzed - no problem set actually analyzed my ability to visualize things.  There were problem sets that I submitted that I KNEW had bad techniques in some places, and the TFs didn't even notice them.  I don't think they look at them at all.
Fun course with interesting material. Highly recommend all CS students to take the course. Would also be great for anyone going into Biology, Chemistry or other sciences.
Extremely interesting class! You get into the class what you put into it, so I would make sure you put an effort into it and don't let it slide. However, the material is really interesting and super-fun.
It's a fairly easy yet informative CS class.  A good way to be able to use programming skiills.
This class is very easy but you don't get much out of it and you will leave feeling like you should have learned much more. The Professor is nice but does not give enough lectures and does not seem invested in the course. Take it as a 5th class.
Be prepared to learn a new coding language on your own for each of the assignments. There is a weekly section that teaches you a little bit about the language, but you have to be ready to use the web to help you get through some of the assignments.  Overall the assignments aren't too difficult once you get used to the syntax of the language.  Just make sure to start a little early.  The lectures focus on design principles, which are useful to a degree.
Awesome CS elective - probs one of the easiest you can take.
The lectures and readings were relatively relaxed and largely focused on psychology/neuroscience topics. However, the problem sets were mostly unrelated to the lectures and required some degree of programming experience. In general, it was less cs-y than most cs classes, and if learning new ways to express data interests you, it's a good class to take.
This better suits CS concentrators or those who know programming. If you don't, it's a good course, but you will be spending more time struggling with coding (but awesome for learning, just make sure you have time).
It is not difficult per se, but like an CS course requires a lot of time.  Processing is a language that takes some getting used to, but is really cool and enables you to get a lot done.  Also, be prepared to effectively teach yourself the language.
You won't learn a lot of CS skills and it unfortunately uses out-dated technologies.
Great way to round out a CS secondary.
Easiest CS class and one of the most interesting. If you always marvel at how easy the NYTimes graphs and interactive charts are to read, take this class to learn why!
The lectures are great and teach you a lot more than just how to program something - they focus a lot on design and the human visual system.
Probably the most practical CS course after CS50. You learn to do a lot of cool visualization things.
The final project might jump up on you because it's due *before* reading period. Keep that in mind. You'll be happy to have one class down so early!
Homework demanding in terms of time. Final project interesting and open. A good course to anyone who will communicate their work in visual ways (=everyone).
Much of the material is interesting; the presentation, assignments, and course policies are less so. That said, the course is not very difficult; if you think you can handle the work on your own, you might get frustrated a couple times, but you should be fine.
you need to know how to code
Depends on what you want to do--if you want a serious computer science course that teaches the detailed programming of cool visualizations, well, the course won't push you to do that--you'll have to do it on your own. However, if you're looking to consider good aspects of design and how to incorporate them into your work (without doing a lot of homework), this would be a good course.
This course is one of its kinds, where the stress is more-so on the design front at a conscious level and programming at the sub conscious.
This is one of the easier CS courses, though still pretty time consuming. The material is generally interesting and Prof. Pfister is an engaging lecturer. The Processing language is far from the best tool for most of the assignments; hopefully this will be changed in future versions of the class. A caveat: if you don't have a programming background, you will probably struggle in this course and drive the TFs crazy with questions. Consider mastery of CS 50 material (or equivalent) a prerequisite for this course.
There is not much work, but focus on getting everything right in the psets.
This course is good if you are interested in the material, can be slightly boring otherwise.  The assignments will take longer than you think.
The class is fun and easy
painless, and you learn some useful thingsquite fun.
Visualization is an extremely interesting mather that has much to say in the future, people who are interested to lear an easy way to convey information of complex scientific and sociological concepts should strongly consider taking this class.Visualization will DEFINITELY take a big role on several key research areas of the XXI century, such as genetic research.
Painless way to learn about some really interesting and useful visual design material and to become more comfortable with computers
It's one of the easiest ways to fulfill a CS requirement, but I didn't particularly enjoy the class, mostly because I'm not interested in design. I enjoyed listening Prof. Pfister, and his level of enthusiasm for the subject matter was refreshing.
start Processing assignments early, they can be a bit tedious since Processing sucks
It's quite fun! More laid-back than most other CS courses, but also less supportive (than say, CS50) or organized (like CS61). Fun nevertheless, and branches into other fields of interests (e.g. art, music, biology).
It's nice to have taken CS50. Lectures aren't that important; office hours are great for pset help. Final project and the problem sets are all super interesting and fun!
Very time-consuming, but worth it if you're interested.
Take it, but take it pass fail.
I think it is useful to learn about visualizations.
must have programming background
This class needs to spend ALOT more time in class teaching javascript, d3, and jquery. The lab that sofia, billy, and azelea did is how every single class should be. Levin sucks. He's mean and unapproachable and condescending. You have to know a shit ton of javascript or jquery before starting because they sure aren't going to teach you but all coding psets require it. It doesn't seem like it at first, but then this becomes the case.
While I may have grumbled every week as I struggled with psets, I really would recommend this course. Looking back on it, it taught me the technical skills necessary to gather and visualize my own data. I will definitely use these skills in the future!
This was a top-5 favorite course at Harvard. Fascinating subject matter, well-taugh, fairly graded, highly applicable skills, and just fun problems to work on. Extremely educational as well, I learned a whole lot. Workload typical for a CS or engineering class, on the lighter end of the work spectrum. Excellent class. I would recommend it very highly for anyone with at least basic knowledge of CS and coding.
The class is very practical and not very hard, but assignments were often frustrating and tedious.
Unless they vastly change how they do the psets/projects, don't take it. It's interesting, but it's not worth it.
You'll probably have to figure out the things you need for assignments on your own. The skills are useful, but the class is just one that you probably will find "annoying." Lectures are basically no use for the assignments, except maybe the few on web development.
The course's lectures are very design-heavy, and you'll learn a lot about what makes a good visualization (and see how arguably terrible most visualizations are). Projects 2 and 3 will be frustrating if you aren't very familiar with javascript or able to pick up a confusing library like D3 quickly. If you aren't that strong coding-wise, make sure to get a project partner who is, so you can actually spend time working on your design and not worrying too much about being able to implement it. It should also be said that you will not gain most of the tools necessary to making some of the really elaborate visualizations you see, because the documentation for D3 is such that it's hard to do anything other than what already exists.
Great class, enjoyable lectures, fun problem sets.  Highly recommended.
Take it for the practical skills only if you like self-teaching urself.
You will be introduced to cool tools and software.  However, assignments and projects involve a lot of reading and knowledge of design rather than programming.  Grading between TF's also fluctuate a lot.
If you're interested in gaining a solid understanding of the cognitive science behind vision and memory, learning to communicate quantitative data effectively, reading thousands of words of instructions per pset augmented by thousands of words of instructions posted several other places, and learning more technologies and tools than could be taught in two standalone classes (HTML/CSS/JS/SVG/D3, Python, Google Fusion, and more), then you will love this class.
There were definitely times when I was very frustrated with the course, but I believe I still would have taken this course knowing what I do now. They changed the format of the course from previous years to include 3 projects, but luckily project 2 and 3 were closely linked. The transition from the first part of the course (using programs like Tableau etc to create visualizations) to the second (using HTML/CSS/JavaScript) was abrupt, but I think that staff was aware of this and they might try to make adjustments next year (?). The staff was definitely very receptive to feedback from the class, which made the end of the course more enjoyable. Lectures tended to be quite empty if they weren't required, and I did feel like you could do the problem sets without attending all of them. Overall good course, and I did learn a lot about making visualizations for the web.
it is more work than you think it will be, but by the end you will be proficient in the cutting edge technologies of web-based data visualization
great class. while there may have been some dry portions, overall I learned a ton about data visualization and refinement and took away a ton of skills from the class.
Not too intensive, but there's a lot of self-teaching and not much handholding at all. It's difficult to get assistance at times, since not all TFs are on the same level of coding knowledge. Subjective (visualization doesn't always have a right answer) but it's interesting to see the different view points.Psets can be a little time consuming, so start early. Projects are manageable
This is not your typical CS class. Workload is easy if you are good at CS, and extremely hard if you are not strong at CS and are just taking this as a casual secondary requirement (in this case, make SURE that you get a good partner for the projects or you are screwed). Classes are not relevant to HW/Projects, so be ready to do a lot of self-learning. Overall can be interesting though and the self-made projects were fun.
This class has become a lot more work than it was advertised as. At times I felt like there was too many things to learn to really become good enough at any one thing to execute a good visualization.
You learn a lot of useful things, not just for computer science, but for any future career. However, the lectures aren't very useful
It's a relatively easy course if you're a CS major who has prior CS experience, but it is still a time-consuming course. Don't expect to breeze through the homework just because you have CS experience, because most of the HW is not really CS and/or is some new language (D3). Projects are a bit more straightforward than in other CS classes since it's mostly just javascript.
Figure out why you want to take this course, and more importantly what you want to get out of the course. If you're looking for a course that is the easy alternative to CS50 (as opposed to CS51), DON'T take this course. This course is meant to teach how to represent data in a visually friendly and interactive way. Along the way, you'll learn different web technologies that will be useful in this main objective.  If you do want to learn how to represent data visually, or learn new web technologies, then do take this class.
Great course. Learn a lot. Helps to have a bit experience in JS and python, but really worth it either way.
This is a really cool class on the representation of data and how to come up with engaging visual and graphic designs. However, the PSets are terrible. They aren't hard, they're just very long and boring. You'll be programming in javascript and a javascript library called D3. D3 is the worst. There's no way to debug and it's terrible. If you like web programming, go for it.
Teaches useful web programming skills (you can get a job after this course) BUT don't be fooled by the past work load ratings - there is A LOT!! I spent hours upon hours on psets. Could help to have strong prior background in web programming.
Super fun!
An awesome overall design class! Pure CS concentrators beware, but as a neuro concentrator that likes doing CS on the side it's super fun.
It is probably more work than you expect, but a good class mostly.
The first part of this class is fantastic. You learn the foundations of visualization as a field and basic design conventions. For example you learn which visualizations (e.g. bar charts) are appropriate for what kind of data and the best ways to encode data in visualization. After this part, the learning component of the course diminishes. D3 and Javascript are "taught" though you mostly have to figure it out on your own. Then there are random guest lectures which do not teach anything in particular. While I did come away with useful skills from the beginning of the course, I would not recommend this course as a whole.
If you are interested in data visualization, take this class.  You will need to self-study quite a bit, but it is ultimately worth it.  Difficulty isn't too bad, but it is not a trivial course.
The course is very interesting overall.  Beware of weekly problem sets and interspersed project.  The amount of busy work can be heavy at times.
The lectures are interesting. The psets always take longer than you think. Grading isn't too tough but make sure to work on your projects early so they don't sneak up on you last minute.
Overall, an interesting and well-planned course, however many assignments in the beginning were while not technically difficult, tedious and ultimately unrelated to learning d3, my goal of the class. I feel like the actual skills and knowledge I gained from the course probably could have been compressed into half the time this course took, so if your goal is to just learn d3, learning it on your own might be better.
lots of busy work, not too difficult though
This class was not conceptually difficult but extremely tedious and actually pretty time-consuming. Easily one of the worst classes I've taken at Harvard. The teaching staff was extremely unhelpful - OH consisted of TFs telling me to "Google" it. Grading was arbitrary. Lectures were boring. Would recommend taking a different CS class.
This is an excellent class (especially with the switch to D3 and web visualizations). You get a really good overview of design principles in visualizations and come out of the class with a very critical view on data visualizations. Be prepared to do a fair amount of coding and to learn web programming. The assignments are not particularly difficult and you get a lot of help, but they make take up to 10 hours in a week. Also, I spent 20+ hours on both Project 2 and 3, so make sure you don't wait until the last minute!
Most of the lectures are unhelpful, the head TF was unavailable and very rude, the first half of the material covers things that you will never really use outside of this course (svg's, Many Eyes, Tableau), and on top of all that the instructors displayed a penchant for extremely painful busy-work rather than productive assignments. The section on D3 and the guest lectures at the end of the course were interesting and in that sense the course ended better than it started, but overall this is one of the worst classes I've ever taken.
This class is really great!  You will learn a huge amount of very important, and applicable skills.
Somewhat interesting class but quite frustrating at times. Some of the problem sets were long and repetitive without being very satisfying to complete. The material isn't conceptually difficult, but it can be a bit of a challenge to complete some of the later assignments/projects if you aren't a very creative person. There was also a bit of a disconnect between how homework assignments and projects were graded.
Lectures are haphazard and undirected from week to week.  What I learned could have been effectively distilled to a couple hour seminar.  The exposure to svg and d3 was nice, but most of the learning there took place on our own.
Be sure that you're interested in visualizations and be realistic about your level of preparation
Awesome class. It's definitely one of the most practical and applicable classes I've taken at Harvard. Just make sure you have a good amount of time to dedicate to the problem sets each week and the 3 projects.
i got useful skills as a result of the class, but the class itself did little to help me learn them.
This class is awesome! You can build projects like these: https://github.com/mbostock/d3/wiki/Gallery
Visualizations is an interesting topic, but the class is very frustrating. The lectures aren't highly technical and don't help much in completing the psets. Psets often took longer than I expected. At the end of the semester, you'll have done some cool projects though.
20% of the class is useful. The rest is a combination of somewhat helpful, somewhat not guest lectures; not-so-useful lectures from the professor; and useless sections. The teaching staff is great and some of the material is good, but overall I'd say you could learn the material in 2 weeks and save yourself a lot of pain.
This is a pretty good course, Pfister is a good professor and you will learn interesting materials.
Pretty easy. Learned almost nothing in the class. Lecture not really relevant to HWs or projects.
I personally loved this course from the standpoint of the work I was able to produce, but my reservations when it comes to recommending this course to others are rooted in how the course is run. A small percentage of the TFs for this course are potentially the worst I have ever seen or heard of in any class at Harvard - they have no care for their job, their students, or even any sense of self-respect to even do the bare minimum. Luckily, sections do not exist for this course, so the role of TF is essentially constrained to "homework grader" and "office hours". Hard to mess up, it sounds like, right? Well, there are a few TFs who cannot seem to figure out how to grade weekly problem sets in less than six weeks time, and they also seem to have trouble attending their office hours, and when they miss this obligation of theirs they cannot be reached via email and choose not to respond. Long story short, my only problem with CS171 (which is otherwise a FANTASTIC course) is that it seems absolutely NO RIGOR OR CARE went into the TF hiring process, which is SO CRITICAL to the success of a course in the long run.
If you have a strong background in Python, Processing, or D3 it will make the course load much less.
Do not focus too much on programming, or design. The course is really split half and half.
It is quite time consuming, but it is worth it.
The second half of the class (learning processing) is great and you will walk away with a good deal of experience in data visualization. Unfortunately, much of this experience comes from learning new programs and methods (Tableau, web scraping) from scratch with very little guidance. Overall though, worth it.
I had high hopes for this course and parts of it were very very rewarding. However, sometimes classtime felt unproductive.
Overall, this class covers useful material to anyone who will ever develop interesting visualizations. The workload is very manageable for those with some experience coding. Some of the assignments are interesting, and the technologies you learn (like Processing and web scraping with Python) are cool. However, the lectures discuss visualization at a conceptual level and are not really needed at all to complete assignments. Definitely one of the easier CS classes from a difficulty standpoint, but will still take some time for the assignments/final project. (Also, the sketching labs were excellent - not sure where else you have the opportunity to receive sketching instruction if not in a VES class).
Great for CS secondaries who want an easy and useful CS requirement but terrible for CS majors looking for intellectually stimulating material related to CS. This class was interesting but I feel like I learned more about visualization theory than computer science.
Lighter workload than other CS classes, really great combination of graphic design and coding, really interesting lectures! CS that's not pure CS, graded fairly. you do have to learn languages on your own (though sometimes labs give a start). I really enjoyed this class.
Fairly disorganized (especially the weekly assignments), but interesting material overall and mostly painless.
Do not take this course if you would like to learn how to code better. Your grade will be based off of how many times you use the buzz words they want you to use, and regardless of how much work you put into the code and functionality of your assignments, you will lose a full point (psets are out of 5 where 4 is an A) because your color choice isn't optimal.
The lectures aren't as interesting but the problem sets are fun and not too hard. The project is fun. It's not too time consuming though and overall it was fun.
Good, but be ready to spend a bit more time than you'd think on assignments and readings.
Instructor is great, but much of the material is repeated in several lectures. Be prepared to spend a lot of time debugging and learn how to use different tools. It's not hard, just much to do.
It's work, but it's fun and rewarding. You gain useful skills.
I would say that if you're a good programmer, most of the learning that I did in the class was in the lectures. I didn't find the homework assignments that helpful - but maybe they would be more helpful if the student was newer to programming. So my advice would be, if a student was a good programmer, to audit the class and just attend lecture.
Course material is interesting. Weekly problem sets can be long, because little structural support is provided. But good class; worth taking if you're on the fence.
Only take this course if they plan on revamping the curriculum.
Start the psets early. Ask for help. And if overwhelmed, post on Piazza. Find a great team for the final project. Do the reading assignment.
Hopefully this course will be improved upon next year in terms of organization and coordination. These problems made the class less enjoyable than it could have been. I really enjoyed the skills, both in terms of design and programming, that I learned from the class and they are very valuable.
The course was pretty disappointing overall, and while the material was really interesting, it was pretty difficult to apply the material outside of the class context. The labs were the worst part of this course, very unhelpful, and most of the homework was figured out on our own.
Hanspeter is great and the material is very important and well taught, but the assignments do not fit the course or have much to do with lecture. The later Processing assignments are relevant to some of the lectures that you encounter mid-course (high-dimensional data, etc.), but other than that I didn't think the assignments were very important to my experience.
I had high hopes for this class.  Learning to visualize data sounded (and is) awesome.  But I felt that describing it as a CS class is false advertising.  Professor Pfister lectures about design principles, which are great for the fist few weeks.  But then they ask you to apply them in a new language that they haven't taught.  If you want to further your CS skills this is not the class.
This class opens you to a new world of computer science that can help solve many problems in various fields such as medicine.
Be careful with this class. It's doable if you don't have a lot of programming experience, but tricky at first.
This course lets you practice programming, while learning how to make a good visualization at the same time. I learned a lot of art and a lot of computer science.
The class was great, and I feel like I learned a great deal, but I really struggled with the communiction aspect of the class. The staff was not very clear with students. I did learn how to utilize some really cool technology, but I feel like my guidance in doing so was somewhat limited.
Very easy, but poorly organized. Lectures weren't related to the psets at all. I didn't go to lectures, simply did the psets, and did quite well on them.
One of the more practical and engaging classes I have taken at Harvard, take it with Hans Pfister and you'll get to learn some very useful skills.
If you intend on ever dealing with data, you should take this class.  It teaches you how to properly present your data so that it will convey your perspective/findings to an audience, AND perhaps help you to find new things in old data!  But beware that this class requires you to switch between languages week-to-week without much help.  If you want to get everything you can out of this class re: visualization principles, you should have an aptitude for learning new languages on the fly.
This course will be easier if you have more programming (especially python) experience.
take it if you're interested in learning about different kinds of visualizations.  there are some cool visualization tricks, and you learn how to make nice visualizations with a variety of tools.it's not greatest class, but it definitely has its value if you're planning on a career in academia or anything that would require making figures/visualizations.
this is an art class and graded as such that uses cs as a tool. You will only  learn more CS if teach it to yourself going the extra mile on problem sets, which is usually not worth it. There is a ton of busy work.
Easy but with significant workload.
have time to complete all homewroks and attend special labs
If you want to learn how to generate insights from data using visualization, take this class.
This class is very manageable and easy to do well in if you put the time. However, if you are not very comfortable with javascript it can be very time consuming.
I am glad I took the course because visualization is so cool, and because you get to make an awesome final project. However the course was poorly run, and the psets were a nightmare. There were only three real psets, but they took about 40 hours each to complete, with poor support/office hour structure. The course staff acknowledged this though, and showed great improvement even over the course of the semester.
This class gave me a much bigger appreciation for Javascript and d3. It's a useful skill to be able to break down data and present the trends. But that's the thing - this is a skill-building class. The theoretical side of visualization is nonsense. Having to describe what "visual channels" we used, etc., only served to complicate a rather simple concept. It was trying to make the practice of making bar charts and flow charts into an academic field, when in reality all of the concepts are extremely basic. This is probably why so few people attended lecture unless they had to. They were there for the skill-building - to see examples, to perhaps toy with a visualization. We all know that visualization is a useful means of communicating data.There's not a lot more to say than that.All in all though, I enjoyed the psets and the final project. And once you get the hang of d3, it's pretty amazing what you can build.
You will put in a lot of time into this course, but it is worth it if you go to office hours. The TF's are the best part about the course--they are extremely helpful and will teach you the material. It is incredibly rewarding when you are done with a pset to see your own visualization working! It does take a lot of time, however, there are only psets due every other week and a final project. Don't do this course if you don't think you can put in the time for it, though it is incredibly rewarding.
https://docs.google.com/document/d/1xMQV_GZpkcEz5c3AYsEKmx1pW3u8e4wFcrFn29mKW1Q/edit?usp=sharing
Overall, CS171 was a good experience. Although lecture and homework weren't quite connected, I learned a lot about the theory behind web design and how to actually implement it. This class required you to learn and google things on your own, which is useful in the future. However, there were nights that were definitely extremely stressful and I wanted to break down. All in all, if you're up the mental stress and challenge, this isn't a bad course to take.
Yes, I will tell them not to take it
Great class, honestly. D3 is so useful, and also isn't hard at all if you know anything about Javascript! Highly recommended.
-
Have taken CS50, CS51, know Javascript, and/or have prior programming background.
The material in this class is extremely important to learn given that it enables you to build visually appealing web pages. However, the problem sets are very difficult and time consuming and while there are frequent office hours, the lecture is basically worthless. I ended up earning a C+ even though I am a CS concentrator. I would not recommend this class to anyone except someone who is already an advanced programmer and who is willing to dedicate many hours to this class each week.
Assignments are incredibly tedious, lectures have absolutely nothing to do with assignments, and I came away having learned virtually nothing from the course. However, might be a good (and relatively easy) way to satisfy a CS breadth requirement.
This class took a moderate amount of work, but the work was not all necessary. Lectures are useless since none of the material covered is relevant for assignments. The assignments took twice as long as they should because you have to teach yourself the syntax of javascript and d3. People who do not have prior programming experience should know what they're getting into. In this class you will be thrown in the deep end and will have to write non-trivial amounts of code.  If you are interested in visualization, this class may be worth it. At the end of the class I feel as though I gained some tangible skills and the assignments are solid. If you are not specifically interested in visualization, there are definitely better CS classes to take
Might be hard if you're only other cs experience is cs50. Homeworks are bi-weekly, but are very lengthy, so get started early, and you'll need to learn javascript on your own
The actual course is bad, but the problem sets and the project are pretty fun. Go to the first few lectures to see if it's worthwhile to you, but don't feel bad about skipping -- the material won't help you do better on the evaluations (i.e graded work), in my opinion.
This class will definitely teach you more about visualization, but be prepared to learn basically entirely on your own, with very little instruction. Section was imperative to doing the homework, but the rest of the class (e.g. lectures) weren't very helpful for the homework at all. I definitely wish that more coding was taught in lecture.
You do not learnd any coding in lecture, and psets are difficult to get through as a result. Go to section to learn d3 and set aside a good chunk of time for the psets.
Pretty easy class that just requires some time. You could learn this on your own, but who does?
The course teaches god material, that said it was very disorganized and the grading on psets was inconsistent.
The psets are insanely long. This is coming from someone who just came out from CS50; two weeks long, and you gotta start the first week or else you're gonna be breaking down the last few days. I listed 12 hours per week, but given that the first few were done with very little D3 experience, they probably took more like 16 per week (30+ over two weeks). Final project was comparatively chill; in the end, this course is like a gigantic CS pset, because it sucks while you're going through it, but you actually feel really good when you're done. ALSO - if things are like this year, the lectures are not really applicable to the psets. Psets are graded based on your ability to code in JS and D3, lectures are about design and your ability to design is constrained by your ability to code. If you can't do anything even when you have great design knowledge, it's frustrating. I would suggest for the CS171 team to stagger design lectures later on towards the semester, and focus more on teaching D3 early on for the sake of retaining student attendance in lectures.
take it as a 5th if you're a cs concentrator.
Alexander Lex put a lot of effort into this course and I really appreciated it. Students in this class were very quick to complain and I thought the teaching staff handled student concerns very well. The course was very helpful for thinking about how present data - something we do all the time. I would recommend this course.
The class is not useful, does not even teach d3. Problem sets are horrible, ambiguous, and grading is arbitrary. The instructor generates no enthusiasm for the subject matter and no one ever attends lecture.
I recommend this class not because I enjoyed it but because there are lamentably few options for painlessly fulfilling a CS secondary. as far as those options go, this is not a bad one
The projects are awesome but the teaching and structure need to be improved before I recommend the course.  The structure of the syllabus changes from week to week which makes the course unpredictable and can be frustrating when you have already invested time into work due to the expectation of a given deadline.  Also, be prepared to learn D3 and javascript on your own as the homework does not provide sufficient guidance.  These assignments become less about learning about visualizations and more about just completing the assignments.
Ridiculous homework assignments. Badly organized - the first assignment was due 1 day before the add/drop so there was no way to know whether or not you could even do the material. They have a TF that doesn't even live in the area and is only accessible by skype or email and flakes out on meetings and office hours and takes forever to reply to emails. Not very useful at all.
Psets are too long. Not enough guidance in programming in D3. Design studios were not helpful.
If you're a serious cs concentrator, this will be an extremely easy class. If you're coming straight out of cs50 it will be hard and there will be a steep learning curve, mostly because this class assumes that you know javascript pretty well and doesn't teach it to you at all. Unsurprisingly, lecture is useless (although sections are pretty good).The stuff you learn in this class is actually very useful and practical, but expect to learn most of it from Prof. Google. The class was supremely disorganized this year, and the teaching staff didn't know how to reconcile the large contingents of students for whom the class was really east with the large number of kids who found it very hard. Hopefully they'll do better next year, but I'm not so confident.Don't buy the books. They are useless.
If you're good a Javascript and need a CS course, then take this class. Otherwise, it may be a waste since you probably won't learn much if you already know javascript and it'll be frustrating it you don't.
This is good if you need to satisfy breadth. If you're a great programmer, it probably won't be too challenging. D3 is useful to learn. But you never really get tested on the lectures or anything, so don't bother going. The psets are great and the final project is lots of fun.
They claim that they assess you based on both the implementation and the theory in their assignments. The theory component seems awfully obvious, and their questions can be answered simply by ctrl+f-ing on the lecture slides. The implementation part is somewhat more intricate, but the skills necessary can be self-taught and does not require a semester of Harvard course. I didn't know d3(that's the visualization library we use in the assignments), I never went to lecture / section, but I was able to complete the assignments after reading a couple of online tutorials. Take the course if you're looking for a super easy class, although I must say the opportunity cost is high when there are so many great Harvard courses out there.
This course was run like a joke, but the workload was completely serious. The lecture material and the psets were completely unconnected. Considering the only prerequisite was CS50, the course was entirely false marketing.
DO NOT TAKE THIS CLASS! Literally the worst class I have ever taken in my life. Please spare yourself from pain and misery.
It's really interesting and useful, but not going to be fun. The resources are there, but they're not structured in a really useful way.  But I do think it's easier than a lot of cs classes.
For CS concentrators, its a pretty harmless way to fulfill a requirement and you may really enjoy visualization. For non-CS concentrators, its more work than CS50 with less handholding: the lectures are spent learning about design and good practice, not teaching you how to code D3. One is expected to be able to learn to do the psets mostly on their own.
I think that this class was an extremely positive one. Not only does it give you a lot of marketable skills, but it also rewards you the more effort that you put in. Taking the time to really understand D3 and spend a lot of time on it is a really valuable way to learn a very complex program.
This course can be incredibly frustrating. There is a huge disconnect between what is taught in lecture and what is tested on psets, so you just feel like you're learning most everything on your own. You can learn things on your own after your time at Harvard, so don't waste a class on this course.
Be prepared to learn a lot on your own. Psets are pretty cool, but can get frustrating
It's not as computationally rigorous as most CS courses, but at the same time the homework tends to take time. Lectures seem very general and skin-deep and usually don't relate to the homework, so sections are the main help for the homework.
Unless the staff starts to gauge homework length based on time it would take a student unfamiliar with the subject (which should be expected since no background knowledge is required) rather than how Long it would take a cs grad student to complete it, don't waste your time
Do not take this class if you have only taken CS50 or don't know javascript (at least finish the codeacademy course if you do take this class), you will be completely unprepared. CS51 is useful for structure and functional concepts. Unless they restructure the class, much of the learning happens by yourself or at office hours. Sections got better towards the end of the semester as in you start to learn about how to use d3 like you came into this class expecting. Lectures are useless and unrelated to psets, possibly interesting but with the 30+ hours a week spent on the pset (if you're less comfortable with programming) you just don't go to any non-mandatory lecture
Course needs a complete overhaul. Lectures teach useless information (like when to use a barchart vs piechart). Learning JavaScript would be great but the class assumes you already know it, and problem sets often have errors in them.
You will leave this course with a solid understanding of D3, which is an extremely valuable tool for web-based visualization. D3 is not easy to learn, so taking a course where you must learn it is likely the best way to do so. The theoretical dimension to this coursethough well-meaningultimately proved to be of little use. Lecture attendance toward the end of the semester reflects this.Also, though the course requirements do no specify web design experience, you will be well-served taking this course with experience with HTML, CSS, and (especially) Javascript. Students without that experience often found the course to be very difficult, especially compared to more experienced peers. D3 was enough of a slog to learn, and learning related technologies in the process will be a lot of work.
D3 is a cool language and It's a great class for learning how to use javascript generally, which is all I wanted out of it.  If you already understand HTML and Javascript you're probably looking at 10-15 hours of work per pset, if you don't know HTML then either commit to learning fast or spending an inordinate amount of time struggling with simple semantic problems.
Course was a great introduction to visualization. They didn't really teach us too in-depth how to use frameworks we worked with, but it seems like this may get fixed next year.
This course is amazing. However, working with D3 requires some programming maturity. Closures are a paradigm which is critical to Javascript that you may not have seen in other classes (as closures are not a feature in many programming languages). Furthermore, D3 maintains a data model that is similar to a database. If you have never studied databases or written some basic SQL it will likely not be intuitive to recognize data joins. Finally, D3 is an API (shocker!!) that means if you aren't ready to google for  answers for upwards of 5-10 hours a week you will quickly become frustrating. Don't be scared by the line numbers of code in each assignment D3 is carriage return heavy.
Take this class if you do know D3 and javascript. Without it, be prepared to spend a lot of time googling and self learning the material because lecture and section will not be sufficient to complete the problem sets. Also, take good use of office hours because a lot are available. Start all the problem sets early.
The assignments are much harder and time consuming than expected and do not match the material in lecture
I had a lot of fun with this course, and I think this is because I put in so much time. It's not that conceptually difficult, but don't take this course if you don't have a solid amount of time each week to work on the problem sets (which are super super fun) Also, don't just copy code off the internet / mike bostock... you will enjoy it a lot more if you actually understand what's going on.
This course was run quite poorly in 2015. Out of four assignments, the first two were deemed too difficult by the course staff (they were longer than they should have been), and as such, the remaining two assignments were gutted (HW3 made much easier, HW4 basically removed). Neither of these extremes was helpful for a student that wanted to learn the material. The course staff also made the decision to give an extension on a problem set two days *after* the deadline, something that is in the running for worst course administration decision of all time. Lectures were not very interesting and stopped a couple of weeks before reading period. They paralleled a book that was, for the most part, too theoretical to be a useful read. However, the material that the problem sets cover is interesting and fun to work on. If the course were better managed, it could be great.
The material you learn is so helpful and interesting but I don't love the way they teach it.
This class seemed to have a lot of potential in the beginning, became the bane of my semester in the middle, and turned out pretty ok at the end.Pros:-Become very familiar with Javascript and D3 library, great for web programming!-Gain familiarity with HTML/CSS/Canvas which is useful for web design-Gain exposure to many different kinds of visualizations-Take ownership in a cool project at the end!-Learn to troubleshoot lots of bugs and errors-Learn a little more about git and github than the intro cs courses-Only 4 psets, 1 project, mostly optional lectures/sections, and no midterms/final!Cons:-Lectures are completely irrelevant to the psets (I ended up attending less than 10% of classes)-Psets can be very difficult and time consuming (20-30+ hours just troubleshooting)-Project can take up a lot of time-Office hours are often overcrowded-Most learning is done by yourself/stackoverflow/googlingOverall, I was really excited for this class. Data visualization is an important topic used by almost all fields and this was a great way to learn a little more about the topic and practice my coding skills. However, I felt that the class itself did not prepare me for any of the actual coding needed. In the end, I had to learn most of the coding myself through googling, which by itself is a useful skill too. This wouldn't have been so bad if it wasn't for the ridiculously long psets that took over 30 hours to complete. A fair warning: D3 can be a really weird language that takes some time to get used to. Additionally, a lot of bugs will pop up that will make you feel incredibly frustrated. Nevertheless, working on the project with two other partners at the end was actually a really rewarding experience. For someone with little real world coding experience, our project felt pretty substantial instead of just a random web app like for CS50.TL;DR Cool class that was taught poorly and had terrible psets but had a fun project. Good for people interested in the topic, want exposure to web programming, or are ok with self-learning everything.
It is fun class to build an interactive visualization on a website. Although the lecture is not really used in problem sets, it still gives good framework of how to design visualization. The class was really disorganized at first, but Alex was really quick to accommodate students who fall behind. I would say it is his first year as the head of the course, so he did quite a good job although not perfect.
This class is unique in that there is a significant amount of extension school students. Take from that what you will. It's a pretty easy class. One of the psets was very time consuming and tedious, but it's just a matter of having section better align with the psets (which the staff got a handle of for the last pset). Many of the TFs were  completely useless. I wouldn't recommend this class.
Lectures are chill, assignments are hard.
As far as CS classes go, this is an oddity. It's not going to help your become a strictly better programmer, and so you go into it thinking it will be easier than other CS classes. However, the opposite is true. While the coding part of the class may not be highlighted in lecture, it is ALL that you will be graded on, meaning that your coding needs to be up to snuff, or improved independent of the class to keep up. The instructors will argue that what they are teaching are the fundamentals - that the coding languages will change over time, but the visual ideas will stay the same, giving them reason to not focus on the coding. However, what happens because of this is a lack of structure in the homeworks. Imagine you are in an Art 101 class, and the professor is showing the class the Mona Lisa, speaking about how the subtle colors in the background highlight things.. etc, and you leave class excited to paint your own masterpiece. However, that night when you sit down and try to paint, you realize that no one ever taught you how to draw lines or circles, and thus you are stuck at the low level problems that your professor never spoke about. This is the problem with this class.
This class was unnecessarily time consuming and I feel like I barely got anything out of it. If you're a CS concentrator, this will knock a requirement out but you won't feel rewarded while doing it.
take this class only if you're interested in learning only how to use D3. this class doesn't teach much else by ways of data visualization, besides some basic design principles. if you're not willing to spend 50+ hours per pset trying to make your homework look good, it's not worth taking the class when you can easily take your time learning D3.
This is a fantastic course, hands down. Lectures teach you the why, and problem sets make you learn the how, and you will spend a lot of time on the later (each problem set ran me about 40 hours, and I consider myself good at coding but just a CS secondary). This course is not difficult conceptually as are other CS classes.  Don't come into this thinking it's a "gem" of a CS course--it has its hiccups. If you've never dealt with JavaScript before, you'll probably be fine, so long as you make the effort to understand what tools JavaScript, jQuery, and D3 each provide towards getting you to the product, and when to use each.  I really encourage you to not code the homeworks just to get them done, but to use the structures and methods that the teaching staff layout in the section sessions.
This is a manageable course. You can get by only doing the assignments (4 bi-weekly homeworks) and the final project. Guest lectures are mandatory, and some of them are interesting. But this course is not necessarily easy. You essentially need to teach yourself how to use the D3 library to complete the assignments, since the lecture material is on design. I recommend this course with reservations. Make sure you have enough coding experience that you can teach yourself how to use a new library in JS.
If Alex and the TF staff have adapted from this year, take this class. The material is incredibly interesting and what you'll learn to do is amazing. If the first homework is a bog, do not hesitate in dropping it. It might prove more trouble than its worth.
get a good non-hacky handle on D3. Not good for much else.
The content is extremely well made and the skill you learn are highly practical and applicable in other contexts. My only wish that it will be better organized in the future, with more help for students who are stuck with their work.
This was an impressive course. The material was extremely interesting (you probably would enjoy it more if are into or have experience in natural sciences and data analysis). There were some logistical issues with homework grading, but overall it was very transparent and open.
I think learning D3 and JavaScript is very useful, and by trial through fire you learn it in this class. If you come in with very little JS background, it'll be a learning curve in the beginning. There are a range of CS aptitudes in the students. The biweekly psets took maybe 20-30 hours. The final project was fun. In the end, I found this class valuable, but I didn't attend any lectures (neither did most people, since it was all design and no coding, and design everyone has some sort of eye for even without the lectures) or very many sections (the section notes were comprehensive enough). Make of it what you will. D3 is definitely fun and you can do a lot with it when you have it under your belt, but this for me at least was incongruous to the "easy CS class" label that I came in thinking it was.
This course was a great introduction to visualization! The course staff was extremely flexible in altering the workload. Completing the problem sets made me feel like I had a good command of d3 and sufficiently prepared me to work on the final project.
If you are looking to learn D3 but need some motivation, this class is wonderful. However, the instruction is sub-par and there is little direction. You will spend a lot of time Googling and on StackOverflow to understand the topics. Also, taking CS50 or having some knowledge of Javascript before this class will be very helpful. I wouldn't recommend taking it if you don't have that experience.
It is a challenging course and you will leave with a powerful, concrete skill. However, because I had to focus so much on the programming skills I had less time to focus on learning the design skills and theory. Students did not attend lecture regularly which made the lecture portion very disengaging.
Take if you want to be motivated to learn D3
Design studios absolutely amazing! Grading very very easy due to 1-4 scale. Final project is the best part. Lectures are not worth going to, but the class teaches ridiculously useful skills that you can learn from the homework. Labs also not worth going to. Guest lectures pretty boring.
This class was incredibly useless. Alex needs to be replaced, and the final project was worth 50% of our grade. This was incredibly awful grade distribution and should change next year.Don't work with friends simply because they are your friends. You'll rate them highly and will screw yourself over when you get your grade.Lectures are incomprehensible, obviously not prepared for, and simply useless. When they run out of ideas, they get a random person to skype with the class for 1.5 hours. Useless, I tell you.
If you are interested in learning about visualization and D3, take this class! The psets and final project are a great sharpening ground for your D3 skills. Be warned though--the lectures are useless and don't teach you anything.
d3's really useful and it's good stuff to know. I've already used it in a few small projects while taking 171, and I had no prior experience with it. That said, you'd probably be able to learn d3 on your own in less time.
This course is ideal for anybody who is interested in design, web development and/or data science. You (are forced to) pick up D3 and JavaScript very quickly which can be incredibly helpful in web development. Moreover, the lectures are inspiring and clearly structured.
This course is unlike most CS courses at Harvard. There is very little guidance when it comes to the know-how of doing the psets, and most is learned through trial-and-error and stackoverflow. This being said, I thoroughly enjoyed the class, despite the sometimes very tedious assignments, and enjoyed the theory behind visualizations that was taught in lecture. You should become very comfortable with using Javascript after taking this course.
Simple material that could be learned by reading the online documentation.
Lot of personal work required.
C.S. 171 teaches two related skill sets: the theory behind data visualization and the use of D3 to create interactive visualizations. Both of these are phenomenally interesting and useful skills. The first is taught very well; you mostly have to learn the second in readings and problem sets (which you would anyway). In general, I thought the lectures were great and the problem sets were interesting. The optional "labs" were not good, and I know that is a major target area for improvement next year. The course had a certain air of disorganization, but overall I thought it was really rewarding.
Course is now harder, and more time consuming. Not as much exploration in lecture as it is individual googling/tutorial following
It was a solid course. Really helps you with ideas behind what makes a good visualization. You can tell the staff is passionate about this stuff.
Take this if you want an easy CS class an don't care much about actually learning a ton.
This class is pretty cool if you like data/design. PSET 2 was WAY to hard, but they toned it down after everyone freaked out. The lectures are completely useless, but even if you don't go the psets will still tech you a lot.
If you're going to take this course, take it for the psets. They are good, and definitely a reason to take the course, but you don't get much else out of it.
Good course for learning how to do visualizations, something that is very important. However the lectures weren't very useful, and the spacing of the workload was pretty poorly done. I'm pretty sure I spent longer on the second pset than the entire project.
Unless you know everything about Javascript, the psets in this class will consume your life. If you do not know Javascript and D3, you will find yourself googling for hours trying to find anything that will help. You can not count on office hours because there are so few and the tf's don't show up.
Unless the course finds more resources, it is extremely unstructured and lectures are not helpful. The psets are there for you to tackle on your own.
the course subject is awesome, and you probably can't get anything like it anywhere else on campus or online.  having said that, it's still very much a course in progress, and a lot of the redesign this semester failed badly.  the quality of a course like this really depends on the teaching staff and their investment, and this time around there wasn't enough of that to make it work.  also grading requirements were pretty shifty or often withheld - make sure standards are clear from the outset if you're going to take this course.  it's a lot of work and worth doing as it's a highly marketable skill set, but there needs to be more quality and consistency from instructors before i'd "recommend with enthusiasm".
This is not your typical CS class, they will not look at your code and instead grade for functionality rather than good code.  You'll learn how to copy/paste online D3 example and modify it, but you won't learn how to really code.
The class teaches interesting theory, the problem sets try to teach you the material. The two are completely unrelated though.
If you're only taking four courses, and the other three courses are lightweight, this class is definitely worth your time if you're willing to teach yourself on to program in d3.  Otherwise, if you're someone with limited time and many commitments, you're simply not going to get much out of this class.
Beware of some of the problem sets.
This is a great course that will equip you with a very marketable skillset-- being able to effectively and dynamically communicate your data through visualization.
CS171 is a class I recommend with reservations - if you struggled in CS50 and don't feel comfortable coding, learning D3 will be a very painful process. If, on the other hand, you've been an intrepid coder since grade school, this class will be a piece of cake. The lectures aren't particularly relevant to the problem sets, but you'll pick up some useful design tidbits along the way (hint: anything the New York Times does is gold). The problem sets are manageable, although the TFs can be flaky with office hours. The final project is a great opportunity to find a topic to explore and design a visualization for, although GitHub is a pain. Overall, a great class for CS secondaries looking for more exposure to front-end coding or concentrators looking to balance out a schedule.
Paired with CS 109, this class gives a good overview of the field of data visualization.
Take this class, as long as you feel a bit comfortable with programming - the skill will be one of the most useful ones you learn. Just make sure you have the time to teach yourself D3 - they don't really teach it in class.
You really do learn how to make interactive and dynamic visualizations, but the process can sometimes be convoluted and needlessly difficult. Don't take this course unless you are willing to learn things on your own and have some substantial programming experience.
The concepts in this course is no difficult, just tedious. I remembered spending so much time just debugging javascript and googling for the right piece of code. You won't be too intellectually stimulated by this course but this is a good time to pick up JavaScript and D3.
I don't think there enough material to justify a class that only teaches visualization, or at least Hanspeter hasn't come up with enough yet. The lectures feel artificially stretched for content by long periods of design critique or tangents into intro psych material that is interesting but not directly relevant. The class also has guest lectures and then ends early so there are very few actual lectures. The problem sets are substantial and force you to learn D3 and think about design. I would take this class if you want to force yourself to learn web visualization technology or are interested in data visualization and want a CS class that doesn't require math.
This is an interesting class with cool projects and some engaging psets. However, some of the psets are very challenging and there isn't always as much support as desired.
From what I've heard, this course gets harder every year. There are only 4 homeworks (one every two weeks), but the first two were BRUTAL. The only listed prerequisite is CS50, but you'll have an extremely hard time with the homeworks if you aren't familiar with JavaScript. All the homeworks require building visualizations in d3, and while they're not conceptually or intellectually challenging assignments, you'll spend the majority of your time (5-10 hours) debugging your code and trying to learn the intricacies of JavaScript and the d3 library. There's not much guidance in learning d3 and JavaScript - even though they hold weekly coding labs, they don't go into nearly as much depth as the homeworks require. The problem with office hours is that TFs have to read your messy code and debug it, which requires more time than they can devote to each student. You'll get decently good at d3 by the end of the course, but if you're taking this with CS51 or a similar course you'll get destroyed in the weeks where problem sets overlap. I got through most problem sets by combing through Piazza for helpful threads.
so while lectures don't really match up to the psets and you may be frustrated as you spend hours trying to figure out something you weren't taught, the material you learn in this course is really cool.
CS 171 is an interesting look into visualizations and D3. The assignments are big but you're given ample time to complete them. Be warned-- the lectures can be boring, especially since they're taught by a wide array of people with various degrees of teaching ability. The final project is fun and there is plenty of time.
Lear how to do html and css properly before coming in. Most people tend to not learn it properly and end up choosing a hackish approach on their problem sets because of the time crunch.
Very interesting material, but the lectures aren't that good
I have never been in such a poorly planned and executed class. While this class is def a light workload (for a CS class at least). It was HORRIBLE. You basically just teach yourself everything the whole semester by googling things online. Lectures are an absolute waste of your time, and the tfs are clueless when you go to office hours.  That being said, D3 is a pretty cool javascript library, and this class just forced me to sit down and learn how to use it.
Overall, the class does teach you some very tangible skills. But it was so poorly organized and the problem sets took way too long. I'd wait a year for them to restructure it again.
The problem sets were horrendous. They didn't match up with what was taught in lecture, and everyone ended up spending upwards of 40 hours (this is very literally, without exaggeration. Some people reported 60 hours, even) on them when they were "aimed to take 20 hours". This wasn't because they were just long and we were learning twice as much - it was because we weren't taught the syntax and the specifications were extremely vague. Most of the time was spent trying to figure out syntax and googling things nonstop, so when we finally got it in the end, it felt like we could've learned just as much had we straight up been taught or given examples of the syntax to begin with. The instructors received a lot of flak from the students about this this year, so hopefully they will revise the psets in following years.
If you are comfortable programming, this class should be very very easy for you.  This was my third computer science course at Harvard (the last one I took before this was two years ago though!) and I found it surprisingly basic in terms of the difficulty of the programming language and problem sets.  I personally did not do any coding before Harvard and did not have any trouble at all with this course.
Take it if you have to complete a requirement and want an easy way to do so. However, ONLY take this course if you HAVE to take it. The instructors and material have so much potential and yet it's remarkably all squandered on a horrendously designed, uninspiring course.
If you are interested in Visualization/Data Science, take this course!
This iteration of the course was very lacking and disorganized. Lectures had nothing to do with the problem sets.
This is one of the rare Harvard courses that actually teaches you a specific skill. On the one hand, that's a great thing unless you're a true devotee to liberal arts ideals. On the other hand, you could teach yourself D3 (the programming language used) online without the need for a course, since the lectures add nothing.
the psets are fun to do. the lectures are not relevant at all to the psets and labs are only marginally useful. Office hours are a nightmare as many students show up unprepared without having attempted to debug their programs, leading TFs to be overwhelmed by the number of people who need help. The course definitely had its up and downs in terms of organization and logistics since this is the first time the psets have been given, but I think this course will get better next year.
The psets are COMPLETELY unrelated to the lectures. All of the lectures are pretty useless when you look at what the psets and final project are asking for. You learn ZERO coding in lecture (and simply look at pretty graphs), and then are expected to know how to implement everything on the psets. Not the best class I have taken
This course should probable be renamed "Intro to Web Design with D3". Now, D3 is a fantastic platform, and being able to use it to create smooth, interactive visualizations is a pretty useful skill. But the course didn't really cover how to think *about* visualizations; the problem sets were largely of the form "here is a thing; make it". So in that respect, fairly disappointing. All in all, a time-consuming but not ultimately challenging course (at least for a CS concentrator), but not really a *bad* one.
Even as someone who earned a good grade in this class, it was severely disappointing and disorganized. Several decision by the teaching staff were entirely ill-advised and suggested a lack of planning, like having labs (where the code learned that week was taught) on Thursdays when psets are due Monday, instead of having the labs on Tuesday or the Psets due Wednesday. You are expected to know how to style a website very well coming in if you want a good grade on the midterm and final projects, but they never teach you much about it. They teach Jquery at the very end of the course, despite the fact that it could simplify a lot of the earlier parts of the course. The lectures were full of fluff, like useless activities or abstract/vague instruction that doesn't mean anything when you are actually trying to put together a visualization. The best part of the course is the subject itself, but unfortunately the staff in charge this semester did not put anywhere near sufficient thought or planning into it. Give this class a couple more years before trying it as they continue to work out the kinks
Get prepared to think in new ways about design. Get rid of your design fixation. Get ready to learn the skills that will help you put your imagination into code.
This is a fabulous course if you're interested in front-end development or general design as well as presentation of data. This course presents a great introduction to D3 and explains the different design concepts very well. This is one of my favorite courses I've taken thus far.
Extremely useful skills in data visualization and web design principles. Easier of the CS classes in terms of coding, with a good amount of design incorporated.
Apparently made easier than past years, yet this means that there's always something to turn in every 2 days.
Useful and relaxing
this is an awesome class. the instruction is great and things were clear.
Look. If you are seeking an easy A to fulfill your computer science secondary then this class is for you. If you are seeking to learn about D3, read Mike Bostock's book and skip this class because honestly it is a large waste of time. You could learn D3 in a forth of the time and you would have to deal with all of the unnecessary and inapplicable busy work that this class assigns. I can't tell you how many times I felt like I was spending time on things that had no real academic value in this class.
Coding isn't hard (compared to something like cs51) but directly teaches d3 and useful visualization skills
If you know Javascript and want to learn about visualization, this class is excellent. If you don't know Javascript, you'll probably learn the language albeit specifically for d3.
I went in as a CS senior planning to leverage this class to do a great fun final project, and I did just that. Pretty chill, of course workload was alright, but the way the class was structured causes a lot of cognitive "checklist" load when you go onto the canvas website and always have 3-5 reminders every week with the "minute papers" and different parts of assignments. To the teaching, staff I'd recommend that some of the structure be more optional and encouraged, to be there for those who want it, and not be there to bog down others.
Better pick an attractive topic for the final project.
Really boring, the material covered in this class could be learned in a few weeks. Easy class though.
This course taught me d3 and gave good examples, but I probably could have done that by myself.
Try to be in a final project group with people you like and can work with. Start coding your final project early! Do the readings; they're fun!
A pretty easy CS class, mildly interesting and gives you some marketable skills. It would have been nice if the assignments had been a bit more challenging. I think they overcorrected from previous years, when the class was disorganized and psets were long and finicky.
This class was very interesting and I learned a lot. I now feel very comfortable using d3 and javascript.  Even though there's a lot of work involved, I felt that the regular labs and assignment were necessary to fully benefit from the course and its material, which you can only assimilate by practice.I however felt that it was sometimes overwhelming when you take three other demanding course.
Important and fun class. In general, you should know principles of visual design, and this class (as it was this semester) teaches those pretty well. As far as teaching Javascript goes, it's not that great and you end up just going through documentation and previous examples a lot. However, that has its own merit. Plus, the final project was a lot of fun.
if you like data visualization, take this class. not hard and you will learn a lot. can have some annoying assignments occasionally, but overall is a good class.
It is an amazing way of learning how to better communicate hard problems.
If you are interested in learning about HTML, CSS, Javascript, then this is a course that introduces you to that.  I think the level this past year was definitely easier than previous years.  The course staff was pretty invested in the class and I think if you need a CS course, than this is not a bad class in terms of time and difficulty.
In this class, you do learn how to use D3 but you probably won't ever want to use it. You learn how to code in javascript but at the same time, you don't learn anything about the language itself (so sometimes weird bugs happen and you have no idea what's going on). Lectures were kind of boring, but the labs were indeed pretty effective in teaching you D3. If you want to learn D3 basics as well as CSS, then you should probably take this course.The midterm was a hassle and I felt like it was kind of pointless. Studios were a complete mess, and were there just for the sake of it. I hated the minute papers that we had to do each week because that forced you to go to lecture. I dislike it when CS classes enforce attendance.
The course has improved significantly and the TFs are super supportive, Nice class to take with moderate workload but also lots of valuable skills to take away!
This course, like 109 and unlike most CS courses at Harvard, will actually teach you an actual skill. It will also, like 109, be plagued by procedural and conceptual deficiencies that will drive you insane at every turn. Most lectures are a complete waste of time, section is a complete waste of time, and the poster session and design fair are complete wastes of time. Also, while the main point of the class is to learn d3, they don't actually teach it to you - you have to teach it to yourself (though if you've taken any CS courses at Harvard you know that's par for the course. It's just infuriating if you're someone who learns well through examples or in-person). All that being said, it's a really manageable workload (as long as you come in with HTML/CSS/Javascript experience), the assignments are good, and you will learn a lot. So... just know what you're getting yourself into!
The class covers an incredibly exciting topic, one that is especially applicable in the workforce (for any concentration, really). Definitely one of my favorite classes I've taken here, though that was due in large part to the quality of my TF. The assignments were stressful and the topics seemed a bit unorganized, but the overall gain from the course was worth it. While some people consider it an "easy" CS class, don't be fooled -- I spent at least 10 hours each week on it, often times much more. Then again, I don't have as much prior experience as others. Additionally, be sure you have a solid set of CS skills before taking this course.
It would've been alright when it wasn't that intensive of a class, but right now there's too much busy work and far too little reward to make it worth it. Take some other CS class instead.
This class is very easy compared to many other courses in the CS department. Take it if you want an easy
This class teaches a really needed skill, and having it will make you look like a wizard in group projects with others in the future. D3 is the gold standard in visualization, but it has a steep learning curve, so don't tell yourself that this is something you can learn after you leave Harvard. Learn it here and now.
I was in a section with two friends, worked on labs with them and did the final project with them. There were some tense moments during the final project in the last two weeks, but happily our friendship survived, and we ended up doing really well on the final project. My experience was made easier because I had a project team from the very beginning. My previous coding experience made the homework and labs easy, but I still feel like I learned a lot about javascript and object oriented javascript, especially with the final project.
This class is manageable, but has a lot of busy work. The TFs aren't necessarily on the same page on what is going on homework wise, so be careful.A very useful and practical class. It's colisted in the extension school.
Unless you're already proficient in coding, it would be better to take another course with more scaffolding.
This class is awesome. Quite easy and very doable for a CS class. It teaches you awesome skills not only for mastering d3 and cool visualizations, but also basic skills in web development--by the end of the course it's easy to make your own website.
This class is not the most challenging, nor will you learn the most, but it is fairly useful.
Data visualization is a useful skill and d3 is a beautiful framework for data visualization. Even if you don't ever use d3 again, the design principles that were covered will come in handy in any user-based project. Restructuring that happened this year made the learning curve for d3 / javascript much more manageable. Highly recommend for CS concentrators who are already comfortable with coding as an elective -- will learn a lot with a lesser time commitment than most other CS courses.
Class got so much better - psets are good and not as intense, labs are really useful because they were very relevant and  helped you prepare for psets. Overall, best CS class I've taken at Harvard, slightly on the easier side compared to other more intensive classes.
This class is not very good at explaining how to effectively complete the assignments - they're very good at showing you how they would do things, but not how you should.  Also, Professor Pfister mostly lets his TFs teach the class.
I took this class out of CS50 and, while it was really difficult at times, it wasn't unreasonable.  Hopefully they improve the Tuesday lectures to make them worthwhile in the future.  The labs were helpful but long, so it was like having two homework assignments a week due on the same day.  They could definitely improve on feedback given on sketches and design
So, there was definitely a lot of effort put into making CS171 a great class. I think it definitely was a lot of fun and I learned a lot, even though all the CS50-esque stuff will hopefully be toned down a little bit. I didn't have too much coding experience, which made the first few weeks challenging, but once I improved, the labs and the final project were actually a lot of fun. Definitely a LOT of things to hand in each week (minute papers, pre-quizzes, etc.) but I think it's worth it. :)
It was really easy this year. Didn't like all the "planning" and "design" aspects of the final project. Felt like the course fell apart near the end.
Take it if you want to learn more about Javascript and web development. It's def one of the easiest programming courses.
CS171 spans a wide range of web development tools (HTML, CSS, Javascript, d3, jQuery) and graphic design principles (Gestalt, Tufte). This is a pretty fun class, although if you are not familiar with coding and web development, homework might take a lot of your time.
I really enjoyed the course -- a fairly easy course in the CS department, great if you want to get a secondary and don't want to take the hardcore classes. It's very interesting to see all the different final projects!
Read the D3 book if you have some degree of self discipline.Course wastes your time like no other class I have ever taken.
CS171 teaches you skills that are both impressive and professionally useful. Plus, designing visualizations is fun!
If you want to learn some skills that could catch employers' attention and land you a job, this class is definitely one to consider.  It's also lots of fun and very hands-on.

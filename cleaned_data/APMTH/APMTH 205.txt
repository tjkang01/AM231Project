Very helpful course. Definitely necessary if someone is interested in using computational tools in research. Also very interesting and exciting applications in the problem sets
Problem sets are extremely manageable if you go to office hours and get started early. No final exam and a low-weighted midterm make for a below-average stress factor. I would almost suggest not going to lectures if Rycroft is teaching - watch the lecture videos online from the 2013 course website, as the teaching quality is much higher.
This is really helpful class for understanding general numerical methods. I learned a lot this semester. Although I spent a lot of time to review the contents, to do homework and project, it was fun and valuable. I highly recommended this course to students who are interested in numerical methods.
This course gives you the tools to implement a number of numerical algorithms and gives you a good foundation for how and why different algorithms for different situations.
This course was extremely satisfying (when comparing with other courses I was enrolled in). The material was intuitively structured and presented in a way that allowed you to expound on when working on the homeworks. The course is challenging but it is put together in an accessible way and Chris (and by extension, his TFs) was very helpful when ever I had questions.
This class is a lot of work but very fun and interesting if you like math + programming + computers!
If you would like to have a working knowledge of MATLAB and learn some basic numerical techniques this class would be useful.  Its also not particularly difficult.
pretty useful for lots of fields under SEAS
This course is not interesting and it does not provide you sufficient knowledge about scientific computing that you are supposed to learn.
by far the most useful course i've taken
pedagogical course
This course does not present a solid theoretical background in scientific computing.  Some material in the problem sets were difficult because the students did not have a good understanding of the theory.
This class is a fun introduction to numerical methods.  The problem sets are very practical and given on a generous schedule (so they don't feel like busywork).  You learn a lot of useful aspects of numerical techniques, and perhaps more importantly, begin to get a framework of how to understand the usefulness of a particular numerical method.
A good class about getting an introduction to some useful basic scientific numerical methods through a somewhat more theoretical perspective.
Check who will be teaching first
The classes teaches what it claims to teach: I came away with an understanding of how to use a computer to solve challenging mathmatical problems.
The assignments in this course take an excessive amount of time to complete. The material is very valuable, but I would only recommend this course to students taking only one or two courses for the semester.
If you want to use numerical methods to approximate something in applied math -- particularly ODE's, integrals, derivatives -- then this course is for you. There is much less emphasis on the source of numerical errors than I anticipated, since discussion of this was mostly limited to applications to particular problems. We did not cover topics such as how to order computing operations in order to minimize errors, for example. We also did not cover much material related to efficient computing. But if you find the material relevant to your work, then you will not find a better, clearer, more intuitive explanation anywhere else. It's also a great and relatively soft introduction to Matlab assuming you know a different language.
The problem sets do take a substantial amount of time to complete. Chip at it a little every day and you should be fine.
Make sure you know what you're getting yourself into. It's good material and in hindsight I am mostly glad that I took the course. But it is a huge pain. The problem sets are unreasonably long, the class was extremely tail heavy, and  there was no flexibility.
This course will introduce you to the major areas and concepts of scientific computing. In particular, you will learn numerical techniques (and the corresponding concepts) for solving integrals and differential equations, finding eigenvalues and eigenvectors, interpolating data, and finding solutions to linear systems. You will also become proficient with MATLAB. I highly recommend this course to anyone who uses computers in their research.
Be prepared to work
This would be a great survey of numerical methods for applied math PhD candidates. If you are not an applied math PhD candidate, save yourself the pain. The assignments are unbelievably long and tedious; if you are taking more than two classes it is probably not a good idea to take this course.
If the specific problems are going to be useful for your future, you may well like the course, though it will be incredibly challenging.
This class will eat your life, and the material isn't that interesting.  It's possible to complete the work, but you will spend many late nights getting it done, with help from the TFs and your classmates and the Internet and the lecture slides, and then when you're done you won't feel any relief.  You'll just think, "Wow.  That took way too long."
If your math background is not top-notch, this class will be extremely difficult. Be prepared to spend much more time on assignments than you would for other classes.
Great class for numerical analysis and scientific computing.
This course covers a lot of material (I know what PDEs are and how to solve them numerically!) but there's so much content that students can't very well learn any of it. If this were a student's only demanding course, taking it could be advised, as it seems to cover all the big topics in numerical methods and optimization. But covering so much comes at a cost, and students without sufficient time are left to scramble to finish time consuming problem sets. Moreover, there's much math hiding in, e.g., the optimization algorithms / numerical methods we use, and some is lost by glossing over the derivations.  Knowing that these methods exist is nice, but understanding how they work would be better.
This course is a intense survey of advanced scientific computing topics. The lack of resources- including limited access to solutions, few examples, no section, etc- didn't make the class experience very pleasant. Attending lectures wasn't very helpful as most of them presented a straight reiteration of the notes. All homework assignments took generally above 45 hours and there wasn't much formal discussion of them prior to their due dates.
I think the depth and breadth of the material covered is just right for a physical scientist and engineers, but I can imagine if you are a CS person, you may be unsatisfied with the somewhat hand-wavy arguments covered.
This course is one of the most practical and useful courses I've taken.  You will learn a lot of useful skills that you can apply in computing for research, and unless you already had a lot of matlab experience, you'll end up a lot better at using matlab than when you began.  The problem sets can occasionally be tedious, but they're worthwhile to complete.
The first half of the course was very boring and took up a lot of the class time. There didn't seem to be enough class time to cover the last two units which were by far the most interesting and useful.  Professor Knezevic would rush through topics just so he could justify to himself that he had "taught" the material that an assignment covered.   I would recommend that instead of taking the class, if you want to learn the material, download the lecture notes and assignments and do the assignments on your own. Students were not allowed to collaborate with each other on assignments.  Final word: I did learn things in this class but, I did in spite of the professor rather than because of him.
The course load is kinda heavy
Homework takes time.  Problems are often a significant leap in complexity and difficulty from lecture material.  But the assignments are worthwhile practice.
This is a good course if you're looking for practical skills plus a basic understanding of whats happening underneath.
This course isn't easy, but if you have the time to put into it, I think you can get a lot out of it.
Great professor who goes through things very logically
You will learn a lot about both implementation and theory of various numerical algorithms - math aspects are heavy on linear algebra, implementation parts will be aided by some MATLAB knowledge. Mix of implementing algorithms yourself and using built-in MATLAB functionality. Probably 5-15 hours per problem set (5 total) depending on your skills with the previous.
Good class with a nice mix of theory and application.
The material itself is fascinating and taught in a straight-forward, comprehensive manner by a brilliant and caring professor. I do wish we had had more guidance on the final project, but Prof Knezevic is quite an amazing professor in how well the present the material. Very relevant and interesting class. Would recommend with enthusiasm.
If you do any kind of large-scale data analysis for your research, this course will help you understand, concretely, some of the potential pitfalls that you can avoid by applying the appropriate approximations, error analysis, etc.
The lectures are just OK. You learn by doing the problem sets.
Be prepared to put in long hours if you have limited math background.
AM 205 is one of the best courses I've taken. Dr. Knezevic is a superb instructor who gives clear, organized lectures. The homework matches up perfectly with what's covered in lecture and is difficult but manageable. The course content is broad enough to cover just about every type of mathematical situation you'd possibly encounter in the real world. Since scientific computing is linear algebra writ large, you absolutely need a previous course in linear algebra. The bits and pieces you pick up in calculus and differential equations won't cut it.
This is a great overview of many practical numerical methods but be prepared to do a substantial amount of programming in MATLAB. Try to follow derivations as best you can and ask questions.
The lectures for this course were very slow, belaboring simple linear algebra and skipping interesting topics in numerical analysis. I stopped going before the end of the semester, the first time that I have done this for a Harvard course. That being said, the material is very interesting and was eye opening for me as a scientist. The problem sets were very pedagogical, and that is where I did my learning in this course.
Unless you plan on doing computational work in your graduate research, I would not take this class. It's not worth the amount of time it requires.
Brush up on MATLAB, especially graphing.
Keep in mind that this is an Applied Math rather than a Computer Science course - that means that there is an emphasis on proofs of stability, convergence, etc. rather than just methodology.  Assignments are very well-written and will guide you to learn, lectures are sometimes dry but overall useful.
The course was frustrating because it covered a very interesting subject area but at too slow a pace and too shallow a level.
A good course that is well taught. Expect to do a reasonably large amount of work.
You'll learn how a variety of numerical methods work under the hood, which is useful even if you never end up implementing them yourself. The homework is at a good level of difficulty and a bit on the long side, which is about right for an introductory course.
This course is incredibly easy but also very useful. The bulk of the problem sets is based around implementing algorithms talked about in class in Matlab, so if you want to learn Matlab and some basic numerical computing methods, take this course. The homework can be a bit time-consuming, mostly because it may take a while to debug code, but is well-crafted and corresponds closely to the material learned in class.
For most of the semester the class is reasonably difficult. I really tripped up with the final project, which ruined the semester for me. I had never before taken into account the distribution of work at the end of the semester, so I would urge you to take twice if you're thinking of taking this in addition to multiple other classes with time-intensive final projects. David was an excellent professor.
I currently have the lowest grade in the class by a large margin, but I must say it was an ass-kicking both well deserved and heartily enjoyed.  The material is super interesting and the professor is fantastic.  Probably the most useful course I've taken anywhere ever.
Absolutely awesome class--you will learn how to implement and think about numerical method.  The course is very well paced so that you never feel like you're missing concepts but you also are definitely not board.  I learned a ton in this class that I didn't get out of other math classes here and it really solidified my understanding of core concepts surrounding optimization and linear algebra that I definitely needed to review.
You will get a lot of hands-on experience with scientific programming from the homeworks.
This class covers a lot of very useful material and it does so at the right pace and with the right workload. Dr. Knezevic was an excellent lecturer and I highly recommend this class to anyone in science and engineering.
As an undergraduate who had taken AM 111 and Math 21b, the course was definitely doable. Its pretty easy to tell whether or not your code is working, so you just need to set aside a good deal of time (~20 hours) per pset to work.
Definitely gives you exposure to a lot of material.
great little survey course which opens you up to the field of scientific simulations
Prof. Knezevic is a phenomenal teacher. He is very good at motivating the subject and giving good intuition about algorithms. You will learn a lot of Matlab by the end of the course, which is important for many fields of science. This graduate course seems quite suitable for advanced or motivated undergraduates as well.
They could do a better job with support with the problem sets (particularly actually providing solutions after the problems are due,) but the notes are thorough and the material interesting.
The course runs through many methods for solving difficult problems numerically. As an engineer, I was already using methods I learned in AM205 for assignments in my other classes during the semester. The assignments take a significant amount of time, but they really help you understand the material.
Very good course; it is what you take out of it so make sure you go into it with some background.
This course will help you become proficient in using MatLab for integration/quadrature in physical science fields for grad school as well as generally understand the different methods people talk about.
Matlab experience is strongly recommended.
I highly recommend this class!  The material is interesting, if not particularly challenging, and you will learn a lot about how various mathematical ideas you've studied can be applied to solve numerical problems.  The assignments are well-written, reinforcing the material from class effectively while still being relatively easy.
This course was excellent!  David clearly put a huge amount of effort into making all the pieces of the course fit together.  Lectures were clear and well-organized; they even had chapter numbers like II.2!  The problem sets were perhaps the most carefully-crafted assignments I have every done in any course.  They were extremely well-connected to the lecture material, and they brought out many interesting ideas and examples in scientific computing.  Also, they really helped to improve my Matlab ability, which was my primary goal in taking the course.
I really enjoyed this class - the lectures are great, the problem sets are challenging, and the material is useful. Take care in choosing a good topic for your final project!
This course was very interesting! You will learn what goes on behind the functions of a program like MATLAB. The course also helped me learn the vocabulary of computing and was a very good review of linear algebra in the context of computing.
If you're a graduate student in engineering and science who may require some numerical techniques for research, this is a highly recommended class that gives a comprehensive survey for what's out there to use. If you're a mathematics or computer science student, you may find it too easy.
A really great class for understanding very commonly used techniques in many research fields when it comes to analyzing data.
The class is very helpful for learning useful numerical methods and, basically, tools in Matlab. The lectures could have been a bit more organized and/or useful; however, the assignments and the office hours with Mauricio were really helpful in learning the material.
interesting course, but the workload is not worth it
It is incredibly practical for anyone doing scientific computing. It gives you an education to critically think about the methods of your scientific computing and therefore better understand your results.
Get ready to make MATLAB and computational algorithm development your best friends.
You learn and actually understand many of the algorithms that you need for numerical analysis.
The algorithms are interesting. They're also useful--but you won't see any examples of that in this class. Mauricio means well and is very nice, but he has difficulty providing actual guidance on the final project, his lectures add very little to what you can get from the book, and there's no support for learning MATLAB--it's assumed you can pick it up yourself, which you can, but it'll be painful.
It teaches how Matlab does what it does.
If you thought you knew matlab, think again.
Expect a moderate amount of work, a high amount of information, and a very cool final project. I very thoroughly enjoyed the class!
If you have no experience in Matlab and numerical methods, it's a very good course to take.
it is worthwhile in terms of the numerical techniques and the material is likely to be very useful
I highly recommend this course only to those interested in numerical modeling & solving (not generic scientific computing).
Teaches a lot of detail about numerical methods.
It's a really useful course if you want to learn how to program methods to solve hard equations!
Material is so important and enjoyable
This course provides a broad introduction to fundamental concepts in applied mathematics. I found it valuable, though the lectures were fast paced. Therefore, I recommend supplementing Chris' lectures with those from the previous year, when the course was taught by David Knezevic (videos available online). If you have studied mathematics or physics formally, this course will not be too much of a challenge. If you come from another discipline, or have not seen the prerequisite material in a while, this may be difficult, but definitely still doable.
fun class.
If you like coding functions that have already been written in Python or MATLAB then AM 205 is for you. If you'd rather take a class where the material you learn will be applicable later on in life, then find another course.
You learn a lot of good stuff!
4/5 difficulty, ~10-15 hours per pset

This was actually a pretty good course for numerical methods. It's pretty well-taught, and Prof. Rycroft gives good explanations for all the math behind the algorithms. The slides are also excellent and help clarify things when lecture is hard to follow. Beware of the homework assignments. They can take a surprisingly long time, especially because bugs in numerical algorithms are extremely frustrating. Be very careful while writing code and be sure to check all the little pieces, and watching out for pass-by-reference things. If you can, start early because debugging is very frustrating. Despite struggling on the psets, I actually liked this class and felt like I learned quite a bit from it.
Time consuming, but teaches good subjects
This class is quite challenging. A lot of material is covered very quickly. Be prepared to spend a lot of time on assignments and expect to get little to no sleep during the 24 hour midterm. You learn a lot of useful stuff though.
Important class - you learn the important methods
This course is pretty interesting, but not sure how applicable the methods are.
You must be extremely confident with PDEs to take this course. It is tough and if your not prepared you will not be able to complete the assignments.
It's a manageable course that covers a good amount of material on ODE, regression, interpolation, lin alg, and spectral analysis. The course is very much applied and focused around programming, with proofs as necessary. The course emphasizes breadth over depth.
